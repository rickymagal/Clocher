<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespacetest__ptq__calib__pipeline" kind="namespace" language="Python">
    <compoundname>test_ptq_calib_pipeline</compoundname>
    <innerclass refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests" prot="public">test_ptq_calib_pipeline::PTQCalibPipelineTests</innerclass>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespacetest__ptq__calib__pipeline_1a3db0bd8da65bd5e16dcd4c823ffd6092" prot="public" static="no" mutable="no">
        <type></type>
        <definition>test_ptq_calib_pipeline.THIS</definition>
        <argsstring></argsstring>
        <name>THIS</name>
        <qualifiedname>test_ptq_calib_pipeline.THIS</qualifiedname>
        <initializer>=  Path(__file__).resolve().parent.parent.parent</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/python/test_ptq_calib_pipeline.py" line="19" column="1" bodyfile="tests/python/test_ptq_calib_pipeline.py" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetest__ptq__calib__pipeline_1a98e7dc6c13a5a2a46ee2171be741a367" prot="public" static="no" mutable="no">
        <type>str</type>
        <definition>str test_ptq_calib_pipeline.PTQ</definition>
        <argsstring></argsstring>
        <name>PTQ</name>
        <qualifiedname>test_ptq_calib_pipeline.PTQ</qualifiedname>
        <initializer>=  <ref refid="namespacetest__ptq__calib__pipeline_1a3db0bd8da65bd5e16dcd4c823ffd6092" kindref="member">THIS</ref> / &quot;benchmarks&quot; / &quot;ptq_calib.py&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/python/test_ptq_calib_pipeline.py" line="20" column="1" bodyfile="tests/python/test_ptq_calib_pipeline.py" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacetest__ptq__calib__pipeline_1a2adff5a67303aabe3ec5523cb2d0993b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>test_ptq_calib_pipeline.verbosity</definition>
        <argsstring></argsstring>
        <name>verbosity</name>
        <qualifiedname>test_ptq_calib_pipeline.verbosity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/python/test_ptq_calib_pipeline.py" line="81" column="1" bodyfile="tests/python/test_ptq_calib_pipeline.py" bodystart="81" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespacetest__ptq__calib__pipeline_1a9d69fc9e760866fe141bc720b6e0c261" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_ptq_calib_pipeline.write_f32_bin</definition>
        <argsstring>(Path path, int rows, int cols)</argsstring>
        <name>write_f32_bin</name>
        <qualifiedname>test_ptq_calib_pipeline.write_f32_bin</qualifiedname>
        <param>
          <type>Path</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Write a simple 2D ramp into a float32 .bin file (row-major).</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/python/test_ptq_calib_pipeline.py" line="23" column="1" bodyfile="tests/python/test_ptq_calib_pipeline.py" bodystart="23" bodyend="32"/>
        <referencedby refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" compoundref="test__ptq__calib__pipeline_8py" startline="39" endline="68">test_ptq_calib_pipeline.PTQCalibPipelineTests.run_ptq</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespacetest__ptq__calib__pipeline_1a09ea2777fa731499969703f7f06e8af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test_ptq_calib_pipeline.read_json</definition>
        <argsstring>(Path path)</argsstring>
        <name>read_json</name>
        <qualifiedname>test_ptq_calib_pipeline.read_json</qualifiedname>
        <param>
          <type>Path</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/python/test_ptq_calib_pipeline.py" line="33" column="1" bodyfile="tests/python/test_ptq_calib_pipeline.py" bodystart="33" bodyend="37"/>
        <referencedby refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" compoundref="test__ptq__calib__pipeline_8py" startline="39" endline="68">test_ptq_calib_pipeline.PTQCalibPipelineTests.run_ptq</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Unit tests for the INT8 PTQ calibration pipeline (benchmarks/ptq_calib.py).

Covers:
- End-to-end run on a small synthetic matrix
- Output artifacts existence (int8/scales/report)
- Report metrics sanity (cosine &gt;= threshold; small MSE)
- Per-tensor and per-row modes
</verbatim> </para>
    </detaileddescription>
    <location file="tests/python/test_ptq_calib_pipeline.py" line="1" column="1"/>
  </compounddef>
</doxygen>
