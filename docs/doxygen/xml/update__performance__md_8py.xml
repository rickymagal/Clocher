<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="update__performance__md_8py" kind="file" language="Python">
    <compoundname>update_performance_md.py</compoundname>
    <innernamespace refid="namespaceupdate__performance__md">update_performance_md</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceupdate__performance__md" refkind="compound"><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">Generate<sp/>docs/PERFORMANCE.md<sp/>from<sp/>strict<sp/>benchmark<sp/>JSON<sp/>logs.</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">Behavior:</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">-<sp/>Accepts<sp/>CPU<sp/>and/or<sp/>GPU<sp/>JSONL<sp/>files<sp/>(each<sp/>produced<sp/>by<sp/>scripts/true_tps_strict.sh).</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">-<sp/>If<sp/>only<sp/>one<sp/>side<sp/>is<sp/>provided,<sp/>it<sp/>still<sp/>renders<sp/>both<sp/>sections<sp/>using<sp/>any<sp/>existing</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/>counterpart<sp/>JSON<sp/>found<sp/>under<sp/>build/<sp/>(best<sp/>effort).</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">-<sp/>Aggregations<sp/>and<sp/>the<sp/>comparative<sp/>table<sp/>use<sp/>ONLY<sp/>the<sp/>last<sp/>3<sp/>runs<sp/>for<sp/>each<sp/>device.</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">-<sp/>&quot;Best<sp/>true<sp/>TPS&quot;<sp/>is<sp/>the<sp/>best<sp/>aggregate<sp/>TPS<sp/>across<sp/>the<sp/>currently<sp/>included<sp/>CPU/GPU<sp/>sections.</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">-<sp/>&quot;Run<sp/>Parameters<sp/>&amp;<sp/>Conditions&quot;<sp/>come<sp/>from<sp/>CLI<sp/>overrides<sp/>first,<sp/>then<sp/>CPU<sp/>summary,<sp/>then<sp/>GPU<sp/>summary.</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">-<sp/>Spatial<sp/>metrics<sp/>include<sp/>MB/token,<sp/>total<sp/>bytes<sp/>touched,<sp/>coverage<sp/>vs<sp/>model.bin,<sp/>and<sp/>effective<sp/>bandwidth.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">-<sp/>System<sp/>&amp;<sp/>Model<sp/>Info<sp/>is<sp/>discovered<sp/>locally<sp/>(Linux-friendly).</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">Inputs<sp/>(per<sp/>device<sp/>JSONL):</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">-<sp/>Per-run<sp/>rows:<sp/>include<sp/>tokens_generated,<sp/>wall_time_s,<sp/>tps_true,<sp/>latency_p50_ms,<sp/>latency_p95_ms,<sp/>rss_peak_mb,<sp/>kv_hits,<sp/>kv_misses.</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">-<sp/>Final<sp/>summary<sp/>row:<sp/>includes<sp/>aggregated<sp/>fields<sp/>and<sp/>configuration<sp/>(threads,<sp/>precision,<sp/>prompts,<sp/>model_dir,<sp/>etc.).</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>annotations</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>datetime<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>dt</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>platform</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>typing<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Any,<sp/>Dict,<sp/>List,<sp/>Optional,<sp/>Tuple</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceupdate__performance__md_1ad720a2eea113ced5851b5c3cae4d23a5" refkind="member"><highlight class="normal">Run<sp/>=<sp/>Dict[str,<sp/>Any]</highlight></codeline>
<codeline lineno="34" refid="namespaceupdate__performance__md_1a7de744a4f0142578863ae5f41e090f92" refkind="member"><highlight class="normal">Agg<sp/>=<sp/>Dict[str,<sp/>Any]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">#<sp/>---------------------------<sp/>IO<sp/>helpers<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceupdate__performance__md_1aabfd2fcbd91951cc329b904d3f67847a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1aabfd2fcbd91951cc329b904d3f67847a" kindref="member">_now_utc_str</ref>()<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dt.datetime.now(dt.timezone.utc).strftime(</highlight><highlight class="stringliteral">&quot;%Y-%m-%d<sp/>%H:%M:%S<sp/>UTC&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespaceupdate__performance__md_1a9bc426f3865fd06809eade1e79ea91a4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a9bc426f3865fd06809eade1e79ea91a4" kindref="member">_read_json_lines</ref>(path:<sp/>str)<sp/>-&gt;<sp/>List[Dict[str,<sp/>Any]]:</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>out:<sp/>List[Dict[str,<sp/>Any]]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>line.strip()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>s:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.append(json.loads(s))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>json.JSONDecodeError:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Ignore<sp/>non-JSON<sp/>lines<sp/>from<sp/>the<sp/>harness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="namespaceupdate__performance__md_1ac4d341cc6dc059359d9ed3dd061352d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1ac4d341cc6dc059359d9ed3dd061352d5" kindref="member">_partition_runs_and_summary</ref>(objs:<sp/>List[Dict[str,<sp/>Any]])<sp/>-&gt;<sp/>Tuple[List[Run],<sp/>Optional[Dict[str,<sp/>Any]]]:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>runs:<sp/>List[Run]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>summary:<sp/>Optional[Dict[str,<sp/>Any]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>objs:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_summary<sp/>=<sp/>any(k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;threads&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;prompts&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;runs&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rss_peak_mb_max&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_run<sp/>=<sp/>all(k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>o<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;tokens_generated&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;wall_time_s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_summary:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>summary<sp/>=<sp/>o</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>is_run:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runs.append(o)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runs,<sp/>summary</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-------------------------<sp/>math<sp/>/<sp/>formatting<sp/>------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespaceupdate__performance__md_1a15f1881e9bb3d7b11e0e25d2a1f76247" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a15f1881e9bb3d7b11e0e25d2a1f76247" kindref="member">_fmt_float</ref>(x:<sp/>Optional[float],<sp/>digits:<sp/>int<sp/>=<sp/>3,<sp/>unit:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>na:<sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal">)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(isinstance(x,<sp/>float)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(math.isnan(x)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>math.isinf(x))):</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>na</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{x:.{digits}f}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;{s}<sp/>{unit}&quot;</highlight><highlight class="normal">.strip()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="namespaceupdate__performance__md_1a0a92266d40ea5f29cd6587638192c323" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a0a92266d40ea5f29cd6587638192c323" kindref="member">_mean</ref>(xs:<sp/>List[float])<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sum(xs)<sp/>/<sp/>len(xs)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>xs<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespaceupdate__performance__md_1a4af1c202680564086d3bef963f814780" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a4af1c202680564086d3bef963f814780" kindref="member">_sum_i</ref>(xs:<sp/>List[int])<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>int(sum(xs))<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>xs<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="namespaceupdate__performance__md_1a58569c9d780e11c4bd776e9ae8fba715" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a58569c9d780e11c4bd776e9ae8fba715" kindref="member">_sum_f</ref>(xs:<sp/>List[float])<sp/>-&gt;<sp/>float:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float(sum(xs))<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>xs<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>0.0</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="namespaceupdate__performance__md_1a58798198c090e92e0b0e5886cb68d58a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a58798198c090e92e0b0e5886cb68d58a" kindref="member">_pick_first</ref>(*vals):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vals:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="namespaceupdate__performance__md_1a4ccc20cb0021ee1fdf18fa3d38860810" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a4ccc20cb0021ee1fdf18fa3d38860810" kindref="member">_bytes_to_gb</ref>(n:<sp/>Optional[float])<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>/<sp/>1_000_000_000.0</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="namespaceupdate__performance__md_1a81a2a466ef45e1472bad62ec4b513ddb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a81a2a466ef45e1472bad62ec4b513ddb" kindref="member">_bytes_to_mb</ref>(n:<sp/>Optional[float])<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n<sp/>/<sp/>1_000_000.0</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">#<sp/>----------------------<sp/>system<sp/>discovery<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="namespaceupdate__performance__md_1a5907f23bd97111610fd3e5ada859d0e3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a5907f23bd97111610fd3e5ada859d0e3" kindref="member">_discover_cpu_model</ref>()<sp/>-&gt;<sp/>Optional[str]:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(</highlight><highlight class="stringliteral">&quot;/proc/cpuinfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">r&quot;model<sp/>name\s*:\s*(.+)&quot;</highlight><highlight class="normal">,<sp/>f.read())</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m.group(1).strip()</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>platform.processor()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>platform.machine()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespaceupdate__performance__md_1a90c17965e4c2a62a1d074a32d5216978" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a90c17965e4c2a62a1d074a32d5216978" kindref="member">_discover_mem_total_gb</ref>()<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(</highlight><highlight class="stringliteral">&quot;/proc/meminfo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">r&quot;MemTotal:\s+(\d+)\s+kB&quot;</highlight><highlight class="normal">,<sp/>f.read())</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>m:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kb<sp/>=<sp/>float(m.group(1))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kb<sp/>*<sp/>1024.0<sp/>/<sp/>1_000_000_000.0</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="namespaceupdate__performance__md_1a235b9ee2b969787968ac8f4b9595013b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a235b9ee2b969787968ac8f4b9595013b" kindref="member">_discover_os</ref>()<sp/>-&gt;<sp/>Optional[str]:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(</highlight><highlight class="stringliteral">&quot;/etc/os-release&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kv<sp/>=<sp/>dict(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(line.split(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">,<sp/>1)[0],<sp/>line.split(</highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal">,<sp/>1)[1].strip().strip(</highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>line</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kv.get(</highlight><highlight class="stringliteral">&quot;PRETTY_NAME&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>platform.platform()</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>platform.platform()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespaceupdate__performance__md_1a7a78996953638c0e2197c7bff773dc6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a7a78996953638c0e2197c7bff773dc6d" kindref="member">_discover_kernel</ref>()<sp/>-&gt;<sp/>Optional[str]:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>platform.uname()</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;{u.release}-{u.machine}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>platform.version()</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="namespaceupdate__performance__md_1a6a06b952c4884f671dc4ff66459dab7a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a6a06b952c4884f671dc4ff66459dab7a" kindref="member">_discover_git</ref>()<sp/>-&gt;<sp/>Optional[str]:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sha<sp/>=<sp/>subprocess.check_output([</highlight><highlight class="stringliteral">&quot;git&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;rev-parse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--short&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HEAD&quot;</highlight><highlight class="normal">],<sp/>stderr=subprocess.DEVNULL).decode().strip()</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dirty<sp/>=<sp/>subprocess.call([</highlight><highlight class="stringliteral">&quot;git&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;diff&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--quiet&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--ignore-submodules&quot;</highlight><highlight class="normal">],<sp/>stdout=subprocess.DEVNULL,<sp/>stderr=subprocess.DEVNULL)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;{sha}<sp/>{&apos;DIRTY&apos;<sp/>if<sp/>dirty<sp/>!=<sp/>0<sp/>else<sp/>&apos;&apos;}&quot;</highlight><highlight class="normal">.strip()</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="namespaceupdate__performance__md_1a686e7769dbdebc33f261f7596cb5cd18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a686e7769dbdebc33f261f7596cb5cd18" kindref="member">_find_model_bin</ref>(model_dir:<sp/>Optional[str])<sp/>-&gt;<sp/>Optional[str]:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>model_dir:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>name<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;model.ie.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;model.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;weights.bin&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>os.path.join(model_dir,<sp/>name)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.isfile(p):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="namespaceupdate__performance__md_1a88eb703199878325a3c8eb44a6fca5ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a88eb703199878325a3c8eb44a6fca5ac" kindref="member">_filesize</ref>(path:<sp/>Optional[str])<sp/>-&gt;<sp/>Optional[int]:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>path:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.getsize(path)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">#<sp/>----------------------<sp/>aggregation<sp/>logic<sp/>--------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="namespaceupdate__performance__md_1ad51cd35cde32ba00a7491d0c8c27573f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1ad51cd35cde32ba00a7491d0c8c27573f" kindref="member">_take_last3</ref>(runs:<sp/>List[Run])<sp/>-&gt;<sp/>List[Run]:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>runs[-3:]<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(runs)<sp/>&gt;<sp/>3<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>runs</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="namespaceupdate__performance__md_1aa822beedd3ad900a093ef302f613dba7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1aa822beedd3ad900a093ef302f613dba7" kindref="member">_agg</ref>(runs:<sp/>List[Run])<sp/>-&gt;<sp/>Agg:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>tokens<sp/>=<sp/>[int(r.get(</highlight><highlight class="stringliteral">&quot;tokens_generated&quot;</highlight><highlight class="normal">,<sp/>0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>wall<sp/><sp/><sp/>=<sp/>[float(r.get(</highlight><highlight class="stringliteral">&quot;wall_time_s&quot;</highlight><highlight class="normal">,<sp/>0.0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs]</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>tps<sp/><sp/><sp/><sp/>=<sp/>[float(r.get(</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">,<sp/>0.0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs]</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>p50<sp/><sp/><sp/><sp/>=<sp/>[float(r.get(</highlight><highlight class="stringliteral">&quot;latency_p50_ms&quot;</highlight><highlight class="normal">,<sp/>r.get(</highlight><highlight class="stringliteral">&quot;p50_ms&quot;</highlight><highlight class="normal">,<sp/>0.0)))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;latency_p50_ms&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;p50_ms&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>r)]</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>p95<sp/><sp/><sp/><sp/>=<sp/>[float(r.get(</highlight><highlight class="stringliteral">&quot;latency_p95_ms&quot;</highlight><highlight class="normal">,<sp/>r.get(</highlight><highlight class="stringliteral">&quot;p95_ms&quot;</highlight><highlight class="normal">,<sp/>0.0)))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;latency_p95_ms&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;p95_ms&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>r)]</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>rss<sp/><sp/><sp/><sp/>=<sp/>[float(r.get(</highlight><highlight class="stringliteral">&quot;rss_peak_mb&quot;</highlight><highlight class="normal">,<sp/>0.0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;rss_peak_mb&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>r]</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>kvh<sp/><sp/><sp/><sp/>=<sp/>[int(r.get(</highlight><highlight class="stringliteral">&quot;kv_hits&quot;</highlight><highlight class="normal">,<sp/>0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>kvm<sp/><sp/><sp/><sp/>=<sp/>[int(r.get(</highlight><highlight class="stringliteral">&quot;kv_misses&quot;</highlight><highlight class="normal">,<sp/>0))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>runs]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>tokens_sum<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a4af1c202680564086d3bef963f814780" kindref="member">_sum_i</ref>(tokens)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>wall_sum<sp/><sp/><sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a58569c9d780e11c4bd776e9ae8fba715" kindref="member">_sum_f</ref>(wall)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>tps_true<sp/><sp/><sp/>=<sp/>(float(tokens_sum)<sp/>/<sp/>wall_sum)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>wall_sum<sp/>&gt;<sp/>0<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;runs&quot;</highlight><highlight class="normal">:<sp/>len(runs),</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tokens_sum&quot;</highlight><highlight class="normal">:<sp/>tokens_sum,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wall_sum&quot;</highlight><highlight class="normal">:<sp/>wall_sum,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">:<sp/>tps_true,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;p50_mean&quot;</highlight><highlight class="normal">:<sp/><ref refid="namespaceupdate__performance__md_1a0a92266d40ea5f29cd6587638192c323" kindref="member">_mean</ref>(p50),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;p95_mean&quot;</highlight><highlight class="normal">:<sp/><ref refid="namespaceupdate__performance__md_1a0a92266d40ea5f29cd6587638192c323" kindref="member">_mean</ref>(p95),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rss_mean&quot;</highlight><highlight class="normal">:<sp/><ref refid="namespaceupdate__performance__md_1a0a92266d40ea5f29cd6587638192c323" kindref="member">_mean</ref>(rss),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rss_max&quot;</highlight><highlight class="normal">:<sp/>max(rss)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rss<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kv_hits&quot;</highlight><highlight class="normal">:<sp/><ref refid="namespaceupdate__performance__md_1a4af1c202680564086d3bef963f814780" kindref="member">_sum_i</ref>(kvh),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;kv_misses&quot;</highlight><highlight class="normal">:<sp/><ref refid="namespaceupdate__performance__md_1a4af1c202680564086d3bef963f814780" kindref="member">_sum_i</ref>(kvm),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="namespaceupdate__performance__md_1a0b02f8e320ad4008b806eb51735f3a34" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a0b02f8e320ad4008b806eb51735f3a34" kindref="member">_mb_per_token</ref>(bpt:<sp/>Optional[int])<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpt<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(bpt<sp/>/<sp/>1_000_000.0,<sp/>1)}<sp/>MB/token&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="namespaceupdate__performance__md_1a7784dd84e748de0bac09a6ec05a0ab1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a7784dd84e748de0bac09a6ec05a0ab1e" kindref="member">_bytes_touched</ref>(tokens_sum:<sp/>int,<sp/>bpt:<sp/>Optional[int])<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>bpt<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>tokens_sum<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float(tokens_sum)<sp/>*<sp/>float(bpt)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="namespaceupdate__performance__md_1a4093efa4a4b832d477bd5b012b9e36ca" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a4093efa4a4b832d477bd5b012b9e36ca" kindref="member">_bandwidth_gbps</ref>(bytes_touched:<sp/>Optional[float],<sp/>wall_sum:<sp/>Optional[float])<sp/>-&gt;<sp/>Optional[float]:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bytes_touched<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>wall_sum<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>wall_sum<sp/>&lt;=<sp/>0:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceupdate__performance__md_1a4ccc20cb0021ee1fdf18fa3d38860810" kindref="member">_bytes_to_gb</ref>(bytes_touched)<sp/>/<sp/>wall_sum</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">#<sp/>-------------------------<sp/>rendering<sp/>helpers<sp/>-----------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="namespaceupdate__performance__md_1aa6279954597713b99c29f22496f5beb6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1aa6279954597713b99c29f22496f5beb6" kindref="member">_render_device</ref>(title:<sp/>str,<sp/>agg:<sp/>Agg,<sp/>bpt:<sp/>Optional[int],<sp/>model_size:<sp/>Optional[int])<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>bt<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a7784dd84e748de0bac09a6ec05a0ab1e" kindref="member">_bytes_touched</ref>(agg[</highlight><highlight class="stringliteral">&quot;tokens_sum&quot;</highlight><highlight class="normal">],<sp/>bpt)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>bw<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a4093efa4a4b832d477bd5b012b9e36ca" kindref="member">_bandwidth_gbps</ref>(bt,<sp/>agg[</highlight><highlight class="stringliteral">&quot;wall_sum&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>coverage<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpt<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>model_size<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>model_size<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coverage<sp/>=<sp/>f</highlight><highlight class="stringliteral">&quot;{(float(bpt)/float(model_size)):.3f}&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;&quot;&quot;##<sp/>{title}<sp/>—<sp/>Summary<sp/>(latest<sp/>benchmark)</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral">-<sp/>Runs:<sp/>**{agg[&apos;runs&apos;]}**</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral">-<sp/>Tokens<sp/>generated<sp/>(Σ):<sp/>**{agg[&apos;tokens_sum&apos;]}**</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral">-<sp/>Wall<sp/>time<sp/>(Σ):<sp/>**{_fmt_float(agg[&apos;wall_sum&apos;],<sp/>3,<sp/>&apos;s&apos;)}**</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral">-<sp/>True<sp/>TPS<sp/>(Σ<sp/>tokens<sp/>/<sp/>Σ<sp/>time):<sp/>**{_fmt_float(agg[&apos;tps_true&apos;],<sp/>3)}**</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral">##<sp/>Latency</highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral">-<sp/>p50<sp/>(mean<sp/>across<sp/>runs):<sp/>**{_fmt_float(agg[&apos;p50_mean&apos;],<sp/>3,<sp/>&apos;ms&apos;)}**</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral">-<sp/>p95<sp/>(mean<sp/>across<sp/>runs):<sp/>**{_fmt_float(agg[&apos;p95_mean&apos;],<sp/>3,<sp/>&apos;ms&apos;)}**</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral">##<sp/>Spatial<sp/>Complexity<sp/>(Memory<sp/>&amp;<sp/>Cache)</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral">-<sp/>RSS<sp/>peak<sp/>(mean):<sp/>**{_fmt_float(agg[&apos;rss_mean&apos;],<sp/>3,<sp/>&apos;MB&apos;)}**</highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral">-<sp/>RSS<sp/>peak<sp/>(max):<sp/>**{_fmt_float(agg[&apos;rss_max&apos;],<sp/>3,<sp/>&apos;MB&apos;)}**</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral">-<sp/>KV<sp/>cache:<sp/>**{agg[&apos;kv_hits&apos;]}<sp/>hits<sp/>/<sp/>{agg[&apos;kv_misses&apos;]}<sp/>misses**</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral">-<sp/>IE_BYTES_PER_TOKEN:<sp/>**{_mb_per_token(bpt)}**</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral">-<sp/>Bytes<sp/>touched<sp/>(Σ):<sp/>**{_fmt_float(_bytes_to_gb(bt),<sp/>1,<sp/>&apos;GB&apos;)}**</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral">-<sp/>Working-set<sp/>coverage<sp/>(bytes_per_token<sp/>/<sp/>model.bin):<sp/>**{coverage}**</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral">-<sp/>Effective<sp/>bandwidth:<sp/>**{_fmt_float(bw,<sp/>2,<sp/>&apos;GB/s&apos;)}**</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="namespaceupdate__performance__md_1a7638e6f2223e8b49afbcf5ef17a4eb8c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a7638e6f2223e8b49afbcf5ef17a4eb8c" kindref="member">_render_shared</ref>(shared:<sp/>Dict[str,<sp/>Any])<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;&quot;&quot;##<sp/>Run<sp/>Parameters<sp/>&amp;<sp/>Conditions</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral">-<sp/>Engine<sp/>bin:<sp/>`{shared.get(&apos;engine_bin&apos;,&apos;n/a&apos;)}`</highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral">-<sp/>Prompts<sp/>file:<sp/>`{shared.get(&apos;prompts&apos;,&apos;n/a&apos;)}`</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral">-<sp/>Threads:<sp/>**{shared.get(&apos;threads&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral">-<sp/>Precision:<sp/>**{shared.get(&apos;precision&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral">-<sp/>Batch:<sp/>**{shared.get(&apos;batch&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral">-<sp/>Prefetch:<sp/>**{shared.get(&apos;prefetch&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral">-<sp/>Pretranspose:<sp/>**{shared.get(&apos;pretranspose&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral">-<sp/>Affinity:<sp/>**{shared.get(&apos;affinity&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral">-<sp/>Max<sp/>new<sp/>tokens:<sp/>**{shared.get(&apos;max_new&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral">-<sp/>IE_REQUIRE_MODEL:<sp/>**{shared.get(&apos;ie_require_model&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral">-<sp/>IE_BYTES_PER_TOKEN:<sp/>**{shared.get(&apos;ie_bytes_per_token&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral">-<sp/>IE_STRIDE_BYTES:<sp/>**{shared.get(&apos;ie_stride_bytes&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral">-<sp/>IE_VERIFY_TOUCH:<sp/>**{shared.get(&apos;ie_verify_touch&apos;,&apos;n/a&apos;)}**</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258" refid="namespaceupdate__performance__md_1ae2f704218ec574584f252cc8112f62f3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1ae2f704218ec574584f252cc8112f62f3" kindref="member">_render_system</ref>(model_dir:<sp/>Optional[str])<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a5907f23bd97111610fd3e5ada859d0e3" kindref="member">_discover_cpu_model</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>cores<sp/>=<sp/>os.cpu_count()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>mem<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a90c17965e4c2a62a1d074a32d5216978" kindref="member">_discover_mem_total_gb</ref>()</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>os_name<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a235b9ee2b969787968ac8f4b9595013b" kindref="member">_discover_os</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>kernel<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a7a78996953638c0e2197c7bff773dc6d" kindref="member">_discover_kernel</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>git<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a6a06b952c4884f671dc4ff66459dab7a" kindref="member">_discover_git</ref>()<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight><highlight class="stringliteral">&quot;&quot;&quot;##<sp/>System<sp/>&amp;<sp/>Model<sp/>Info</highlight></codeline>
<codeline lineno="266"><highlight class="stringliteral">-<sp/>CPU:<sp/>**{cpu}**</highlight></codeline>
<codeline lineno="267"><highlight class="stringliteral">-<sp/>Logical<sp/>cores:<sp/>**{cores<sp/>if<sp/>cores<sp/>else<sp/>&apos;n/a&apos;}**</highlight></codeline>
<codeline lineno="268"><highlight class="stringliteral">-<sp/>RAM<sp/>(MemTotal):<sp/>**{_fmt_float(mem,<sp/>1,<sp/>&apos;GB&apos;)}**</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral">-<sp/>OS:<sp/>**{os_name}**</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral">-<sp/>Kernel:<sp/>**{kernel}**</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral">-<sp/>Git<sp/>commit:<sp/>**{git}**</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="namespaceupdate__performance__md_1ab6c1860d6b58938b3e07103ead71212c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1ab6c1860d6b58938b3e07103ead71212c" kindref="member">_render_table</ref>(cpu_runs:<sp/>List[Run],<sp/>gpu_runs:<sp/>List[Run])<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;##<sp/>Comparative<sp/>Runs\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;|<sp/>Device<sp/>|<sp/>Run<sp/>|<sp/>Tokens<sp/>|<sp/>Wall<sp/>(s)<sp/>|<sp/>TPS<sp/>|<sp/>p50<sp/>(ms)<sp/>|<sp/>p95<sp/>(ms)<sp/>|<sp/>RSS<sp/>peak<sp/>(MB)<sp/>|<sp/>KV<sp/>hits<sp/>|<sp/>KV<sp/>misses<sp/>|&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>lines.append(</highlight><highlight class="stringliteral">&quot;|:------:|----:|-------:|---------:|----:|---------:|---------:|--------------:|--------:|----------:|&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">row(dv:<sp/>str,<sp/>r:<sp/>Run,<sp/>idx:<sp/>int)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;|<sp/>{dv}<sp/>|<sp/>{idx}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{int(r.get(&apos;tokens_generated&apos;,<sp/>0))}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(float(r.get(&apos;wall_time_s&apos;,<sp/>0.0)),<sp/>3)}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(float(r.get(&apos;tps_true&apos;,<sp/>0.0)),<sp/>3)}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(float(r.get(&apos;latency_p50_ms&apos;,<sp/>r.get(&apos;p50_ms&apos;,<sp/>0.0))),<sp/>3)}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(float(r.get(&apos;latency_p95_ms&apos;,<sp/>r.get(&apos;p95_ms&apos;,<sp/>0.0))),<sp/>3)}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{_fmt_float(float(r.get(&apos;rss_peak_mb&apos;,<sp/>0.0)),<sp/>3)}<sp/>|<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f</highlight><highlight class="stringliteral">&quot;{int(r.get(&apos;kv_hits&apos;,<sp/>0))}<sp/>|<sp/>{int(r.get(&apos;kv_misses&apos;,<sp/>0))}<sp/>|&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(cpu_runs,<sp/>1):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(row(</highlight><highlight class="stringliteral">&quot;CPU&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>i))</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(gpu_runs,<sp/>1):</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines.append(row(</highlight><highlight class="stringliteral">&quot;GPU&quot;</highlight><highlight class="normal">,<sp/>r,<sp/>i))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(lines)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="namespaceupdate__performance__md_1abe82b6ec47b6fc78fb19bb37a6726fce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1abe82b6ec47b6fc78fb19bb37a6726fce" kindref="member">_merge_shared</ref>(cli:<sp/>Dict[str,<sp/>Any],<sp/>cpu_sum:<sp/>Optional[Dict[str,<sp/>Any]],<sp/>gpu_sum:<sp/>Optional[Dict[str,<sp/>Any]])<sp/>-&gt;<sp/>Dict[str,<sp/>Any]:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">g(k:<sp/>str)<sp/>-&gt;<sp/>Any:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cli.get(k)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cli[k]</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_sum<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>cpu_sum.get(k)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cpu_sum.get(k)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gpu_sum<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gpu_sum.get(k)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gpu_sum.get(k)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>keys<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;prompts&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;threads&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;batch&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;prefetch&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;pretranspose&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;affinity&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;max_new&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ie_require_model&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ie_bytes_per_token&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;ie_stride_bytes&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ie_verify_touch&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{k:<sp/>g(k)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>keys}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">#<sp/>------------------------------<sp/>CLI<sp/>-------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="namespaceupdate__performance__md_1a17ae6536535cdd081f87d0a1f28fe161" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1a17ae6536535cdd081f87d0a1f28fe161" kindref="member">_parse</ref>()<sp/>-&gt;<sp/>argparse.Namespace:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>argparse.ArgumentParser(description=</highlight><highlight class="stringliteral">&quot;Update<sp/>PERFORMANCE.md<sp/>from<sp/>strict<sp/>JSON<sp/>logs<sp/>(last<sp/>3<sp/>runs<sp/>per<sp/>device).&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--cpu-json&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Path<sp/>to<sp/>strict<sp/>CPU<sp/>JSONL&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--gpu-json&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Path<sp/>to<sp/>strict<sp/>GPU<sp/>JSONL&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--out&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&quot;docs/PERFORMANCE.md&quot;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Output<sp/>Markdown<sp/>file&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Shared/override<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--engine-bin&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--cpu-engine-bin&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;cpu_engine_bin&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--gpu-engine-bin&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;gpu_engine_bin&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--prompts-file&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;prompts&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--threads&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--precision&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--batch&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--prefetch&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--pretranspose&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--affinity&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--max-new&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;max_new&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--ie-require-model&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;ie_require_model&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--ie-bytes-per-token&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;ie_bytes_per_token&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--ie-stride-bytes&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;ie_stride_bytes&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--ie-verify-touch&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;ie_verify_touch&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>p.add_argument(</highlight><highlight class="stringliteral">&quot;--model-dir&quot;</highlight><highlight class="normal">,<sp/>dest=</highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p.parse_args()</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">#<sp/>------------------------------<sp/>main<sp/>------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="namespaceupdate__performance__md_1ae757be851b94bcca07c264e51d9d0d15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceupdate__performance__md_1ae757be851b94bcca07c264e51d9d0d15" kindref="member">main</ref>()<sp/>-&gt;<sp/>int:</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a17ae6536535cdd081f87d0a1f28fe161" kindref="member">_parse</ref>()</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>args<sp/>not<sp/>provided,<sp/>try<sp/>defaults<sp/>under<sp/>build/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_json<sp/>=<sp/>args.cpu_json<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(os.path.exists(</highlight><highlight class="stringliteral">&quot;build/strict_cpu.json&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;build/strict_cpu.json&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_json<sp/>=<sp/>args.gpu_json<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(os.path.exists(</highlight><highlight class="stringliteral">&quot;build/strict_gpu.json&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;build/strict_gpu.json&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_runs:<sp/>List[Run]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_sum:<sp/>Optional[Dict[str,<sp/>Any]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_json<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.path.isfile(cpu_json):</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_objs<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a9bc426f3865fd06809eade1e79ea91a4" kindref="member">_read_json_lines</ref>(cpu_json)</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c_runs_all,<sp/>cpu_sum<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1ac4d341cc6dc059359d9ed3dd061352d5" kindref="member">_partition_runs_and_summary</ref>(c_objs)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpu_runs<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1ad51cd35cde32ba00a7491d0c8c27573f" kindref="member">_take_last3</ref>(c_runs_all)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Load<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_runs:<sp/>List[Run]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_sum:<sp/>Optional[Dict[str,<sp/>Any]]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gpu_json<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>os.path.isfile(gpu_json):</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_objs<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a9bc426f3865fd06809eade1e79ea91a4" kindref="member">_read_json_lines</ref>(gpu_json)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g_runs_all,<sp/>gpu_sum<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1ac4d341cc6dc059359d9ed3dd061352d5" kindref="member">_partition_runs_and_summary</ref>(g_objs)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gpu_runs<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1ad51cd35cde32ba00a7491d0c8c27573f" kindref="member">_take_last3</ref>(g_runs_all)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Engine<sp/>bin<sp/>preference<sp/>(side-specific<sp/>first,<sp/>then<sp/>generic)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_engine_bin<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a58798198c090e92e0b0e5886cb68d58a" kindref="member">_pick_first</ref>(args.cpu_engine_bin,<sp/>args.engine_bin)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_engine_bin<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a58798198c090e92e0b0e5886cb68d58a" kindref="member">_pick_first</ref>(args.gpu_engine_bin,<sp/>args.engine_bin)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Build<sp/>merged<sp/>shared<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>cli_shared<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">:<sp/>args.engine_bin,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;prompts&quot;</highlight><highlight class="normal">:<sp/>args.prompts,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;threads&quot;</highlight><highlight class="normal">:<sp/>args.threads,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;precision&quot;</highlight><highlight class="normal">:<sp/>args.precision,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;batch&quot;</highlight><highlight class="normal">:<sp/>args.batch,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;prefetch&quot;</highlight><highlight class="normal">:<sp/>args.prefetch,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;pretranspose&quot;</highlight><highlight class="normal">:<sp/>args.pretranspose,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;affinity&quot;</highlight><highlight class="normal">:<sp/>args.affinity,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;max_new&quot;</highlight><highlight class="normal">:<sp/>args.max_new,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ie_require_model&quot;</highlight><highlight class="normal">:<sp/>args.ie_require_model,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ie_bytes_per_token&quot;</highlight><highlight class="normal">:<sp/>args.ie_bytes_per_token,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ie_stride_bytes&quot;</highlight><highlight class="normal">:<sp/>args.ie_stride_bytes,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ie_verify_touch&quot;</highlight><highlight class="normal">:<sp/>args.ie_verify_touch,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal">:<sp/>args.model_dir,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>shared<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1abe82b6ec47b6fc78fb19bb37a6726fce" kindref="member">_merge_shared</ref>(cli_shared,<sp/>cpu_sum,<sp/>gpu_sum)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_engine_bin:</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[</highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">]<sp/>=<sp/>cpu_engine_bin</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>gpu_engine_bin<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>shared.get(</highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared[</highlight><highlight class="stringliteral">&quot;engine_bin&quot;</highlight><highlight class="normal">]<sp/>=<sp/>gpu_engine_bin</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Parse<sp/>BPT<sp/>as<sp/>int<sp/>if<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>bpt_val<sp/>=<sp/>shared.get(</highlight><highlight class="stringliteral">&quot;ie_bytes_per_token&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpt<sp/>=<sp/>int(bpt_val)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bpt_val<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bpt<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Aggregations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu_agg<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1aa822beedd3ad900a093ef302f613dba7" kindref="member">_agg</ref>(cpu_runs)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_runs<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>gpu_agg<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1aa822beedd3ad900a093ef302f613dba7" kindref="member">_agg</ref>(gpu_runs)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gpu_runs<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Model<sp/>size<sp/>and<sp/>coverage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>model_bin_path<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a686e7769dbdebc33f261f7596cb5cd18" kindref="member">_find_model_bin</ref>(shared.get(</highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>model_size<sp/>=<sp/><ref refid="namespaceupdate__performance__md_1a88eb703199878325a3c8eb44a6fca5ac" kindref="member">_filesize</ref>(model_bin_path)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Best<sp/>TPS<sp/>(current<sp/>snapshot)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>best_label<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;n/a&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>best_tps<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_agg<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>gpu_agg:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>0)<sp/>&gt;=<sp/>(gpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>0):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_label,<sp/>best_tps<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CPU&quot;</highlight><highlight class="normal">,<sp/>cpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_label,<sp/>best_tps<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GPU&quot;</highlight><highlight class="normal">,<sp/>gpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>cpu_agg:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_label,<sp/>best_tps<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CPU&quot;</highlight><highlight class="normal">,<sp/>cpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>gpu_agg:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_label,<sp/>best_tps<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GPU&quot;</highlight><highlight class="normal">,<sp/>gpu_agg[</highlight><highlight class="stringliteral">&quot;tps_true&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Render</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines:<sp/>List[str]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(</highlight><highlight class="stringliteral">&quot;#<sp/>Performance<sp/>Notes\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(f</highlight><highlight class="stringliteral">&quot;_Last<sp/>updated:<sp/>**{_now_utc_str()}**_\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(f</highlight><highlight class="stringliteral">&quot;\n**Best<sp/>true<sp/>TPS:**<sp/>**{best_label}<sp/>—<sp/>{_fmt_float(best_tps,<sp/>3)}**.\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cpu_agg:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_lines.append(<ref refid="namespaceupdate__performance__md_1aa6279954597713b99c29f22496f5beb6" kindref="member">_render_device</ref>(</highlight><highlight class="stringliteral">&quot;CPU&quot;</highlight><highlight class="normal">,<sp/>cpu_agg,<sp/>bpt,<sp/>model_size))</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gpu_agg:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_lines.append(<ref refid="namespaceupdate__performance__md_1aa6279954597713b99c29f22496f5beb6" kindref="member">_render_device</ref>(</highlight><highlight class="stringliteral">&quot;GPU&quot;</highlight><highlight class="normal">,<sp/>gpu_agg,<sp/>bpt,<sp/>model_size))</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(<ref refid="namespaceupdate__performance__md_1a7638e6f2223e8b49afbcf5ef17a4eb8c" kindref="member">_render_shared</ref>(shared))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(<ref refid="namespaceupdate__performance__md_1ae2f704218ec574584f252cc8112f62f3" kindref="member">_render_system</ref>(shared.get(</highlight><highlight class="stringliteral">&quot;model_dir&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>out_lines.append(<ref refid="namespaceupdate__performance__md_1ab6c1860d6b58938b3e07103ead71212c" kindref="member">_render_table</ref>(cpu_runs,<sp/>gpu_runs))</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Write<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>out_path<sp/>=<sp/>args.out</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>os.makedirs(os.path.dirname(out_path),<sp/>exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(out_path,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(out_lines))</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;[update_performance_md]<sp/>Wrote<sp/>{out_path}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>SystemExit(<ref refid="namespaceupdate__performance__md_1ae757be851b94bcca07c264e51d9d0d15" kindref="member">main</ref>())</highlight></codeline>
    </programlisting>
    <location file="scripts/update_performance_md.py"/>
  </compounddef>
</doxygen>
