<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="main__infer_8c" kind="file" language="C++">
    <compoundname>main_infer.c</compoundname>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">inttypes.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="ie__api_8h" local="yes">ie_api.h</includes>
    <includes refid="ie__io_8h" local="yes">ie_io.h</includes>
    <includes refid="ie__kv__instrumentation_8h" local="yes">ie_kv_instrumentation.h</includes>
    <includes refid="util__metrics_8h" local="yes">util_metrics.h</includes>
    <includes refid="util__logging_8h" local="yes">util_logging.h</includes>
    <incdepgraph>
      <node id="13">
        <label>ie_api.h</label>
        <link refid="ie__api_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ie_io.h</label>
        <link refid="ie__io_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>ie_kv_instrumentation.h</label>
        <link refid="ie__kv__instrumentation_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>util_logging.h</label>
        <link refid="util__logging_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>util_metrics.h</label>
        <link refid="util__metrics_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/main_infer.c</label>
        <link refid="main__infer_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>errno.h</label>
      </node>
      <node id="3">
        <label>fcntl.h</label>
      </node>
      <node id="4">
        <label>inttypes.h</label>
      </node>
      <node id="19">
        <label>stdarg.h</label>
      </node>
      <node id="14">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>sys/mman.h</label>
      </node>
      <node id="10">
        <label>sys/stat.h</label>
      </node>
      <node id="11">
        <label>time.h</label>
      </node>
      <node id="12">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcli__extras" prot="public">cli_extras</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="main__infer_8c_1a3024ccd4a9af5109d24e6c57565d74a1" prot="public" static="no">
        <name>_POSIX_C_SOURCE</name>
        <initializer>200809L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="26" column="9" bodyfile="engine/src/main_infer.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main__infer_8c_1a86d500a34c624c2cae56bc25a31b12f3" prot="public" static="no">
        <name>UNUSED</name>
        <param><defname>x</defname></param>
        <initializer>(void)(x)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="47" column="11" bodyfile="engine/src/main_infer.c" bodystart="47" bodyend="-1"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fd" prot="public" static="no" strong="no">
        <type></type>
        <name>cli_precision_t</name>
        <enumvalue id="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" prot="public">
          <name>CLI_PREC_FP32</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>32-bit floating-point. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda5511dde5ecea27256242423b924d3b69" prot="public">
          <name>CLI_PREC_BF16</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>bfloat16. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda8c7355186bb9ef03b1fdb0ff3b3b9766" prot="public">
          <name>CLI_PREC_FP16</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>16-bit floating-point. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Classic floating-point precision flags recognized as switches. </para>
        </briefdescription>
        <detaileddescription>
<para>Weight-only INTx labels are handled via a raw string to avoid proliferating enum values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="152" column="1" bodyfile="engine/src/main_infer.c" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="enum" id="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41d" prot="public" static="no" strong="no">
        <type></type>
        <name>cli_pretranspose_t</name>
        <enumvalue id="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" prot="public">
          <name>CLI_PRETX_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>No pretranspose. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" prot="public">
          <name>CLI_PRETX_WOH</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Width-Outer-Height style. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" prot="public">
          <name>CLI_PRETX_WXH</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>Width-by-Height tiles. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da4fad867319e4f9197a9c373762a3ad54" prot="public">
          <name>CLI_PRETX_ALL</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>Let backend decide per tensor. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Pretranspose policy hint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="162" column="1" bodyfile="engine/src/main_infer.c" bodystart="162" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="main__infer_8c_1a9973434ae2443cc726369b714df7b2cb" prot="public" static="no">
        <type>struct <ref refid="structcli__extras" kindref="compound">cli_extras</ref></type>
        <definition>typedef struct cli_extras cli_extras_t</definition>
        <argsstring></argsstring>
        <name>cli_extras_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="198" column="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double now_sec</definition>
        <argsstring>(void)</argsstring>
        <name>now_sec</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get a monotonic wall-clock timestamp in seconds. </para>
        </briefdescription>
        <detaileddescription>
<para>The origin of the monotonic clock is unspecified; only deltas are meaningful.</para>
<para><simplesect kind="return"><para>Seconds as a double, suitable for interval measurements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="80" column="15" bodyfile="engine/src/main_infer.c" bodystart="80" bodyend="84"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long env_long</definition>
        <argsstring>(const char *name, long defv)</argsstring>
        <name>env_long</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defv</declname>
        </param>
        <briefdescription>
<para>Parse an environment variable as a long with a default fallback. </para>
        </briefdescription>
        <detaileddescription>
<para>If the variable is unset or cannot be parsed as a base-10 integer, <computeroutput>defv</computeroutput> is returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Environment variable name (e.g., &quot;IE_STRIDE_BYTES&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defv</parametername>
</parameternamelist>
<parameterdescription>
<para>Default value when unset or invalid. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Parsed value, or <computeroutput>defv</computeroutput> on error/unset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="99" column="13" bodyfile="engine/src/main_infer.c" bodystart="99" bodyend="105"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a1da65df4642943745d356d6de2983f02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * env_str</definition>
        <argsstring>(const char *name, const char *defv)</argsstring>
        <name>env_str</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defv</declname>
        </param>
        <briefdescription>
<para>Get environment variable as string with a default fallback. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Environment variable name. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>defv</parametername>
</parameternamelist>
<parameterdescription>
<para>Default string when unset/empty. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to environment value or <computeroutput>defv</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="114" column="19" bodyfile="engine/src/main_infer.c" bodystart="114" bodyend="117"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ascii_ieq</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>ascii_ieq</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Case-insensitive ASCII equality check (NULL-safe). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>First string (may be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Second string (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if equal ignoring ASCII case; 0 otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="129" column="12" bodyfile="engine/src/main_infer.c" bodystart="129" bodyend="140"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
        <referencedby refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" compoundref="main__infer_8c" startline="293" endline="341">parse_flags</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void usage</definition>
        <argsstring>(void)</argsstring>
        <name>usage</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Print CLI usage information to stderr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="206" column="13" bodyfile="engine/src/main_infer.c" bodystart="206" bodyend="222"/>
        <referencedby refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" compoundref="main__infer_8c" startline="293" endline="341">parse_flags</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a25c42477bc56f4eb2d2a5c53e4510d70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cli_extras_defaults</definition>
        <argsstring>(cli_extras_t *e)</argsstring>
        <name>cli_extras_defaults</name>
        <param>
          <type><ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Initialize a <ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref> with default values. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Output structure; must be non-NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="229" column="13" bodyfile="engine/src/main_infer.c" bodystart="229" bodyend="248"/>
        <references refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" compoundref="main__infer_8c" startline="153">CLI_PREC_FP32</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" compoundref="main__infer_8c" startline="163">CLI_PRETX_NONE</references>
        <references refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" compoundref="ie__api_8h" startline="52">IE_PREC_FP32</references>
        <referencedby refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" compoundref="main__infer_8c" startline="293" endline="341">parse_flags</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>static long safe_atoi</definition>
        <argsstring>(const char *s)</argsstring>
        <name>safe_atoi</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Convert a string to long with strict validation; exits with code 2 on failure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>NUL-terminated string. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Parsed long value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="256" column="13" bodyfile="engine/src/main_infer.c" bodystart="256" bodyend="262"/>
        <referencedby refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" compoundref="main__infer_8c" startline="293" endline="341">parse_flags</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parse_flags</definition>
        <argsstring>(int argc, char **argv, cli_extras_t *out)</argsstring>
        <name>parse_flags</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type><ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref> *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Parse command-line flags into a <ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Recognized flags:<itemizedlist>
<listitem><para><computeroutput>--prompt TEXT</computeroutput></para>
</listitem><listitem><para><computeroutput>--max-new N</computeroutput></para>
</listitem><listitem><para><computeroutput>--threads N</computeroutput></para>
</listitem><listitem><para><computeroutput>--precision fp32|bf16|fp16|int8w|int4|int4w</computeroutput></para>
</listitem><listitem><para><computeroutput>--affinity auto|compact|scatter</computeroutput></para>
</listitem><listitem><para><computeroutput>--pretranspose none|woh|wxh|all</computeroutput></para>
</listitem><listitem><para><computeroutput>--device auto|cpu|cuda|ze</computeroutput> (accepted as a no-op hint)</para>
</listitem><listitem><para><computeroutput>--model-dir PATH</computeroutput> (changes working directory before loading)</para>
</listitem><listitem><para><computeroutput>--model-json PATH</computeroutput> (explicit JSON path)</para>
</listitem><listitem><para><computeroutput>--model-bin PATH</computeroutput> (explicit BIN path)</para>
</listitem><listitem><para><computeroutput>--prompts-file PATH</computeroutput></para>
</listitem><listitem><para><computeroutput>--batch N</computeroutput></para>
</listitem><listitem><para><computeroutput>--prefetch on|off|auto|N</computeroutput></para>
</listitem><listitem><para><computeroutput>--warmup N</computeroutput> (alias <computeroutput>--warmup-tokens</computeroutput>)</para>
</listitem><listitem><para><computeroutput>--rounds N</computeroutput> (repeat measured window N times; N&gt;=1)</para>
</listitem><listitem><para><computeroutput>--aggregate</computeroutput></para>
</listitem><listitem><para><computeroutput>--help</computeroutput> / <computeroutput>-h</computeroutput></para>
</listitem></itemizedlist>
</para>
<para>Non-flag positional text is treated as <computeroutput>--prompt TEXT</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Output structure; must be non-NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; -1 if help was printed or on parsing error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="293" column="12" bodyfile="engine/src/main_infer.c" bodystart="293" bodyend="341"/>
        <references refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" compoundref="main__infer_8c" startline="129" endline="140">ascii_ieq</references>
        <references refid="main__infer_8c_1a25c42477bc56f4eb2d2a5c53e4510d70" compoundref="main__infer_8c" startline="229" endline="248">cli_extras_defaults</references>
        <references refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda5511dde5ecea27256242423b924d3b69" compoundref="main__infer_8c" startline="154">CLI_PREC_BF16</references>
        <references refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda8c7355186bb9ef03b1fdb0ff3b3b9766" compoundref="main__infer_8c" startline="155">CLI_PREC_FP16</references>
        <references refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" compoundref="main__infer_8c" startline="153">CLI_PREC_FP32</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da4fad867319e4f9197a9c373762a3ad54" compoundref="main__infer_8c" startline="166">CLI_PRETX_ALL</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" compoundref="main__infer_8c" startline="163">CLI_PRETX_NONE</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" compoundref="main__infer_8c" startline="164">CLI_PRETX_WOH</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" compoundref="main__infer_8c" startline="165">CLI_PRETX_WXH</references>
        <references refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" compoundref="ie__api_8h" startline="54">IE_PREC_BF16</references>
        <references refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" compoundref="ie__api_8h" startline="56">IE_PREC_FP16</references>
        <references refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" compoundref="ie__api_8h" startline="52">IE_PREC_FP32</references>
        <references refid="ie__api_8h_1add4934bbdd3dc2bf4e3ab8438b0d7757" compoundref="ie__api_8h" startline="62">IE_PREC_INT4</references>
        <references refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" compoundref="ie__api_8h" startline="60">IE_PREC_INT4W</references>
        <references refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" compoundref="ie__api_8h" startline="58">IE_PREC_INT8W</references>
        <references refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" compoundref="main__infer_8c" startline="256" endline="262">safe_atoi</references>
        <references refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" compoundref="main__infer_8c" startline="206" endline="222">usage</references>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a609fc6d778b714530dadf2ef012acf5c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int read_first_nonempty_line</definition>
        <argsstring>(const char *path, char *buf, size_t bufsz)</argsstring>
        <name>read_first_nonempty_line</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bufsz</declname>
        </param>
        <briefdescription>
<para>Read the first non-empty line from a text file. </para>
        </briefdescription>
        <detaileddescription>
<para>Trailing <computeroutput>\n</computeroutput>/<computeroutput>\r</computeroutput> are stripped. On success, the result is copied into <computeroutput>buf</computeroutput> (NUL-terminated).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the text file. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer to receive the line. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bufsz</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <computeroutput>buf</computeroutput> in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if a line was read, 0 if the file had no non-empty lines, -1 on I/O error (also prints a warning). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="358" column="12" bodyfile="engine/src/main_infer.c" bodystart="358" bodyend="370"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void print_json_result</definition>
        <argsstring>(uint32_t n_tok, const uint32_t *tokens, double wall_s_in, uint64_t kv_hits, uint64_t kv_misses, uint32_t rss_peak_mb)</argsstring>
        <name>print_json_result</name>
        <param>
          <type>uint32_t</type>
          <declname>n_tok</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>tokens</declname>
        </param>
        <param>
          <type>double</type>
          <declname>wall_s_in</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>kv_hits</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>kv_misses</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>rss_peak_mb</declname>
        </param>
        <briefdescription>
<para>Print a single JSON summary line for the last run. </para>
        </briefdescription>
        <detaileddescription>
<para>The JSON object includes:<itemizedlist>
<listitem><para><computeroutput>tokens_generated</computeroutput> (uint)</para>
</listitem><listitem><para><computeroutput>tokens</computeroutput> (array; empty if <computeroutput>tokens</computeroutput> is NULL)</para>
</listitem><listitem><para><computeroutput>wall_time_s</computeroutput> (seconds)</para>
</listitem><listitem><para><computeroutput>tps_true</computeroutput> (tokens/s)</para>
</listitem><listitem><para><computeroutput>latency_p50_ms</computeroutput>, <computeroutput>latency_p95_ms</computeroutput></para>
</listitem><listitem><para><computeroutput>rss_peak_mb</computeroutput></para>
</listitem><listitem><para><computeroutput>kv_hits</computeroutput>, <computeroutput>kv_misses</computeroutput></para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n_tok</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of tokens generated. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to tokens (may be NULL to print an empty array). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wall_s_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Wall-clock seconds for the measured window. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kv_hits</parametername>
</parameternamelist>
<parameterdescription>
<para>KV hits to report. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>kv_misses</parametername>
</parameternamelist>
<parameterdescription>
<para>KV misses to report. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rss_peak_mb</parametername>
</parameternamelist>
<parameterdescription>
<para>Peak RSS in MiB to report. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="394" column="13" bodyfile="engine/src/main_infer.c" bodystart="394" bodyend="443"/>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Program entry point. </para>
        </briefdescription>
        <detaileddescription>
<para>High-level flow:<orderedlist>
<listitem><para>Parse CLI flags (or print usage).</para>
</listitem><listitem><para>Optionally change into <computeroutput>--model-dir</computeroutput>.</para>
</listitem><listitem><para>Optionally read <computeroutput>model.ie.json</computeroutput>/<computeroutput>model.ie.bin</computeroutput> and enforce strict mode via <computeroutput>IE_REQUIRE_MODEL=1</computeroutput>.</para>
</listitem><listitem><para>Create the engine with soft hints (precision/affinity/etc).</para>
</listitem><listitem><para>Optional warmup (not timed).</para>
</listitem><listitem><para>Measured window: <computeroutput>ie_engine_generate(...)</computeroutput> and optional “work touch” repeated <computeroutput>--rounds</computeroutput> times.</para>
</listitem><listitem><para>After timing: collect metrics, print JSON, teardown.</para>
</listitem></orderedlist>
</para>
<para>Environment variables:<itemizedlist>
<listitem><para><computeroutput>IE_REQUIRE_MODEL</computeroutput> (int): if <computeroutput>1</computeroutput>, strict mode is enforced.</para>
</listitem><listitem><para><computeroutput>IE_BYTES_PER_TOKEN</computeroutput> (size_t): bytes to touch per token (work touch).</para>
</listitem><listitem><para><computeroutput>IE_STRIDE_BYTES</computeroutput> (size_t): stride in bytes for work-touch loop.</para>
</listitem><listitem><para><computeroutput>IE_VERIFY_TOUCH</computeroutput> (int): when non-zero, prevents the compiler from eliding the touch accumulator (side-effect barrier).</para>
</listitem><listitem><para><computeroutput>IE_PRECISION</computeroutput> / <computeroutput>PRECISION</computeroutput> (string): precision label (fp32/bf16/fp16/int8w/int4w/int4).</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument count. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Argument vector. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="474" column="5" bodyfile="engine/src/main_infer.c" bodystart="474" bodyend="695"/>
        <references refid="structie__engine__params_1a66599574f8a4b8ed7cd7132fc1c0e051" compoundref="ie__api_8h" startline="112">ie_engine_params::affinity</references>
        <references refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" compoundref="main__infer_8c" startline="129" endline="140">ascii_ieq</references>
        <references refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" compoundref="ie__io_8h" startline="122">ie_weights_s::bin_size_bytes</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" compoundref="main__infer_8c" startline="163">CLI_PRETX_NONE</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" compoundref="main__infer_8c" startline="164">CLI_PRETX_WOH</references>
        <references refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" compoundref="main__infer_8c" startline="165">CLI_PRETX_WXH</references>
        <references refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" compoundref="main__infer_8c" startline="99" endline="105">env_long</references>
        <references refid="main__infer_8c_1a1da65df4642943745d356d6de2983f02" compoundref="main__infer_8c" startline="114" endline="117">env_str</references>
        <references refid="ie__api_8h_1a29d800407f90ba6b44385725da64f27d" compoundref="ie__api_8c" startline="106" endline="134">ie_engine_create</references>
        <references refid="ie__api_8h_1a8a724f7097b3e19da8d7dd97fba4415e" compoundref="ie__api_8c" startline="139" endline="142">ie_engine_destroy</references>
        <references refid="ie__api_8h_1a21ab40e22d9192fe353ad6640610a01d" compoundref="ie__api_8c" startline="152" endline="189">ie_engine_generate</references>
        <references refid="ie__api_8h_1ac1c4268d66d8a840276e0a72c9ace902" compoundref="ie__api_8c" startline="194" endline="198">ie_engine_metrics</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" compoundref="ie__io_8h" startline="56">IE_IO_OK</references>
        <references refid="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" compoundref="ie__kv__instrumentation_8c" startline="87" endline="111">ie_kv_begin_round</references>
        <references refid="ie__kv__instrumentation_8h_1a2c9789a487a67ebc8e6054aa0b991e4e" compoundref="ie__kv__instrumentation_8c" startline="123" endline="150">ie_kv_finish_round</references>
        <references refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" compoundref="util__metrics_8c" startline="181" endline="287">ie_metrics_sample_rss_peak</references>
        <references refid="ie__api_8h_1afe55386d31dcd43a7accd42d844d59d1" compoundref="ie__api_8h" startline="44">IE_OK</references>
        <references refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" compoundref="ie__api_8h" startline="54">IE_PREC_BF16</references>
        <references refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" compoundref="ie__api_8h" startline="56">IE_PREC_FP16</references>
        <references refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" compoundref="ie__api_8h" startline="52">IE_PREC_FP32</references>
        <references refid="ie__api_8h_1add4934bbdd3dc2bf4e3ab8438b0d7757" compoundref="ie__api_8h" startline="62">IE_PREC_INT4</references>
        <references refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" compoundref="ie__api_8h" startline="60">IE_PREC_INT4W</references>
        <references refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" compoundref="ie__api_8h" startline="58">IE_PREC_INT8W</references>
        <references refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" compoundref="weights_8c" startline="407" endline="409">ie_weights_close</references>
        <references refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</references>
        <references refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" compoundref="weights_8c" startline="386" endline="402">ie_weights_touch</references>
        <references refid="structie__metrics__t_1a8f046409ae21785342371064b2355ce1" compoundref="ie__metrics_8h" startline="34">ie_metrics_t::kv_hits</references>
        <references refid="structie__metrics__t_1afc2a1bc5d415d0bdd29350f3d52aab6c" compoundref="ie__metrics_8h" startline="35">ie_metrics_t::kv_misses</references>
        <references refid="structie__weights__s_1a0e365369fa9f9920eda71bd9be50c5bb" compoundref="ie__io_8h" startline="127">ie_weights_s::loaded</references>
        <references refid="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" compoundref="main__infer_8c" startline="80" endline="84">now_sec</references>
        <references refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" compoundref="main__infer_8c" startline="293" endline="341">parse_flags</references>
        <references refid="structie__engine__params_1a92b02bad12cb4e8173728311c00960b7" compoundref="ie__api_8h" startline="117">ie_engine_params::precision</references>
        <references refid="structie__engine__params_1a34f965300425f8c1115b2408a4adc04a" compoundref="ie__api_8h" startline="114">ie_engine_params::prefetch</references>
        <references refid="structie__engine__params_1a992270ba61612b2acb319aed5cbfca13" compoundref="ie__api_8h" startline="113">ie_engine_params::pretranspose</references>
        <references refid="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" compoundref="main__infer_8c" startline="394" endline="443">print_json_result</references>
        <references refid="main__infer_8c_1a609fc6d778b714530dadf2ef012acf5c" compoundref="main__infer_8c" startline="358" endline="370">read_first_nonempty_line</references>
        <references refid="structie__engine__params_1a0c0b5f7588c98d30e0d2535790f6f24c" compoundref="ie__api_8h" startline="111">ie_engine_params::threads</references>
        <references refid="main__infer_8c_1a86d500a34c624c2cae56bc25a31b12f3" compoundref="main__infer_8c" startline="47">UNUSED</references>
        <references refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" compoundref="ie__io_8h" startline="117">ie_weights_s::weights_path</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CLI entry point for the inference engine (benchmark-friendly). </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="main__infer_8c_1modes">
<title>Execution modes</title><para><orderedlist>
<listitem><para><bold>CI/Stub</bold> mode (default) — does not require model files. The engine generates deterministic pseudo-token IDs (see <ref refid="ie__api_8c" kindref="compound">ie_api.c</ref>).</para>
</listitem><listitem><para><bold>Strict</bold> mode (opt-in) — when <computeroutput>IE_REQUIRE_MODEL=1</computeroutput>, the program requires a valid IEBIN v1 pair in the current directory (<computeroutput>model.ie.json</computeroutput> + <computeroutput>model.ie.bin</computeroutput>). If <computeroutput>IE_BYTES_PER_TOKEN &gt; 0</computeroutput>, it mmaps the weights and performs a <bold>per-token</bold> “work touch” loop to mimic realistic memory pressure. This work-touch loop is <bold>counted</bold> inside the timed window.</para>
</listitem></orderedlist>
</para>
</sect1>
<sect1 id="main__infer_8c_1timing">
<title>Critical timing rule</title><para>The measured window includes only:<itemizedlist>
<listitem><para><computeroutput>ie_engine_generate(...)</computeroutput></para>
</listitem><listitem><para>the optional per-token “work touch” over the model blob</para>
</listitem></itemizedlist>
</para>
<para>All instrumentation (RSS sampling, JSON printing, etc.) runs <bold>outside</bold> the measured window to avoid skewing tokens/s measurements. </para>
</sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File:<sp/>engine/src/main_infer.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="main__infer_8c_1a3024ccd4a9af5109d24e6c57565d74a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_C_SOURCE<sp/>200809L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__api_8h" kindref="compound">ie_api.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>engine<sp/>API<sp/>+<sp/>ie_metrics_t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__io_8h" kindref="compound">ie_io.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IEBIN<sp/>loader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__kv__instrumentation_8h" kindref="compound">ie_kv_instrumentation.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>KV<sp/>round<sp/>helpers<sp/>(begin/finish/on_token)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__metrics_8h" kindref="compound">util_metrics.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>KV<sp/>&amp;<sp/>RSS<sp/>helpers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__logging_8h" kindref="compound">util_logging.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>optional<sp/>logging<sp/>macros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UNUSED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="main__infer_8c_1a86d500a34c624c2cae56bc25a31b12f3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UNUSED(x)<sp/>(void)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Provide<sp/>string<sp/>defaults<sp/>locally<sp/>to<sp/>avoid<sp/>depending<sp/>on<sp/>external<sp/>macros.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_FP32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_FP32<sp/>&quot;fp32&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_BF16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_BF16<sp/>&quot;bf16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_FP16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_FP16<sp/>&quot;fp16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_INT8W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_INT8W<sp/>&quot;int8w&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_INT4W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_INT4W<sp/>&quot;int4w&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_PREC_INT4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>IE_PREC_INT4<sp/>&quot;int4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Time<sp/>utilities<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" kindref="member">now_sec</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/>ts;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>clock_gettime(CLOCK_MONOTONIC,<sp/>&amp;ts);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)ts.tv_sec<sp/>+<sp/>(double)ts.tv_nsec<sp/>*<sp/>1e-9;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Env<sp/>helpers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" kindref="member">env_long</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>defv)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>getenv(name);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s<sp/>||<sp/>!*s)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>defv;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>strtol(s,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(end<sp/>&amp;&amp;<sp/>*end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>?<sp/>v<sp/>:<sp/>defv;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="main__infer_8c_1a1da65df4642943745d356d6de2983f02" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="main__infer_8c_1a1da65df4642943745d356d6de2983f02" kindref="member">env_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*defv)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>getenv(name);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(s<sp/>&amp;&amp;<sp/>*s)<sp/>?<sp/>s<sp/>:<sp/>defv;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ASCII<sp/>utilities<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a<sp/>||<sp/>!b)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*a<sp/>&amp;&amp;<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ca<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)*a;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cb<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)*b;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>la<sp/>=<sp/>(ca<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>ca<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>?<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(ca<sp/>+<sp/>32)<sp/>:<sp/>ca;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lb<sp/>=<sp/>(cb<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>cb<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>?<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)(cb<sp/>+<sp/>32)<sp/>:<sp/>cb;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(la<sp/>!=<sp/>lb)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>++a;<sp/>++b;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*a<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*b<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CLI<sp/>options<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153" refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" kindref="member">CLI_PREC_FP32</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="154" refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda5511dde5ecea27256242423b924d3b69" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda5511dde5ecea27256242423b924d3b69" kindref="member">CLI_PREC_BF16</ref><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="155" refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda8c7355186bb9ef03b1fdb0ff3b3b9766" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda8c7355186bb9ef03b1fdb0ff3b3b9766" kindref="member">CLI_PREC_FP16</ref><sp/>=<sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fd" kindref="member">cli_precision_t</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="163" refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" kindref="member">CLI_PRETX_NONE</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="164" refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" kindref="member">CLI_PRETX_WOH</ref><sp/><sp/>=<sp/>1,<sp/></highlight></codeline>
<codeline lineno="165" refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" kindref="member">CLI_PRETX_WXH</ref><sp/><sp/>=<sp/>2,<sp/></highlight></codeline>
<codeline lineno="166" refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da4fad867319e4f9197a9c373762a3ad54" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da4fad867319e4f9197a9c373762a3ad54" kindref="member">CLI_PRETX_ALL</ref><sp/><sp/>=<sp/>3<sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}<sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41d" kindref="member">cli_pretranspose_t</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structcli__extras" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcli__extras" kindref="compound">cli_extras</ref><sp/>{</highlight></codeline>
<codeline lineno="174" refid="structcli__extras_1aa45c7376781454d767d2202800c27a3e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1aa45c7376781454d767d2202800c27a3e" kindref="member">prompt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="175" refid="structcli__extras_1a5eb0317aa09b90f400b657245b41e92c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a5eb0317aa09b90f400b657245b41e92c" kindref="member">max_new</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176" refid="structcli__extras_1a4e8cdca32127b81f8fcb41047a320844" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a4e8cdca32127b81f8fcb41047a320844" kindref="member">threads</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="177" refid="structcli__extras_1a8d2e77b03a5d60f1620594428885c49f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fd" kindref="member">cli_precision_t</ref><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a8d2e77b03a5d60f1620594428885c49f" kindref="member">prec</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178" refid="structcli__extras_1a313d0562dfb63a6350db5c84128fc074" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a313d0562dfb63a6350db5c84128fc074" kindref="member">affinity</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179" refid="structcli__extras_1a648dda8436ede182650f29f0460fa6a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41d" kindref="member">cli_pretranspose_t</ref><sp/><ref refid="structcli__extras_1a648dda8436ede182650f29f0460fa6a3" kindref="member">pretx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180" refid="structcli__extras_1a50cd2ee771a9eee3fd448d2a1c0b5645" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a50cd2ee771a9eee3fd448d2a1c0b5645" kindref="member">device</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Harness/compat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="structcli__extras_1a992ba8185b17f227f60e2e570441b63f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a992ba8185b17f227f60e2e570441b63f" kindref="member">prompts_file</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="184" refid="structcli__extras_1a4af612c719a80234b4e753bc559f358c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a4af612c719a80234b4e753bc559f358c" kindref="member">batch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185" refid="structcli__extras_1a01be4e3c92d754527967d04b729e4ee6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a01be4e3c92d754527967d04b729e4ee6" kindref="member">prefetch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="186" refid="structcli__extras_1a628bf363ee35fe852bbb6510455647bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a628bf363ee35fe852bbb6510455647bd" kindref="member">warmup_tokens</ref>;<sp/></highlight></codeline>
<codeline lineno="187" refid="structcli__extras_1a4e233e0c7d76b4fb4338d7460a552707" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a4e233e0c7d76b4fb4338d7460a552707" kindref="member">aggregate</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188" refid="structcli__extras_1a8c1b8fdbf9dc75a774e8b451608c961b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a8c1b8fdbf9dc75a774e8b451608c961b" kindref="member">rounds</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Model<sp/>location<sp/>options<sp/>(for<sp/>harness<sp/>compatibility).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structcli__extras_1aa52e671b92aa5a9099153b609a0c5792" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1aa52e671b92aa5a9099153b609a0c5792" kindref="member">model_dir</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="192" refid="structcli__extras_1a96d26a6a2f436fb0b232d383f321c3e6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a96d26a6a2f436fb0b232d383f321c3e6" kindref="member">model_json</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193" refid="structcli__extras_1ae2401ceced12a603aabefd22f57584bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1ae2401ceced12a603aabefd22f57584bd" kindref="member">model_bin</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Raw<sp/>precision<sp/>label<sp/>passed<sp/>to<sp/>engine<sp/>(includes<sp/>int8w/int4/int4w).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structcli__extras_1a061a8ed1f6671ad018d99db180df06c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="structcli__extras_1a061a8ed1f6671ad018d99db180df06c2" kindref="member">precision_label</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197" refid="structcli__extras_1a49d7c958a59c223a1f66d6aedc796e68" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcli__extras_1a49d7c958a59c223a1f66d6aedc796e68" kindref="member">precision_from_flag</ref>;<sp/></highlight></codeline>
<codeline lineno="198" refid="main__infer_8c_1a9973434ae2443cc726369b714df7b2cb" refkind="member"><highlight class="normal">}<sp/><ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CLI<sp/>parsing<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>fprintf(stderr,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Usage:<sp/>inference-engine<sp/>[--prompt<sp/>TEXT]<sp/>[--max-new<sp/>N]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--threads<sp/>N]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--precision<sp/>fp32|bf16|fp16|int8w|int4|int4w]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--affinity<sp/>auto|compact|scatter]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--pretranspose<sp/>none|woh|wxh|all]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--device<sp/>auto|cpu|cuda|ze]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--model-dir<sp/>PATH]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--model-json<sp/>PATH]<sp/>[--model-bin<sp/>PATH]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--prompts-file<sp/>PATH]<sp/>[--batch<sp/>N]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--prefetch<sp/>on|off|auto|N]<sp/>[--warmup<sp/>N]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--rounds<sp/>N]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[--aggregate]\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Env<sp/>overrides:<sp/>IE_PRECISION<sp/>or<sp/>PRECISION<sp/>(same<sp/>accepted<sp/>values)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="main__infer_8c_1a25c42477bc56f4eb2d2a5c53e4510d70" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a25c42477bc56f4eb2d2a5c53e4510d70" kindref="member">cli_extras_defaults</ref>(<ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>e-&gt;prompt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>e-&gt;max_new<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>e-&gt;threads<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>e-&gt;prec<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" kindref="member">CLI_PREC_FP32</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>e-&gt;affinity<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;auto&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>e-&gt;pretx<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" kindref="member">CLI_PRETX_NONE</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>e-&gt;device<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;auto&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>e-&gt;prompts_file<sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>e-&gt;batch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>e-&gt;prefetch<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;auto&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>e-&gt;warmup_tokens<sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>e-&gt;aggregate<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>e-&gt;rounds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>e-&gt;model_dir<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>e-&gt;model_json<sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/>e-&gt;model_bin<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>e-&gt;precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" kindref="member">IE_PREC_FP32</ref>;<sp/></highlight><highlight class="comment">/*<sp/>&quot;fp32&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>e-&gt;precision_from_flag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s<sp/>||<sp/>!*s)<sp/>{<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>empty<sp/>integer\n&quot;</highlight><highlight class="normal">);<sp/>exit(2);<sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>strtol(s,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>==<sp/>s<sp/>||<sp/>*end)<sp/>{<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>invalid<sp/>integer:<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>s);<sp/>exit(2);<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" kindref="member">parse_flags</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/><ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref><sp/>*out)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a25c42477bc56f4eb2d2a5c53e4510d70" kindref="member">cli_extras_defaults</ref>(out);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(a,</highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal">))<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--prompt&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;prompt<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--max-new&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v=<ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(argv[i]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v&lt;0){fprintf(stderr,</highlight><highlight class="stringliteral">&quot;error:<sp/>--max-new<sp/>&gt;=<sp/>0\n&quot;</highlight><highlight class="normal">);</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;}<sp/>out-&gt;max_new=(size_t)v;<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--threads&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v=<ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(argv[i]);<sp/>out-&gt;threads=(int)v;<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--precision&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*m<sp/>=<sp/>argv[i];</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" kindref="member">IE_PREC_FP32</ref>))<sp/>out-&gt;prec=<ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fdaa40222a944642b713319ba4c1bc8c266" kindref="member">CLI_PREC_FP32</ref>,<sp/>out-&gt;precision_label=<ref refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" kindref="member">IE_PREC_FP32</ref>,<sp/>out-&gt;precision_from_flag=1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" kindref="member">IE_PREC_BF16</ref>))<sp/>out-&gt;prec=<ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda5511dde5ecea27256242423b924d3b69" kindref="member">CLI_PREC_BF16</ref>,<sp/>out-&gt;precision_label=<ref refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" kindref="member">IE_PREC_BF16</ref>,<sp/>out-&gt;precision_from_flag=1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" kindref="member">IE_PREC_FP16</ref>))<sp/>out-&gt;prec=<ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fda8c7355186bb9ef03b1fdb0ff3b3b9766" kindref="member">CLI_PREC_FP16</ref>,<sp/>out-&gt;precision_label=<ref refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" kindref="member">IE_PREC_FP16</ref>,<sp/>out-&gt;precision_from_flag=1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" kindref="member">IE_PREC_INT8W</ref>))<sp/>{<sp/>out-&gt;precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" kindref="member">IE_PREC_INT8W</ref>;<sp/>out-&gt;precision_from_flag=1;<sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" kindref="member">IE_PREC_INT4W</ref>)<sp/>||<sp/><ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(m,<sp/><ref refid="ie__api_8h_1add4934bbdd3dc2bf4e3ab8438b0d7757" kindref="member">IE_PREC_INT4</ref>))<sp/>{<sp/>out-&gt;precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" kindref="member">IE_PREC_INT4W</ref>;<sp/>out-&gt;precision_from_flag=1;<sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;error:<sp/>unknown<sp/>precision<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>m);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--affinity&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;affinity<sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--pretranspose&quot;</highlight><highlight class="normal">)){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*p=argv[i];</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(p,</highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">))<sp/>out-&gt;pretx=<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" kindref="member">CLI_PRETX_NONE</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(p,</highlight><highlight class="stringliteral">&quot;woh&quot;</highlight><highlight class="normal">))<sp/>out-&gt;pretx=<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" kindref="member">CLI_PRETX_WOH</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(p,</highlight><highlight class="stringliteral">&quot;wxh&quot;</highlight><highlight class="normal">))<sp/>out-&gt;pretx=<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" kindref="member">CLI_PRETX_WXH</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!strcmp(p,</highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">))<sp/>out-&gt;pretx=<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da4fad867319e4f9197a9c373762a3ad54" kindref="member">CLI_PRETX_ALL</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;error:<sp/>unknown<sp/>pretranspose<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>p);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--device&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;device<sp/>=<sp/>argv[i];<sp/></highlight><highlight class="comment">/*<sp/>accepted;<sp/>no-op<sp/>hint<sp/>*/</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--model-dir&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;model_dir<sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--model-json&quot;</highlight><highlight class="normal">))<sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;model_json<sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--model-bin&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;model_bin<sp/><sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--prompts-file&quot;</highlight><highlight class="normal">)){<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;prompts_file<sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--batch&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;batch<sp/>=<sp/>(int)<ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(argv[i]);<sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--prefetch&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}<sp/>out-&gt;prefetch<sp/>=<sp/>argv[i];<sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--warmup&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcmp(a,</highlight><highlight class="stringliteral">&quot;--warmup-tokens&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(argv[i]);<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>0)<sp/>v<sp/>=<sp/>0;<sp/>out-&gt;warmup_tokens<sp/>=<sp/>(int)v;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--rounds&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++i&gt;=argc)<sp/>{<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/><ref refid="main__infer_8c_1a42cabe54dce1190125a12e4c0360ce22" kindref="member">safe_atoi</ref>(argv[i]);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&lt;<sp/>1)<sp/>v<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out-&gt;rounds<sp/>=<sp/>(int)v;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,</highlight><highlight class="stringliteral">&quot;--aggregate&quot;</highlight><highlight class="normal">))<sp/><sp/><sp/>{<sp/>out-&gt;aggregate<sp/>=<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;error:<sp/>unknown<sp/>flag<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>a);<sp/><ref refid="main__infer_8c_1ad96d407a911fbb914fa8e4cfbf2faf0f" kindref="member">usage</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>out-&gt;prompt<sp/>=<sp/>a;<sp/>}<sp/></highlight><highlight class="comment">/*<sp/>positional<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Prompts<sp/>helper<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="main__infer_8c_1a609fc6d778b714530dadf2ef012acf5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a609fc6d778b714530dadf2ef012acf5c" kindref="member">read_first_nonempty_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bufsz)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;warn:<sp/>cannot<sp/>open<sp/>prompts<sp/>file<sp/>&apos;%s&apos;:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>path,<sp/>strerror(errno));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)bufsz,<sp/>f))<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(buf);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&amp;&amp;<sp/>(buf[n-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal"><sp/>||<sp/>buf[n-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">))<sp/>buf[--n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ok<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>JSON<sp/>emitter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" kindref="member">print_json_result</ref>(uint32_t<sp/>n_tok,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*tokens,</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wall_s_in,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kv_hits,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kv_misses,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rss_peak_mb)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>WALL_MIN<sp/>=<sp/>3e-4;<sp/></highlight><highlight class="comment">/*<sp/>0.0003<sp/>s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wall_s<sp/>=<sp/>wall_s_in;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wall_s<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;<sp/>wall_s<sp/>&lt;<sp/>WALL_MIN)<sp/>wall_s<sp/>=<sp/>WALL_MIN;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>True<sp/>TPS:<sp/>by<sp/>definition<sp/>in<sp/>this<sp/>tool,<sp/>it&apos;s<sp/>n_tok<sp/>/<sp/>wall-time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tps_true<sp/>=<sp/>(wall_s<sp/>&gt;<sp/>0.0)<sp/>?<sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n_tok<sp/>/<sp/>wall_s)<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Simple<sp/>latency<sp/>proxies<sp/>if<sp/>caller<sp/>didn&apos;t<sp/>compute<sp/>them<sp/>elsewhere.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p50<sp/>=<sp/>0.0,<sp/>p95<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n_tok<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>wall_s<sp/>&gt;<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>per_tok_ms<sp/>=<sp/>(wall_s<sp/>*<sp/>1000.0)<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n_tok;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(per_tok_ms<sp/>&lt;<sp/>0.001)<sp/>per_tok_ms<sp/>=<sp/>0.001;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>p50<sp/>=<sp/>per_tok_ms;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>p95<sp/>=<sp/>per_tok_ms<sp/>*<sp/>2.0;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;{\&quot;tokens_generated\&quot;:<sp/>%u,&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)n_tok);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>tokens<sp/>array:<sp/>empty<sp/>when<sp/>tokens==NULL<sp/>to<sp/>avoid<sp/>huge<sp/>prints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;\&quot;tokens\&quot;:[&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokens<sp/>&amp;&amp;<sp/>n_tok<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint32_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_tok;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>v<sp/>=<sp/>tokens[i];</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;%u%s&quot;</highlight><highlight class="normal">,<sp/>v,<sp/>(i<sp/>+<sp/>1<sp/>&lt;<sp/>n_tok)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>fputs(</highlight><highlight class="stringliteral">&quot;],&quot;</highlight><highlight class="normal">,<sp/>stdout);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>fprintf(stdout,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;wall_time_s\&quot;:<sp/>%.6f,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;tps_true\&quot;:<sp/>%.6f,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;latency_p50_ms\&quot;:<sp/>%.3f,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;latency_p95_ms\&quot;:<sp/>%.3f,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;rss_peak_mb\&quot;:<sp/>%u,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;kv_hits\&quot;:<sp/>%llu,&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\&quot;kv_misses\&quot;:<sp/>%llu}\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wall_s,</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tps_true,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p50,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p95,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)rss_peak_mb,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kv_hits,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kv_misses);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>main<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__api_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>parse<sp/>CLI<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="structcli__extras__t" kindref="compound">cli_extras_t</ref><sp/>opt;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a456ba954f3884bcf5f72fc3e779de284" kindref="member">parse_flags</ref>(argc,<sp/>argv,<sp/>&amp;opt)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Optional:<sp/>change<sp/>working<sp/>dir<sp/>early<sp/>if<sp/>requested.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt.model_dir<sp/>&amp;&amp;<sp/>*opt.model_dir)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chdir(opt.model_dir)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>--model-dir<sp/>&apos;%s&apos;<sp/>is<sp/>not<sp/>accessible:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.model_dir,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Precision<sp/>from<sp/>env<sp/>if<sp/>not<sp/>provided<sp/>on<sp/>the<sp/>command<sp/>line.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opt.precision_from_flag)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*envp<sp/>=<sp/><ref refid="main__infer_8c_1a1da65df4642943745d356d6de2983f02" kindref="member">env_str</ref>(</highlight><highlight class="stringliteral">&quot;IE_PRECISION&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main__infer_8c_1a1da65df4642943745d356d6de2983f02" kindref="member">env_str</ref>(</highlight><highlight class="stringliteral">&quot;PRECISION&quot;</highlight><highlight class="normal">,<sp/><ref refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" kindref="member">IE_PREC_FP32</ref>));</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(envp,<sp/><ref refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" kindref="member">IE_PREC_INT4W</ref>)<sp/>||<sp/><ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(envp,<sp/><ref refid="ie__api_8h_1add4934bbdd3dc2bf4e3ab8438b0d7757" kindref="member">IE_PREC_INT4</ref>))</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a59927f17b60d23df0f20dacdaa1d97d5" kindref="member">IE_PREC_INT4W</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(envp,<sp/><ref refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" kindref="member">IE_PREC_INT8W</ref>))</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a39d144d612b28562fa770e6b80e4158b" kindref="member">IE_PREC_INT8W</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(envp,<sp/><ref refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" kindref="member">IE_PREC_BF16</ref>))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a36369ac12d8f6028086c6d8287357d09" kindref="member">IE_PREC_BF16</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main__infer_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(envp,<sp/><ref refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" kindref="member">IE_PREC_FP16</ref>))</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.precision_label<sp/>=<sp/><ref refid="ie__api_8h_1af38bbb40dd97fe07d6fb6304d969d3a3" kindref="member">IE_PREC_FP16</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>opt.precision_label<sp/>=<sp/><ref refid="ie__api_8h_1a02291efdcf17c32155732deab5abe056" kindref="member">IE_PREC_FP32</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>no<sp/>explicit<sp/>--prompt,<sp/>try<sp/>--prompts-file<sp/>first<sp/>non-empty<sp/>line.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>prompt_buf[8192];</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opt.prompt<sp/>&amp;&amp;<sp/>opt.prompts_file<sp/>&amp;&amp;<sp/>!opt.aggregate)<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="main__infer_8c_1a609fc6d778b714530dadf2ef012acf5c" kindref="member">read_first_nonempty_line</ref>(opt.prompts_file,<sp/>prompt_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(prompt_buf));</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(r<sp/>==<sp/>1)<sp/>opt.prompt<sp/>=<sp/>prompt_buf;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>==<sp/>0)<sp/>{<sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;warn:<sp/>prompts<sp/>file<sp/>is<sp/>empty;<sp/>using<sp/>default<sp/>prompt\n&quot;</highlight><highlight class="normal">);<sp/>opt.prompt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bench&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>opt.prompt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;bench&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!opt.prompt<sp/>&amp;&amp;<sp/>!opt.prompts_file)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Graceful<sp/>empty<sp/>run:<sp/>print<sp/>a<sp/>valid<sp/>JSON<sp/>skeleton<sp/>for<sp/>tests.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structie__metrics__t" kindref="compound">ie_metrics_t</ref><sp/>mm;<sp/>memset(&amp;mm,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mm));</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" kindref="member">print_json_result</ref>(0,<sp/>NULL,<sp/>0.0,<sp/>0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>strict<sp/>IEBIN<sp/>gating<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require_model<sp/>=<sp/>(int)<ref refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" kindref="member">env_long</ref>(</highlight><highlight class="stringliteral">&quot;IE_REQUIRE_MODEL&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><ref refid="group__ie__io__weights_1gaf68ad3cdc2eb244fe4feed94372d7806" kindref="member">ie_weights_t</ref><sp/>w;<sp/>memset(&amp;w,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(w));</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*j<sp/>=<sp/>(opt.model_json<sp/>&amp;&amp;<sp/>*opt.model_json)<sp/>?<sp/>opt.model_json<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;./model.ie.json&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b<sp/>=<sp/>(opt.model_bin<sp/><sp/>&amp;&amp;<sp/>*opt.model_bin<sp/>)<sp/>?<sp/>opt.model_bin<sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;./model.ie.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wrc<sp/>=<sp/><ref refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" kindref="member">ie_weights_open</ref>(j,<sp/>b,<sp/>&amp;w);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrc<sp/>!=<sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(require_model)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>failed<sp/>to<sp/>open<sp/>IEBIN<sp/>(%s,<sp/>%s),<sp/>status=%d,<sp/>errno=%d<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j,<sp/>b,<sp/>wrc,<sp/>errno,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;#<sp/>-&gt;<sp/>warn:<sp/>IEBIN<sp/>metadata<sp/>not<sp/>found;<sp/>continuing<sp/>in<sp/>stub<sp/>mode…\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" kindref="member">ie_weights_touch</ref>(&amp;w)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>IEBIN<sp/>present<sp/>but<sp/>unreadable<sp/>(prefault/touch<sp/>failed)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kindref="member">ie_weights_close</ref>(&amp;w);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>create<sp/>engine<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="ie__api_8h_1a73fd6e398965a847ec84c3d208bf9e1a" kindref="member">ie_engine_params_t</ref><sp/>params;<sp/>memset(&amp;params,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(params));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>params.<ref refid="structie__engine__params_1a92b02bad12cb4e8173728311c00960b7" kindref="member">precision</ref><sp/><sp/><sp/><sp/>=<sp/>opt.precision_label;<sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>raw<sp/>label<sp/>(includes<sp/>int4w/int8w)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>params.<ref refid="structie__engine__params_1a66599574f8a4b8ed7cd7132fc1c0e051" kindref="member">affinity</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>opt.affinity;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/>params.<ref refid="structie__engine__params_1a992270ba61612b2acb319aed5cbfca13" kindref="member">pretranspose</ref><sp/>=<sp/>(opt.pretx==<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da382ceb68dddaaf8b27ac21f144305e74" kindref="member">CLI_PRETX_NONE</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.pretx==<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da9d22d4f265254a65af9fc3a7d648fe5d" kindref="member">CLI_PRETX_WOH</ref><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;woh&quot;</highlight><highlight class="normal"><sp/><sp/>:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt.pretx==<ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41da1a251ee24fdcadcaf9c888e0a96140e7" kindref="member">CLI_PRETX_WXH</ref><sp/><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;wxh&quot;</highlight><highlight class="normal"><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;all&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/>params.<ref refid="structie__engine__params_1a34f965300425f8c1115b2408a4adc04a" kindref="member">prefetch</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>opt.prefetch;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/>params.<ref refid="structie__engine__params_1a0c0b5f7588c98d30e0d2535790f6f24c" kindref="member">threads</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>opt.threads;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a86d500a34c624c2cae56bc25a31b12f3" kindref="member">UNUSED</ref>(opt.device);<sp/></highlight><highlight class="comment">/*<sp/>Currently<sp/>a<sp/>no-op<sp/>hint;<sp/>selection<sp/>happens<sp/>at<sp/>build/link<sp/>time.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><ref refid="ie__api_8h_1a2339b3d8d0ba3c2aff4d4ee7d912ab96" kindref="member">ie_engine_t</ref><sp/>*engine<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><ref refid="ie__api_8h_1a53268e558a08fa8a47c8422dbe1ceee7" kindref="member">ie_status_t</ref><sp/>st<sp/>=<sp/><ref refid="ie__api_8h_1a29d800407f90ba6b44385725da64f27d" kindref="member">ie_engine_create</ref>(&amp;params,<sp/>&amp;engine);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="ie__api_8h_1afe55386d31dcd43a7accd42d844d59d1" kindref="member">IE_OK</ref><sp/>||<sp/>!engine)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>ie_engine_create<sp/>failed<sp/>(status=%d)\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)st);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kindref="member">ie_weights_close</ref>(&amp;w);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>optional<sp/>warmup<sp/>(outside<sp/>timing)<sp/>-------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt.warmup_tokens<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wprompt<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;warmup&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>wtoks[128];<sp/>uint32_t<sp/>wcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>wmax<sp/>=<sp/>(opt.warmup_tokens<sp/>&lt;=<sp/>(int)(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wtoks)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wtoks[0])))</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)opt.warmup_tokens</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wtoks)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wtoks[0]));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="ie__api_8h_1a21ab40e22d9192fe353ad6640610a01d" kindref="member">ie_engine_generate</ref>(engine,<sp/>wprompt,<sp/>wmax,<sp/>wtoks,<sp/>&amp;wcount);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>token<sp/>output<sp/>buffer<sp/>--------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Always<sp/>allocate<sp/>a<sp/>buffer<sp/>so<sp/>ie_engine_generate()<sp/>never<sp/>sees<sp/>NULL.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/>uint32_t<sp/>*tokens<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cap<sp/>=<sp/>(opt.max_new<sp/>&gt;<sp/>0<sp/>?<sp/>opt.max_new<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cap_alloc<sp/>=<sp/>(cap<sp/>&gt;<sp/>0<sp/>?<sp/>cap<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>tokens<sp/>=<sp/>(uint32_t*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(uint32_t)<sp/>*<sp/>cap_alloc);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tokens)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>OOM<sp/>allocating<sp/>token<sp/>buffer\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ie__api_8h_1a8a724f7097b3e19da8d7dd97fba4415e" kindref="member">ie_engine_destroy</ref>(engine);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kindref="member">ie_weights_close</ref>(&amp;w);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>mmap<sp/>model.bin<sp/>for<sp/>per-token<sp/>work<sp/>------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes_per_token<sp/>=<sp/>(size_t)<ref refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" kindref="member">env_long</ref>(</highlight><highlight class="stringliteral">&quot;IE_BYTES_PER_TOKEN&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride_bytes<sp/><sp/><sp/><sp/>=<sp/>(size_t)<ref refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" kindref="member">env_long</ref>(</highlight><highlight class="stringliteral">&quot;IE_STRIDE_BYTES&quot;</highlight><highlight class="normal">,<sp/>256);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verify_touch<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(int)<ref refid="main__infer_8c_1a9675b1f5b8b73e24233f92cb11e31f6a" kindref="member">env_long</ref>(</highlight><highlight class="stringliteral">&quot;IE_VERIFY_TOUCH&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_fd<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*map<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/>map_len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w.<ref refid="structie__weights__s_1a0e365369fa9f9920eda71bd9be50c5bb" kindref="member">loaded</ref><sp/>&amp;&amp;<sp/>bytes_per_token<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>w.<ref refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" kindref="member">bin_size_bytes</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*binp<sp/>=<sp/>(w.<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>[0]<sp/>?<sp/>w.<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;./model.ie.bin&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>bin_fd<sp/>=<sp/>open(binp,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_fd<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>map_len<sp/>=<sp/>(size_t)w.<ref refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" kindref="member">bin_size_bytes</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>mmap(NULL,<sp/>map_len,<sp/>PROT_READ,<sp/>MAP_PRIVATE,<sp/>bin_fd,<sp/>0);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>MAP_FAILED)<sp/>{<sp/>map<sp/>=<sp/>NULL;<sp/>map_len<sp/>=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>map<sp/>=<sp/>(uint8_t*)p;<sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>KV<sp/>round<sp/>lifecycle<sp/>(outside<sp/>timing)<sp/>----------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/>(void)<ref refid="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" kindref="member">ie_kv_begin_round</ref>();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>uint64_t<sp/>total_tokens_this_round<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>measured<sp/>window:<sp/>ONLY<sp/>gen<sp/>+<sp/>work-touch<sp/>-------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" kindref="member">now_sec</ref>();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/>uint32_t<sp/>tokens_generated_total<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>(opt.rounds<sp/>&gt;<sp/>0<sp/>?<sp/>opt.rounds<sp/>:<sp/>1);<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt.aggregate<sp/>&amp;&amp;<sp/>opt.prompts_file)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>*pf<sp/>=<sp/>fopen(opt.prompts_file,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pf)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[8192];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(line),<sp/>pf))<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(line);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&amp;&amp;<sp/>(line[n-1]==</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">||line[n-1]==</highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">))<sp/>line[--n]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>n_here<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/><ref refid="ie__api_8h_1a21ab40e22d9192fe353ad6640610a01d" kindref="member">ie_engine_generate</ref>(engine,<sp/>line,<sp/>cap,<sp/>tokens,<sp/>&amp;n_here);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="ie__api_8h_1afe55386d31dcd43a7accd42d844d59d1" kindref="member">IE_OK</ref>)<sp/>{<sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;error:<sp/>ie_engine_generate<sp/>(status=%d)\n&quot;</highlight><highlight class="normal">,(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)st);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens_generated_total<sp/>+=<sp/>n_here;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_tokens_this_round<sp/>+=<sp/>(uint64_t)n_here;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map<sp/>&amp;&amp;<sp/>map_len<sp/>&amp;&amp;<sp/>bytes_per_token)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>need<sp/>=<sp/>(size_t)n_here<sp/>*<sp/>bytes_per_token;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>acc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>need)<sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>off<sp/>=<sp/>(pos<sp/>%<sp/>map_len);<sp/>acc<sp/>+=<sp/>map[off];<sp/>pos<sp/>+=<sp/>(stride_bytes<sp/>?<sp/>stride_bytes<sp/>:<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verify_touch)<sp/>{<sp/>(void)acc;<sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(pf);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;warn:<sp/>cannot<sp/>open<sp/>prompts-file<sp/>&apos;%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>opt.prompts_file);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(opt.prompt<sp/>?<sp/>opt.prompt<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;bench&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>n_here<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/><ref refid="ie__api_8h_1a21ab40e22d9192fe353ad6640610a01d" kindref="member">ie_engine_generate</ref>(engine,<sp/>p,<sp/>cap,<sp/>tokens,<sp/>&amp;n_here);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="ie__api_8h_1afe55386d31dcd43a7accd42d844d59d1" kindref="member">IE_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>ie_engine_generate<sp/>failed<sp/>(status=%d)\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)st);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tokens_generated_total<sp/>+=<sp/>n_here;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>total_tokens_this_round<sp/>+=<sp/>(uint64_t)n_here;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map<sp/>&amp;&amp;<sp/>map_len<sp/>&amp;&amp;<sp/>bytes_per_token)<sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>need<sp/>=<sp/>(size_t)n_here<sp/>*<sp/>bytes_per_token;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint64_t<sp/>acc<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>need)<sp/>{<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>off<sp/>=<sp/>(pos<sp/>%<sp/>map_len);<sp/>acc<sp/>+=<sp/>map[off];<sp/>pos<sp/>+=<sp/>(stride_bytes<sp/>?<sp/>stride_bytes<sp/>:<sp/>1);<sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verify_touch)<sp/>{<sp/>(void)acc;<sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="main__infer_8c_1a4fdbfffdaa0f22a01822f6a62bb7e95e" kindref="member">now_sec</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>AFTER<sp/>timing:<sp/>collect<sp/>metrics<sp/>----------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>uint64_t<sp/>kv_hits_round<sp/>=<sp/>0,<sp/>kv_miss_round<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="ie__kv__instrumentation_8h_1a2c9789a487a67ebc8e6054aa0b991e4e" kindref="member">ie_kv_finish_round</ref>(total_tokens_this_round,<sp/>&amp;kv_hits_round,<sp/>&amp;kv_miss_round);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Snapshot<sp/>engine-side<sp/>metrics<sp/>if<sp/>available<sp/>(kept<sp/>in<sp/>sync<sp/>with<sp/>API).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><ref refid="structie__metrics__t" kindref="compound">ie_metrics_t</ref><sp/>m;<sp/>memset(&amp;m,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(m));</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/>(void)<ref refid="ie__api_8h_1ac1c4268d66d8a840276e0a72c9ace902" kindref="member">ie_engine_metrics</ref>(engine,<sp/>&amp;m);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Prefer<sp/>the<sp/>round<sp/>counters<sp/>if<sp/>non-zero<sp/>(bench<sp/>semantics).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kv_hits_round<sp/>||<sp/>kv_miss_round)<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>m.<ref refid="structie__metrics__t_1a8f046409ae21785342371064b2355ce1" kindref="member">kv_hits</ref><sp/><sp/><sp/>=<sp/>kv_hits_round;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>m.<ref refid="structie__metrics__t_1afc2a1bc5d415d0bdd29350f3d52aab6c" kindref="member">kv_misses</ref><sp/>=<sp/>kv_miss_round;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sample<sp/>RSS<sp/>peak<sp/>outside<sp/>timing<sp/>window.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/>uint32_t<sp/>rss_mib<sp/>=<sp/><ref refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" kindref="member">ie_metrics_sample_rss_peak</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>m.rss_peak_mb<sp/>=<sp/>rss_mib;<sp/></highlight><highlight class="comment">/*<sp/>ok<sp/>even<sp/>if<sp/>the<sp/>field<sp/>is<sp/>present<sp/>or<sp/>ignored<sp/>otherwise<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------<sp/>print<sp/>JSON<sp/>&amp;<sp/>teardown<sp/>------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>print<sp/>tokens<sp/>array<sp/>when<sp/>it<sp/>is<sp/>a<sp/>single-run,<sp/>non-aggregate<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>*tokens_to_print<sp/>=<sp/>(opt.aggregate<sp/>||<sp/>opt.rounds<sp/>&gt;<sp/>1)<sp/>?<sp/>NULL<sp/>:<sp/>tokens;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><ref refid="main__infer_8c_1a5db8fa11a9c7e98dabe7f05ea69f4000" kindref="member">print_json_result</ref>(tokens_generated_total,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens_to_print,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(t1<sp/>-<sp/>t0),</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="structie__metrics__t_1a8f046409ae21785342371064b2355ce1" kindref="member">kv_hits</ref>,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m.<ref refid="structie__metrics__t_1afc2a1bc5d415d0bdd29350f3d52aab6c" kindref="member">kv_misses</ref>,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rss_mib);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/>free(tokens);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map<sp/>&amp;&amp;<sp/>map<sp/>!=<sp/>MAP_FAILED)<sp/>munmap(map,<sp/>map_len);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_fd<sp/>&gt;=<sp/>0)<sp/>close(bin_fd);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><ref refid="ie__api_8h_1a8a724f7097b3e19da8d7dd97fba4415e" kindref="member">ie_engine_destroy</ref>(engine);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><ref refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kindref="member">ie_weights_close</ref>(&amp;w);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="engine/src/main_infer.c"/>
  </compounddef>
</doxygen>
