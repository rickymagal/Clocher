<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="util__metrics_8c" kind="file" language="C++">
    <compoundname>util_metrics.c</compoundname>
    <includes refid="util__metrics_8h" local="yes">util_metrics.h</includes>
    <includes local="no">stdatomic.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">strings.h</includes>
    <includes local="no">sys/resource.h</includes>
    <incdepgraph>
      <node id="4">
        <label>ie_api.h</label>
        <link refid="ie__api_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>util_metrics.h</label>
        <link refid="util__metrics_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/util_metrics.c</label>
        <link refid="util__metrics_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>errno.h</label>
      </node>
      <node id="11">
        <label>stdarg.h</label>
      </node>
      <node id="6">
        <label>stdatomic.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>strings.h</label>
      </node>
      <node id="13">
        <label>sys/resource.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="util__metrics_8c_1a3024ccd4a9af5109d24e6c57565d74a1" prot="public" static="no">
        <name>_POSIX_C_SOURCE</name>
        <initializer>200809L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="28" column="9" bodyfile="engine/src/util_metrics.c" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="util__metrics_8c_1a2304e4230799c4132478704188bc8877" prot="public" static="yes" mutable="no">
        <type>_Atomic uint64_t</type>
        <definition>_Atomic uint64_t g_kv_hits</definition>
        <argsstring></argsstring>
        <name>g_kv_hits</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="48" column="25" bodyfile="engine/src/util_metrics.c" bodystart="48" bodyend="-1"/>
        <referencedby refid="ie__metrics_8h_1af9f02e4faa24298be27d9299df602fca" compoundref="util__metrics_8c" startline="158" endline="161">ie_metrics_add_kv</referencedby>
        <referencedby refid="ie__metrics_8h_1a7102e1b1461b7ac674d42c58660fda0d" compoundref="util__metrics_8c" startline="148" endline="151">ie_metrics_add_kv_hit</referencedby>
        <referencedby refid="ie__metrics_8h_1a874413f3f40c7927c465112b7f162656" compoundref="util__metrics_8c" startline="143" endline="146">ie_metrics_reset</referencedby>
        <referencedby refid="ie__metrics_8h_1a3a6a9208ad3e80cbc57fb1923e5e263f" compoundref="util__metrics_8c" startline="163" endline="175">ie_metrics_snapshot</referencedby>
      </memberdef>
      <memberdef kind="variable" id="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" prot="public" static="yes" mutable="no">
        <type>_Atomic uint64_t</type>
        <definition>_Atomic uint64_t g_kv_miss</definition>
        <argsstring></argsstring>
        <name>g_kv_miss</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="49" column="25" bodyfile="engine/src/util_metrics.c" bodystart="49" bodyend="-1"/>
        <referencedby refid="ie__metrics_8h_1af9f02e4faa24298be27d9299df602fca" compoundref="util__metrics_8c" startline="158" endline="161">ie_metrics_add_kv</referencedby>
        <referencedby refid="ie__metrics_8h_1a8eecda9f8202c3f887066f287d97c954" compoundref="util__metrics_8c" startline="153" endline="156">ie_metrics_add_kv_miss</referencedby>
        <referencedby refid="ie__metrics_8h_1a874413f3f40c7927c465112b7f162656" compoundref="util__metrics_8c" startline="143" endline="146">ie_metrics_reset</referencedby>
        <referencedby refid="ie__metrics_8h_1a3a6a9208ad3e80cbc57fb1923e5e263f" compoundref="util__metrics_8c" startline="163" endline="175">ie_metrics_snapshot</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="util__metrics_8c_1a122cec7f60fc2c07fdfcc3df4032b791" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int env_flag</definition>
        <argsstring>(const char *name)</argsstring>
        <name>env_flag</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return 1 if the env var <computeroutput>name</computeroutput> is a truthy flag (1,true,yes,on). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="58" column="12" bodyfile="engine/src/util_metrics.c" bodystart="58" bodyend="63"/>
        <referencedby refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" compoundref="util__metrics_8c" startline="68" endline="74">dbg</referencedby>
      </memberdef>
      <memberdef kind="function" id="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dbg</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>dbg</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Debug print controlled by <computeroutput>IE_DEBUG_RSS=1</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="68" column="13" bodyfile="engine/src/util_metrics.c" bodystart="68" bodyend="74"/>
        <references refid="util__metrics_8c_1a122cec7f60fc2c07fdfcc3df4032b791" compoundref="util__metrics_8c" startline="58" endline="63">env_flag</references>
        <referencedby refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" compoundref="util__metrics_8c" startline="181" endline="287">ie_metrics_sample_rss_peak</referencedby>
      </memberdef>
      <memberdef kind="function" id="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>static uint32_t kib_to_mib_ceil</definition>
        <argsstring>(uint64_t kib)</argsstring>
        <name>kib_to_mib_ceil</name>
        <param>
          <type>uint64_t</type>
          <declname>kib</declname>
        </param>
        <briefdescription>
<para>Round up kB to MiB (ceil), clamped to 32-bit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="79" column="17" bodyfile="engine/src/util_metrics.c" bodystart="79" bodyend="84"/>
        <referencedby refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" compoundref="util__metrics_8c" startline="181" endline="287">ie_metrics_sample_rss_peak</referencedby>
      </memberdef>
      <memberdef kind="function" id="util__metrics_8c_1a586d223d4a6c80952b53d76d31adccc2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int parse_status_kb_line</definition>
        <argsstring>(const char *line, const char *key, uint64_t *out_kb)</argsstring>
        <name>parse_status_kb_line</name>
        <param>
          <type>const char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_kb</declname>
        </param>
        <briefdescription>
<para>Parse integer kB from a &quot;Key:   12345 kB&quot; style line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="89" column="12" bodyfile="engine/src/util_metrics.c" bodystart="89" bodyend="108"/>
        <referencedby refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" compoundref="util__metrics_8c" startline="118" endline="137">read_proc_kb_single</referencedby>
      </memberdef>
      <memberdef kind="function" id="util__metrics_8c_1a68100912a526773182982dfe9e401718" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int read_proc_kb_single</definition>
        <argsstring>(const char *path, const char *key, uint64_t *out_kb)</argsstring>
        <name>read_proc_kb_single</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_kb</declname>
        </param>
        <briefdescription>
<para>Grep one numeric (kB) key from a procfs text file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>File path (e.g., &quot;/proc/self/status&quot;). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to match, e.g., &quot;VmHWM:&quot; or &quot;VmRSS:&quot; or &quot;Rss:&quot;. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_kb</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives parsed value (kB) on success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, -ENOENT if not found, negative errno otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/util_metrics.c" line="118" column="12" bodyfile="engine/src/util_metrics.c" bodystart="118" bodyend="137"/>
        <references refid="util__metrics_8c_1a586d223d4a6c80952b53d76d31adccc2" compoundref="util__metrics_8c" startline="89" endline="108">parse_status_kb_line</references>
        <referencedby refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" compoundref="util__metrics_8c" startline="181" endline="287">ie_metrics_sample_rss_peak</referencedby>
      </memberdef>
      <member refid="group__IE__METRICS_1ga874413f3f40c7927c465112b7f162656" kind="function"><name>ie_metrics_reset</name></member>
      <member refid="group__IE__METRICS_1ga7102e1b1461b7ac674d42c58660fda0d" kind="function"><name>ie_metrics_add_kv_hit</name></member>
      <member refid="group__IE__METRICS_1ga8eecda9f8202c3f887066f287d97c954" kind="function"><name>ie_metrics_add_kv_miss</name></member>
      <member refid="group__IE__METRICS_1gaf9f02e4faa24298be27d9299df602fca" kind="function"><name>ie_metrics_add_kv</name></member>
      <member refid="group__IE__METRICS_1ga3a6a9208ad3e80cbc57fb1923e5e263f" kind="function"><name>ie_metrics_snapshot</name></member>
      <member refid="group__IE__METRICS_1ga0b083c9fbf90d02c9ef387ab34220a34" kind="function"><name>ie_metrics_sample_rss_peak</name></member>
    </sectiondef>
    <briefdescription>
<para>Implementation of runtime metrics (KV counters + RSS sampling). </para>
    </briefdescription>
    <detaileddescription>
<para>This module backs the helpers declared in util_metrics.h:<itemizedlist>
<listitem><para>Process-wide accumulators for KV hits/misses using C11 atomics.</para>
</listitem><listitem><para>A best-effort function that samples the process peak RSS in MiB.</para>
</listitem></itemizedlist>
</para>
<para>Environment:<itemizedlist>
<listitem><para>Set <computeroutput>IE_DEBUG_RSS=1</computeroutput> to log which source (VmHWM/VmRSS/smaps_rollup/ getrusage/mach) was used and its raw units before conversion. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__metrics_8h" kindref="compound">util_metrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdatomic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="util__metrics_8h" kindref="compound">util_metrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_POSIX_C_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="util__metrics_8c_1a3024ccd4a9af5109d24e6c57565d74a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_C_SOURCE<sp/>200809L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strings.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>strcasecmp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Platform<sp/>headers<sp/>for<sp/>RSS<sp/>sampling<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;mach/mach.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Globals:<sp/>KV<sp/>accumulators<sp/>(process-wide)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_Atomic<sp/>uint64_t<sp/><ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49" refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_Atomic<sp/>uint64_t<sp/><ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Small<sp/>helpers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="util__metrics_8c_1a122cec7f60fc2c07fdfcc3df4032b791" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util__metrics_8c_1a122cec7f60fc2c07fdfcc3df4032b791" kindref="member">env_flag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>getenv(name);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s<sp/>||<sp/>!*s)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!strcasecmp(s,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcasecmp(s,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcasecmp(s,<sp/></highlight><highlight class="stringliteral">&quot;yes&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!strcasecmp(s,<sp/></highlight><highlight class="stringliteral">&quot;on&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="util__metrics_8c_1a122cec7f60fc2c07fdfcc3df4032b791" kindref="member">env_flag</ref>(</highlight><highlight class="stringliteral">&quot;IE_DEBUG_RSS&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>va_list<sp/>ap;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>va_start(ap,<sp/>fmt);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>vfprintf(stderr,<sp/>fmt,<sp/>ap);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>va_end(ap);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(uint64_t<sp/>kib)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kib<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0u;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ceil(kib/1024)<sp/>=<sp/>(kib<sp/>+<sp/>1023)<sp/>&gt;&gt;<sp/>10<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>uint64_t<sp/>mib<sp/>=<sp/>(kib<sp/>+<sp/>1023u)<sp/>&gt;&gt;<sp/>10;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>0xFFFFFFFFu)<sp/>?<sp/>0xFFFFFFFFu<sp/>:<sp/>(uint32_t)mib;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="util__metrics_8c_1a586d223d4a6c80952b53d76d31adccc2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util__metrics_8c_1a586d223d4a6c80952b53d76d31adccc2" kindref="member">parse_status_kb_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>line,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key,<sp/>uint64_t*<sp/>out_kb)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!line<sp/>||<sp/>!key<sp/>||<sp/>!out_kb)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>klen<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(line,<sp/>key,<sp/>klen)<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>p<sp/>=<sp/>line<sp/>+<sp/>klen;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)<sp/>++p;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>uint64_t<sp/>val<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>matched<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p<sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*p<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>matched<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>val<sp/>=<sp/>val<sp/>*<sp/>10<sp/>+<sp/>(uint64_t)(*p<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!matched)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>*out_kb<sp/>=<sp/>val;<sp/></highlight><highlight class="comment">/*<sp/>procfs<sp/>reports<sp/>kB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" kindref="member">read_proc_kb_single</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/>uint64_t<sp/>*out_kb)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-errno<sp/>?<sp/>-errno<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[512];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>buf,<sp/>f))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="util__metrics_8c_1a586d223d4a6c80952b53d76d31adccc2" kindref="member">parse_status_kb_line</ref>(buf,<sp/>key,<sp/>&amp;kb))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out_kb<sp/>=<sp/>kb;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOENT;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>(void)path;<sp/>(void)key;<sp/>(void)out_kb;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-ENOSYS;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>KV<sp/>counters<sp/>API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="ie__metrics_8h_1a874413f3f40c7927c465112b7f162656" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__IE__METRICS_1ga874413f3f40c7927c465112b7f162656" kindref="member">ie_metrics_reset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>atomic_store_explicit(&amp;<ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref>,<sp/>0,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>atomic_store_explicit(&amp;<ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref>,<sp/>0,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="ie__metrics_8h_1a7102e1b1461b7ac674d42c58660fda0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__IE__METRICS_1ga7102e1b1461b7ac674d42c58660fda0d" kindref="member">ie_metrics_add_kv_hit</ref>(uint64_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>(void)atomic_fetch_add_explicit(&amp;<ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref>,<sp/>n,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="ie__metrics_8h_1a8eecda9f8202c3f887066f287d97c954" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__IE__METRICS_1ga8eecda9f8202c3f887066f287d97c954" kindref="member">ie_metrics_add_kv_miss</ref>(uint64_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>(void)atomic_fetch_add_explicit(&amp;<ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref>,<sp/>n,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="ie__metrics_8h_1af9f02e4faa24298be27d9299df602fca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__IE__METRICS_1gaf9f02e4faa24298be27d9299df602fca" kindref="member">ie_metrics_add_kv</ref>(uint64_t<sp/>hits,<sp/>uint64_t<sp/>misses)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hits)<sp/><sp/><sp/>(void)atomic_fetch_add_explicit(&amp;<ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref>,<sp/>hits,<sp/><sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(misses)<sp/>(void)atomic_fetch_add_explicit(&amp;<ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref>,<sp/>misses,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="ie__metrics_8h_1a3a6a9208ad3e80cbc57fb1923e5e263f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__IE__METRICS_1ga3a6a9208ad3e80cbc57fb1923e5e263f" kindref="member">ie_metrics_snapshot</ref>(<ref refid="structie__metrics__t" kindref="compound">ie_metrics_t</ref>*<sp/>out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reset_after)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>hits<sp/>=<sp/>atomic_load_explicit(&amp;<ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref>,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>miss<sp/>=<sp/>atomic_load_explicit(&amp;<ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref>,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>out-&gt;<ref refid="structie__metrics__t_1a8f046409ae21785342371064b2355ce1" kindref="member">kv_hits</ref><sp/><sp/><sp/>=<sp/>hits;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>out-&gt;<ref refid="structie__metrics__t_1afc2a1bc5d415d0bdd29350f3d52aab6c" kindref="member">kv_misses</ref><sp/>=<sp/>miss;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reset_after)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_store_explicit(&amp;<ref refid="util__metrics_8c_1a2304e4230799c4132478704188bc8877" kindref="member">g_kv_hits</ref>,<sp/>0,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_store_explicit(&amp;<ref refid="util__metrics_8c_1a115dd2ed1a4c4c9987ad4c3b1e7ed6fa" kindref="member">g_kv_miss</ref>,<sp/>0,<sp/>memory_order_relaxed);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>RSS<sp/>peak<sp/>sampler<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="ie__metrics_8h_1a0b083c9fbf90d02c9ef387ab34220a34" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group__IE__METRICS_1ga0b083c9fbf90d02c9ef387ab34220a34" kindref="member">ie_metrics_sample_rss_peak</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>uint32_t<sp/>best_mib<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__linux__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>1)<sp/>Prefer<sp/>VmHWM<sp/>(kB)<sp/>—<sp/>process<sp/>peak<sp/>resident<sp/>set<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/><ref refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" kindref="member">read_proc_kb_single</ref>(</highlight><highlight class="stringliteral">&quot;/proc/self/status&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VmHWM:&quot;</highlight><highlight class="normal">,<sp/>&amp;kb);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(kb);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>VmHWM:<sp/>%llu<sp/>kB<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kb,<sp/>mib);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>VmHWM<sp/>not<sp/>found<sp/>(rc=%d)\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>2)<sp/>Fallback:<sp/>current<sp/>VmRSS<sp/>(kB)<sp/>as<sp/>lower<sp/>bound<sp/>if<sp/>HWM<sp/>is<sp/>unavailable.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_mib<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/><ref refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" kindref="member">read_proc_kb_single</ref>(</highlight><highlight class="stringliteral">&quot;/proc/self/status&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;VmRSS:&quot;</highlight><highlight class="normal">,<sp/>&amp;kb);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(kb);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>VmRSS:<sp/>%llu<sp/>kB<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kb,<sp/>mib);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>VmRSS<sp/>not<sp/>found<sp/>(rc=%d)\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>3)<sp/>Try<sp/>smaps_rollup<sp/>Rss:<sp/>(kB)<sp/>—<sp/>often<sp/>more<sp/>accurate<sp/>with<sp/>mmaps.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_mib<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/><ref refid="util__metrics_8c_1a68100912a526773182982dfe9e401718" kindref="member">read_proc_kb_single</ref>(</highlight><highlight class="stringliteral">&quot;/proc/self/smaps_rollup&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Rss:&quot;</highlight><highlight class="normal">,<sp/>&amp;kb);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(kb);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>smaps_rollup<sp/>Rss:<sp/>%llu<sp/>kB<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kb,<sp/>mib);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>smaps_rollup<sp/>Rss<sp/>not<sp/>found<sp/>(rc=%d)\n&quot;</highlight><highlight class="normal">,<sp/>rc);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>4)<sp/>Final<sp/>fallback:<sp/>getrusage<sp/>(Linux<sp/>ru_maxrss<sp/>is<sp/>kB).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_mib<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rusage<sp/>ru;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getrusage(RUSAGE_SELF,<sp/>&amp;ru)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>(uint64_t)ru.ru_maxrss;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(kb);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>getrusage<sp/>ru_maxrss:<sp/>%llu<sp/>kB<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kb,<sp/>mib);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>getrusage<sp/>failed:<sp/>errno=%d\n&quot;</highlight><highlight class="normal">,<sp/>errno);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>macOS<sp/>primary:<sp/>mach_task_basic_info<sp/>(bytes).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_task_basic_info<sp/>info;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>mach_msg_type_number_t<sp/>count<sp/>=<sp/>MACH_TASK_BASIC_INFO_COUNT;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>kern_return_t<sp/>kr<sp/>=<sp/>task_info(mach_task_self(),<sp/>MACH_TASK_BASIC_INFO,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(task_info_t)&amp;info,<sp/>&amp;count);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(kr<sp/>==<sp/>KERN_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>resident_size_max<sp/>is<sp/>peak<sp/>if<sp/>supported;<sp/>otherwise<sp/>0.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes<sp/>=<sp/>(uint64_t)info.resident_size_max;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>==<sp/>0)<sp/>bytes<sp/>=<sp/>(uint64_t)info.resident_size;<sp/></highlight><highlight class="comment">/*<sp/>at<sp/>least<sp/>current<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/>(uint32_t)((bytes<sp/>+<sp/>(1024u*1024u<sp/>-<sp/>1))<sp/>/<sp/>(1024u*1024u));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>mach_task_basic_info:<sp/>%llu<sp/>bytes<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)bytes,<sp/>mib);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>mach<sp/>task_info<sp/>failed:<sp/>kr=%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kr);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Fallback:<sp/>getrusage<sp/>(on<sp/>macOS<sp/>ru_maxrss<sp/>is<sp/>bytes).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best_mib<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rusage<sp/>ru;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getrusage(RUSAGE_SELF,<sp/>&amp;ru)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytes<sp/>=<sp/>(uint64_t)ru.ru_maxrss;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/>(uint32_t)((bytes<sp/>+<sp/>(1024u*1024u<sp/>-<sp/>1))<sp/>/<sp/>(1024u*1024u));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>getrusage<sp/>ru_maxrss(bytes):<sp/>%llu<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)bytes,<sp/>mib);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Other<sp/>OS:<sp/>try<sp/>getrusage<sp/>and<sp/>assume<sp/>kB<sp/>(conservative).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rusage<sp/>ru;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getrusage(RUSAGE_SELF,<sp/>&amp;ru)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>kb<sp/>=<sp/>(uint64_t)ru.ru_maxrss;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mib<sp/>=<sp/><ref refid="util__metrics_8c_1a5994eb8315fd500be4501693592b9c5a" kindref="member">kib_to_mib_ceil</ref>(kb);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mib<sp/>&gt;<sp/>best_mib)<sp/>best_mib<sp/>=<sp/>mib;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="util__metrics_8c_1aad9404d49721a4fdd407e2eff25b6489" kindref="member">dbg</ref>(</highlight><highlight class="stringliteral">&quot;[RSS]<sp/>generic<sp/>getrusage<sp/>ru_maxrss:<sp/>%llu<sp/>kB<sp/>-&gt;<sp/>%u<sp/>MiB\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)kb,<sp/>mib);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best_mib;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="engine/src/util_metrics.c"/>
  </compounddef>
</doxygen>
