<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__device__cuda_8h" kind="file" language="C++">
    <compoundname>ie_device_cuda.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="ie__device__cuda_8cu" local="yes">engine/src/devices/ie_device_cuda.cu</includedby>
    <incdepgraph>
      <node id="1">
        <label>engine/include/ie_device_cuda.h</label>
        <link refid="ie__device__cuda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>engine/include/ie_device_cuda.h</label>
        <link refid="ie__device__cuda_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>engine/src/devices/ie_device_cuda.cu</label>
        <link refid="ie__device__cuda_8cu"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3a9cd88592af53de0f089292225d4ba51a" prot="public">
          <name>IE_CUDA_OK</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>Success. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" prot="public">
          <name>IE_CUDA_ERR_RUNTIME</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>CUDA runtime API error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" prot="public">
          <name>IE_CUDA_UNAVAILABLE</name>
          <initializer>= -2</initializer>
          <briefdescription>
<para>CUDA not available or not compiled in. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3acead884c6ca62f6c8e186e6fc1957a29" prot="public">
          <name>IE_CUDA_EINVAL</name>
          <initializer>= -3</initializer>
          <briefdescription>
<para>Invalid arguments. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Return codes for CUDA backend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_cuda.h" line="42" column="1" bodyfile="engine/include/ie_device_cuda.h" bodystart="42" bodyend="47"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__device__cuda_8h_1aa7d18bba67349415d8d7cf8c92ed5e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_is_available</definition>
        <argsstring>(void)</argsstring>
        <name>ie_cuda_is_available</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if a CUDA device is available at runtime. </para>
        </briefdescription>
        <detaileddescription>
<para>This attempts to initialize the CUDA runtime and query the number of devices. When the code is compiled without CUDA support (IE_WITH_CUDA!=1), this returns IE_CUDA_UNAVAILABLE.</para>
<para><simplesect kind="return"><para>IE_CUDA_OK if at least one device is present; IE_CUDA_UNAVAILABLE otherwise; IE_CUDA_ERR_RUNTIME on CUDA API failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_cuda.h" line="60" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="179" bodyend="181" declfile="engine/include/ie_device_cuda.h" declline="60" declcolumn="5"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
      <memberdef kind="function" id="ie__device__cuda_8h_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_gemv_f32</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldw)</argsstring>
        <name>ie_cuda_gemv_f32</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldw</declname>
        </param>
        <briefdescription>
<para>Run y = W * x using a native CUDA kernel (FP32). </para>
        </briefdescription>
        <detaileddescription>
<para>Layout:<itemizedlist>
<listitem><para>W is row-major with leading dimension <computeroutput>ldw</computeroutput> (ldw &gt;= cols).</para>
</listitem><listitem><para>x is a length-<computeroutput>cols</computeroutput> vector.</para>
</listitem><listitem><para>y is a length-<computeroutput>rows</computeroutput> vector (output).</para>
</listitem></itemizedlist>
</para>
<para>Semantics:<itemizedlist>
<listitem><para>Allocates device buffers, copies W and x H2D, launches kernel, copies y D2H, and frees device buffers. This is correctness-first. We can add persistent allocations in a later iteration.</para>
</listitem></itemizedlist>
</para>
<para>Preconditions:<itemizedlist>
<listitem><para>All pointers must be non-NULL.</para>
</listitem><listitem><para>rows &gt; 0, cols &gt; 0, ldw &gt;= cols.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix of shape (rows, cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector of shape (cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector of shape (rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W / y length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cols in W / x length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldw</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W in elements (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IE_CUDA_OK on success; see return codes above otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_cuda.h" line="87" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="195" bodyend="204" declfile="engine/include/ie_device_cuda.h" declline="87" declcolumn="5"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
      <memberdef kind="function" id="ie__device__cuda_8h_1ab38bd0dae12a57023798df7696aed108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_gemv_f32_strided</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldw_e, size_t row_stride_bytes)</argsstring>
        <name>ie_cuda_gemv_f32_strided</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldw_e</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row_stride_bytes</declname>
        </param>
        <briefdescription>
<para>Convenience that also accepts strides in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="ie__device__cuda_8h_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" kindref="member">ie_cuda_gemv_f32</ref> but allows a byte-stride for W. Useful if the host matrix is subviewed or padded in bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to W (row-major). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to y. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldw_e</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension in elements (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_stride_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance in bytes from W[r,0] to W[r+1,0]. If 0, computed as ldw_e*sizeof(float). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IE_CUDA_OK on success or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_cuda.h" line="110" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="183" bodyend="193" declfile="engine/include/ie_device_cuda.h" declline="110" declcolumn="5"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CUDA backend entry points (first-party, no cuBLAS). </para>
    </briefdescription>
    <detaileddescription>
<para>This header exposes a minimal C ABI to offload FP32 GEMV to CUDA. It is backend-agnostic for the engine core: you can call these utilities opportunistically when CUDA is present, and fall back to the CPU path otherwise. No global state is leaked.</para>
<sect1 id="ie__device__cuda_8h_1autotoc_md30_1s1"><sect2 id="ie__device__cuda_8h_1autotoc_md30">
<title>Design goals</title><para><itemizedlist>
<listitem><para>Keep the ABI in plain C for easy inclusion in C11 code.</para>
</listitem><listitem><para>Avoid third-party libraries (no cuBLAS); ship a simple kernel.</para>
</listitem><listitem><para>Permit &quot;one-shot&quot; usage (alloc/copy/launch/free) for correctness first; later we can add persistent buffers for performance.</para>
</listitem></itemizedlist>
</para>
</sect2></sect1>
<sect1 id="ie__device__cuda_8h_1autotoc_md31_1s1"><sect2 id="ie__device__cuda_8h_1autotoc_md31">
<title>Thread safety</title><para>All functions are thread-safe as long as you do not share the same device pointers across threads. These entry points do not expose device pointers, so they are safe by construction.</para>
</sect2></sect1>
<sect1 id="ie__device__cuda_8h_1autotoc_md32_1s1"><sect2 id="ie__device__cuda_8h_1autotoc_md32">
<title>Return codes</title><para><itemizedlist>
<listitem><para>0: success</para>
</listitem><listitem><para>-1: runtime error (CUDA API error)</para>
</listitem><listitem><para>-2: unavailable (no CUDA device detected / not compiled with CUDA)</para>
</listitem><listitem><para>-3: invalid arguments</para>
</listitem></itemizedlist>
</para>
<para><simplesect kind="note"><para>Build is controlled by a compile-time macro: Define IE_WITH_CUDA=1 to compile/link the CUDA backend. </para>
</simplesect>
</para>
</sect2></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_DEVICE_CUDA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_DEVICE_CUDA_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="43" refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3a9cd88592af53de0f089292225d4ba51a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__kernels__cuda_8cu_1afb3284f12e7d5038612ece3185920449" kindref="member">IE_CUDA_OK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref><sp/><sp/><sp/>=<sp/>-2,<sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3acead884c6ca62f6c8e186e6fc1957a29" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3acead884c6ca62f6c8e186e6fc1957a29" kindref="member">IE_CUDA_EINVAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1aa7d18bba67349415d8d7cf8c92ed5e77" kindref="member">ie_cuda_is_available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" kindref="member">ie_cuda_gemv_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab38bd0dae12a57023798df7696aed108" kindref="member">ie_cuda_gemv_f32_strided</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw_e,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_stride_bytes);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_DEVICE_CUDA_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="engine/include/ie_device_cuda.h"/>
  </compounddef>
</doxygen>
