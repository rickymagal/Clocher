<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__IE__GPU__ZE" kind="group">
    <compoundname>IE_GPU_ZE</compoundname>
    <title>Level Zero (oneAPI) GPU backend</title>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="group__IE__GPU__ZE_1gab2c254b332e574ed55c2537075337f85" prot="public" static="no" strong="no">
        <type></type>
        <name>ie_act_kind_e</name>
        <enumvalue id="group__IE__GPU__ZE_1ggab2c254b332e574ed55c2537075337f85a72bddb07e52c2dcecd390cda078cd33f" prot="public">
          <name>IE_ACT_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Identity. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__IE__GPU__ZE_1ggab2c254b332e574ed55c2537075337f85a4efb020b6e30222eac585f53f1d3e47f" prot="public">
          <name>IE_ACT_RELU</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>ReLU. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__IE__GPU__ZE_1ggab2c254b332e574ed55c2537075337f85a5c3ab96a97ea7aa059b44e7508c28a08" prot="public">
          <name>IE_ACT_TANH</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>tanh(). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Activation kinds (must match the kernel’s expectations). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="56" column="1" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__IE__GPU__ZE_1ga08ba1d3777f64c23e99124d2e460e701" prot="public" static="no">
        <type>enum <ref refid="group__IE__GPU_1gab2c254b332e574ed55c2537075337f85" kindref="member">ie_act_kind_e</ref></type>
        <definition>typedef enum ie_act_kind_e ie_act_kind_t</definition>
        <argsstring></argsstring>
        <name>ie_act_kind_t</name>
        <briefdescription>
<para>Activation kinds (must match the kernel’s expectations). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="60" column="15"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__IE__GPU__ZE_1ga2100722ae0c819fdb4dffc24b916b33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ie_ze_last_error_string</definition>
        <argsstring>(void)</argsstring>
        <name>ie_ze_last_error_string</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the last error message set by this backend (thread-local). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>NUL-terminated message; never NULL (may be empty string). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="400" column="12" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="400" bodyend="402" declfile="engine/src/kernels/ze/ie_kernel_ze.cpp" declline="66" declcolumn="12"/>
        <references refid="ie__kernel__ze_8cpp_1ae3daac237c099094b2f875f7946eb0f1" compoundref="ie__kernel__ze_8cpp" startline="152" endline="152">g_err</references>
      </memberdef>
      <memberdef kind="function" id="group__IE__GPU__ZE_1ga71484badcdb4416b3ac57397416f7d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_launch_gemv_rowwise_f32</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldW, float alpha, float beta)</argsstring>
        <name>ie_ze_launch_gemv_rowwise_f32</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Row-wise GEMV FP32: y = alpha * W * x + beta * y. </para>
        </briefdescription>
        <detaileddescription>
<para>Row-wise GEMV FP32: y = alpha * W * x + beta * y.   </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix (rows x ldW). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector (length cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector (length rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W and elements in y (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in W and elements in x (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for W*x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for existing y (0 to overwrite). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error (see <ref refid="group__IE__GPU__ZE_1ga2100722ae0c819fdb4dffc24b916b33b" kindref="member">ie_ze_last_error_string()</ref>).</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix (rows x ldW). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector (length cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector (length rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W and elements in y (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in W and elements in x (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for W*x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for existing y (0 to overwrite). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error (see <ref refid="group__IE__GPU__ZE_1ga2100722ae0c819fdb4dffc24b916b33b" kindref="member">ie_ze_last_error_string()</ref>).</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="409" column="5" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="409" bodyend="457" declfile="engine/src/kernels/ze/ie_kernel_ze.cpp" declline="81" declcolumn="5"/>
        <references refid="ie__kernel__ze_8cpp_1a8966e8d4592d80b5e1f8d02dd586bb57" compoundref="ie__kernel__ze_8cpp" startline="354" endline="360">dalloc</references>
        <references refid="ie__kernel__ze_8cpp_1a8659992f4a5a709d0794e3b43ff99a30" compoundref="ie__kernel__ze_8cpp" startline="366" endline="368">dfree</references>
        <references refid="ie__kernel__ze_8cpp_1a46e8c280257654db04216d6acbefa0af" compoundref="ie__kernel__ze_8cpp" startline="286" endline="344">ensure_module_ready</references>
        <references refid="ie__kernel__ze_8cpp_1a930cdbd34cc3645d80df1dbb1272b3ec" compoundref="ie__kernel__ze_8cpp" startline="180">g_cl</references>
        <references refid="ie__kernel__ze_8cpp_1a9a6ad3ad9e373b68f8c67318d93fb8c4" compoundref="ie__kernel__ze_8cpp" startline="183">g_k_gemv</references>
        <references refid="ie__kernel__ze_8cpp_1aa101d0006375eb076cf21c1f890b7fb4" compoundref="ie__kernel__ze_8cpp" startline="377" endline="382">memcpy_imm</references>
        <references refid="ie__kernel__ze_8cpp_1a03e401cb53f156d70c1685d3b76aa747" compoundref="ie__kernel__ze_8cpp" startline="390" endline="392">set_arg</references>
        <references refid="ie__kernel__ze_8cpp_1a0a2c7ad4a3f3268ce3651eca6f04b24e" compoundref="ie__kernel__ze_8cpp" startline="158" endline="161">set_err</references>
        <references refid="ie__kernel__ze_8cpp_1a61ab8035d84fca555eafc1df0a25f611" compoundref="ie__kernel__ze_8cpp" startline="164" endline="173">ZE_GUARD</references>
      </memberdef>
      <memberdef kind="function" id="group__IE__GPU__ZE_1ga8b3a60d6c8ace36a7e0de49ef03666d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_launch_gemv_bias_act_f32</definition>
        <argsstring>(const float *W, const float *x, const float *bias, float *y, int rows, int cols, int ldW, float alpha, float beta, ie_act_kind_t act)</argsstring>
        <name>ie_ze_launch_gemv_bias_act_f32</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="group__IE__GPU_1ga08ba1d3777f64c23e99124d2e460e701" kindref="member">ie_act_kind_t</ref></type>
          <declname>act</declname>
        </param>
        <briefdescription>
<para>Fused GEMV + bias + activation: y = act(alpha*W*x + bias + beta*y). </para>
        </briefdescription>
        <detaileddescription>
<para>Fused GEMV + bias + activation: y = act(alpha*W*x + bias + beta*y).   </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix (rows x ldW). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector (length cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to per-row bias (length rows) or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector (length rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for W*x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for existing y (0 to overwrite). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>act</parametername>
</parameternamelist>
<parameterdescription>
<para>Activation kind (<ref refid="group__IE__GPU__ZE_1ga08ba1d3777f64c23e99124d2e460e701" kindref="member">ie_act_kind_t</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix (rows x ldW). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector (length cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to per-row bias (length rows) or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector (length rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for W*x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale for existing y (0 to overwrite). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>act</parametername>
</parameternamelist>
<parameterdescription>
<para>Activation kind (<ref refid="group__IE__GPU__ZE_1ga08ba1d3777f64c23e99124d2e460e701" kindref="member">ie_act_kind_t</ref>). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="462" column="5" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="462" bodyend="519" declfile="engine/src/kernels/ze/ie_kernel_ze.cpp" declline="105" declcolumn="5"/>
        <references refid="ie__kernel__ze_8cpp_1a8966e8d4592d80b5e1f8d02dd586bb57" compoundref="ie__kernel__ze_8cpp" startline="354" endline="360">dalloc</references>
        <references refid="ie__kernel__ze_8cpp_1a8659992f4a5a709d0794e3b43ff99a30" compoundref="ie__kernel__ze_8cpp" startline="366" endline="368">dfree</references>
        <references refid="ie__kernel__ze_8cpp_1a46e8c280257654db04216d6acbefa0af" compoundref="ie__kernel__ze_8cpp" startline="286" endline="344">ensure_module_ready</references>
        <references refid="ie__kernel__ze_8cpp_1a930cdbd34cc3645d80df1dbb1272b3ec" compoundref="ie__kernel__ze_8cpp" startline="180">g_cl</references>
        <references refid="ie__kernel__ze_8cpp_1a0e411d5a8807042d52fbc7f4e2d6f6f2" compoundref="ie__kernel__ze_8cpp" startline="184">g_k_gemv_ba</references>
        <references refid="ie__kernel__ze_8cpp_1aa101d0006375eb076cf21c1f890b7fb4" compoundref="ie__kernel__ze_8cpp" startline="377" endline="382">memcpy_imm</references>
        <references refid="ie__kernel__ze_8cpp_1a03e401cb53f156d70c1685d3b76aa747" compoundref="ie__kernel__ze_8cpp" startline="390" endline="392">set_arg</references>
        <references refid="ie__kernel__ze_8cpp_1a0a2c7ad4a3f3268ce3651eca6f04b24e" compoundref="ie__kernel__ze_8cpp" startline="158" endline="161">set_err</references>
        <references refid="ie__kernel__ze_8cpp_1a61ab8035d84fca555eafc1df0a25f611" compoundref="ie__kernel__ze_8cpp" startline="164" endline="173">ZE_GUARD</references>
      </memberdef>
      <memberdef kind="function" id="group__IE__GPU__ZE_1ga8cc805ce0f117c564d8ba8ed1df08669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_launch_vec_tanh_f32</definition>
        <argsstring>(float *y, const float *x, int n)</argsstring>
        <name>ie_ze_launch_vec_tanh_f32</name>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Vector tanh: y[i] = tanh(x[i]) for i in [0, n). </para>
        </briefdescription>
        <detaileddescription>
<para>Vector tanh: y[i] = tanh(x[i]) for i in [0, n).   </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output (length n). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to input (length n). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements (&gt;=1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output (length n). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to input (length n). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements (&gt;=1). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="526" column="5" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="526" bodyend="558" declfile="engine/src/kernels/ze/ie_kernel_ze.cpp" declline="124" declcolumn="5"/>
        <references refid="ie__kernel__ze_8cpp_1a8966e8d4592d80b5e1f8d02dd586bb57" compoundref="ie__kernel__ze_8cpp" startline="354" endline="360">dalloc</references>
        <references refid="ie__kernel__ze_8cpp_1a8659992f4a5a709d0794e3b43ff99a30" compoundref="ie__kernel__ze_8cpp" startline="366" endline="368">dfree</references>
        <references refid="ie__kernel__ze_8cpp_1a46e8c280257654db04216d6acbefa0af" compoundref="ie__kernel__ze_8cpp" startline="286" endline="344">ensure_module_ready</references>
        <references refid="ie__kernel__ze_8cpp_1a930cdbd34cc3645d80df1dbb1272b3ec" compoundref="ie__kernel__ze_8cpp" startline="180">g_cl</references>
        <references refid="ie__kernel__ze_8cpp_1a366a63bba391c37640746bcdbf0027b2" compoundref="ie__kernel__ze_8cpp" startline="185">g_k_tanh</references>
        <references refid="ie__kernel__ze_8cpp_1aa101d0006375eb076cf21c1f890b7fb4" compoundref="ie__kernel__ze_8cpp" startline="377" endline="382">memcpy_imm</references>
        <references refid="ie__kernel__ze_8cpp_1a03e401cb53f156d70c1685d3b76aa747" compoundref="ie__kernel__ze_8cpp" startline="390" endline="392">set_arg</references>
        <references refid="ie__kernel__ze_8cpp_1a0a2c7ad4a3f3268ce3651eca6f04b24e" compoundref="ie__kernel__ze_8cpp" startline="158" endline="161">set_err</references>
        <references refid="ie__kernel__ze_8cpp_1a61ab8035d84fca555eafc1df0a25f611" compoundref="ie__kernel__ze_8cpp" startline="164" endline="173">ZE_GUARD</references>
      </memberdef>
      <memberdef kind="function" id="group__IE__GPU__ZE_1ga01b63c6c0def048b6eb55bc2b1f2b4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_launch_pack_w_blockedk_f32</definition>
        <argsstring>(float *Wp, const float *W, int rows, int cols, int ldW, int block_k)</argsstring>
        <name>ie_ze_launch_pack_w_blockedk_f32</name>
        <param>
          <type>float *</type>
          <declname>Wp</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block_k</declname>
        </param>
        <briefdescription>
<para>Pack W (row-major) into Blocked-K layout into Wp. </para>
        </briefdescription>
        <detaileddescription>
<para>Pack W (row-major) into Blocked-K layout into Wp.   </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Wp</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to destination (size rows*cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to source row-major matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_k</parametername>
</parameternamelist>
<parameterdescription>
<para>Tile size along K (e.g., 32/64/128; &gt;0). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Wp</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to destination (size rows*cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to source row-major matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols (&gt;=1). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_k</parametername>
</parameternamelist>
<parameterdescription>
<para>Tile size along K (e.g., 32/64/128; &gt;0). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; negative on error.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernel_ze.cpp" line="565" column="5" bodyfile="engine/src/kernels/ze/ie_kernel_ze.cpp" bodystart="565" bodyend="608" declfile="engine/src/kernels/ze/ie_kernel_ze.cpp" declline="139" declcolumn="5"/>
        <references refid="ie__kernel__ze_8cpp_1a8966e8d4592d80b5e1f8d02dd586bb57" compoundref="ie__kernel__ze_8cpp" startline="354" endline="360">dalloc</references>
        <references refid="ie__kernel__ze_8cpp_1a8659992f4a5a709d0794e3b43ff99a30" compoundref="ie__kernel__ze_8cpp" startline="366" endline="368">dfree</references>
        <references refid="ie__kernel__ze_8cpp_1a46e8c280257654db04216d6acbefa0af" compoundref="ie__kernel__ze_8cpp" startline="286" endline="344">ensure_module_ready</references>
        <references refid="ie__kernel__ze_8cpp_1a930cdbd34cc3645d80df1dbb1272b3ec" compoundref="ie__kernel__ze_8cpp" startline="180">g_cl</references>
        <references refid="ie__kernel__ze_8cpp_1a3a59a1568fc326e835177098e2684674" compoundref="ie__kernel__ze_8cpp" startline="186">g_k_pack</references>
        <references refid="ie__kernel__ze_8cpp_1aa101d0006375eb076cf21c1f890b7fb4" compoundref="ie__kernel__ze_8cpp" startline="377" endline="382">memcpy_imm</references>
        <references refid="ie__kernel__ze_8cpp_1a03e401cb53f156d70c1685d3b76aa747" compoundref="ie__kernel__ze_8cpp" startline="390" endline="392">set_arg</references>
        <references refid="ie__kernel__ze_8cpp_1a0a2c7ad4a3f3268ce3651eca6f04b24e" compoundref="ie__kernel__ze_8cpp" startline="158" endline="161">set_err</references>
        <references refid="ie__kernel__ze_8cpp_1a61ab8035d84fca555eafc1df0a25f611" compoundref="ie__kernel__ze_8cpp" startline="164" endline="173">ZE_GUARD</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>C-callable API to launch kernels via Intel Level Zero. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
