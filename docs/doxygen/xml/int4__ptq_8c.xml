<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="int4__ptq_8c" kind="file" language="C++">
    <compoundname>int4_ptq.c</compoundname>
    <includes refid="ie__quant__int4_8h" local="yes">ie_quant_int4.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">float.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ie_quant_int4.h</label>
        <link refid="ie__quant__int4_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/quant/int4_ptq.c</label>
        <link refid="int4__ptq_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>float.h</label>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int clamp_q4</definition>
        <argsstring>(float x)</argsstring>
        <name>clamp_q4</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Clamp a float to the symmetric INT4 range [-7, +7] and convert to int. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value (already divided by scale). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Rounded and clamped integer in [-7, +7]. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/quant/int4_ptq.c" line="22" column="19" bodyfile="engine/src/quant/int4_ptq.c" bodystart="22" bodyend="28"/>
        <referencedby refid="group__ie__int4__quant_1gabbd1e0545969cb21f4bce5e48e75e276" compoundref="int4__ptq_8c" startline="167" endline="204">ie_int4_quantize_per_row</referencedby>
        <referencedby refid="group__ie__int4__quant_1ga66ddd8b08ec6b704f6744718bfc7f5aa" compoundref="int4__ptq_8c" startline="99" endline="134">ie_int4_quantize_per_tensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint8_t</type>
        <definition>static uint8_t pack_q4_pair</definition>
        <argsstring>(int q0, int q1)</argsstring>
        <name>pack_q4_pair</name>
        <param>
          <type>int</type>
          <declname>q0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>q1</declname>
        </param>
        <briefdescription>
<para>Pack two signed 4-bit integers (in [-7, +7]) into a single byte. </para>
        </briefdescription>
        <detaileddescription>
<para>Values are first biased by +8 to map them to [1, 15] (0 is unused here), then stored as low/high nibbles: low for even column, high for odd column.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>q0</parametername>
</parameternamelist>
<parameterdescription>
<para>First value (even column). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q1</parametername>
</parameternamelist>
<parameterdescription>
<para>Second value (odd column). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Packed byte. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/quant/int4_ptq.c" line="40" column="23" bodyfile="engine/src/quant/int4_ptq.c" bodystart="40" bodyend="44"/>
        <referencedby refid="group__ie__int4__quant_1gabbd1e0545969cb21f4bce5e48e75e276" compoundref="int4__ptq_8c" startline="167" endline="204">ie_int4_quantize_per_row</referencedby>
        <referencedby refid="group__ie__int4__quant_1ga66ddd8b08ec6b704f6744718bfc7f5aa" compoundref="int4__ptq_8c" startline="99" endline="134">ie_int4_quantize_per_tensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void unpack_q4_pair</definition>
        <argsstring>(uint8_t byte, int *out_q0, int *out_q1)</argsstring>
        <name>unpack_q4_pair</name>
        <param>
          <type>uint8_t</type>
          <declname>byte</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_q0</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_q1</declname>
        </param>
        <briefdescription>
<para>Unpack two signed 4-bit integers from a single byte. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>Packed byte. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_q0</parametername>
</parameternamelist>
<parameterdescription>
<para>Output pointer for low-nibble decoded value in [-8, +7]. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_q1</parametername>
</parameternamelist>
<parameterdescription>
<para>Output pointer for high-nibble decoded value in [-8, +7]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/quant/int4_ptq.c" line="53" column="20" bodyfile="engine/src/quant/int4_ptq.c" bodystart="53" bodyend="58"/>
        <referencedby refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" compoundref="int4__ptq_8c" startline="206" endline="238">ie_int4_dequantize_per_row</referencedby>
        <referencedby refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" compoundref="int4__ptq_8c" startline="136" endline="165">ie_int4_dequantize_per_tensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="int4__ptq_8c_1adac55944e6da576f6745a6ad26c4cb79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int bad_float3</definition>
        <argsstring>(double a, double b, double c)</argsstring>
        <name>bad_float3</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Return true if any of a, b, c is NaN or infinite. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/quant/int4_ptq.c" line="63" column="19" bodyfile="engine/src/quant/int4_ptq.c" bodystart="63" bodyend="65"/>
        <referencedby refid="group__ie__int4__quant_1ga5eab5a797587f75e75af981b851f3d4d" compoundref="int4__ptq_8c" startline="240" endline="271">ie_int4_error_metrics</referencedby>
      </memberdef>
      <member refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kind="function"><name>ie_int4_rowbytes</name></member>
      <member refid="group__ie__int4__quant_1ga469c0b3e9333828daa3115c7ce9f1f2d" kind="function"><name>ie_int4_absmax</name></member>
      <member refid="group__ie__int4__quant_1ga2f715c1bb3a9dbfade15d6e7d7ca3417" kind="function"><name>ie_int4_absmax_per_row</name></member>
      <member refid="group__ie__int4__quant_1ga66ddd8b08ec6b704f6744718bfc7f5aa" kind="function"><name>ie_int4_quantize_per_tensor</name></member>
      <member refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" kind="function"><name>ie_int4_dequantize_per_tensor</name></member>
      <member refid="group__ie__int4__quant_1gabbd1e0545969cb21f4bce5e48e75e276" kind="function"><name>ie_int4_quantize_per_row</name></member>
      <member refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" kind="function"><name>ie_int4_dequantize_per_row</name></member>
      <member refid="group__ie__int4__quant_1ga5eab5a797587f75e75af981b851f3d4d" kind="function"><name>ie_int4_error_metrics</name></member>
    </sectiondef>
    <briefdescription>
<para>Implementation of 4-bit (INT4) weight-only quantization utilities. </para>
    </briefdescription>
    <detaileddescription>
<para>See <ref refid="group__ie__int4__quant" kindref="compound">Ie_int4_quant</ref> for API details and packing rules. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__quant__int4_8h" kindref="compound">ie_quant_int4.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;float.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------<sp/>helpers<sp/>--------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>round<sp/>to<sp/>nearest<sp/>even<sp/>is<sp/>fine;<sp/>typical<sp/>compilers<sp/>use<sp/>roundf.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>roundf(x);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;<sp/>7.0f)<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>-7.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-7;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)r;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint8_t<sp/><ref refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" kindref="member">pack_q4_pair</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q1)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n0<sp/>=<sp/>(uint8_t)(q0<sp/>+<sp/>8);<sp/></highlight><highlight class="comment">/*<sp/>1..15<sp/>(0<sp/>reserved<sp/>for<sp/>-8,<sp/>not<sp/>used)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>uint8_t<sp/>n1<sp/>=<sp/>(uint8_t)(q1<sp/>+<sp/>8);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(uint8_t)((n1<sp/>&lt;&lt;<sp/>4)<sp/>|<sp/>(n0<sp/>&amp;<sp/>0x0F));</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" kindref="member">unpack_q4_pair</ref>(uint8_t<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_q0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_q1)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0<sp/>=<sp/>(int)(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1<sp/>=<sp/>(int)((</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>&gt;&gt;<sp/>4)<sp/>&amp;<sp/>0x0F);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>*out_q0<sp/>=<sp/>n0<sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>*out_q1<sp/>=<sp/>n1<sp/>-<sp/>8;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="int4__ptq_8c_1adac55944e6da576f6745a6ad26c4cb79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="int4__ptq_8c_1adac55944e6da576f6745a6ad26c4cb79" kindref="member">bad_float3</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!isfinite(a)<sp/>||<sp/>!isfinite(b)<sp/>||<sp/>!isfinite(c));</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------<sp/>public<sp/>---------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cols<sp/>+<sp/>1u)<sp/>/<sp/>2u;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="group__ie__int4__quant_1ga469c0b3e9333828daa3115c7ce9f1f2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ga469c0b3e9333828daa3115c7ce9f1f2d" kindref="member">ie_int4_absmax</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_absmax)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src<sp/>||<sp/>!out_absmax<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>rows<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>fabsf(src[i]);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>m)<sp/>m<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>*out_absmax<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="group__ie__int4__quant_1ga2f715c1bb3a9dbfade15d6e7d7ca3417" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ga2f715c1bb3a9dbfade15d6e7d7ca3417" kindref="member">ie_int4_absmax_per_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_absmax_rows)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src<sp/>||<sp/>!out_absmax_rows<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*row<sp/>=<sp/>src<sp/>+<sp/>r<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>cols;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>fabsf(row[c]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>m)<sp/>m<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>out_absmax_rows[r]<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="group__ie__int4__quant_1ga66ddd8b08ec6b704f6744718bfc7f5aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ga66ddd8b08ec6b704f6744718bfc7f5aa" kindref="member">ie_int4_quantize_per_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*dst_packed,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_scale)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src<sp/>||<sp/>!dst_packed<sp/>||<sp/>!out_scale<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>absmax<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st<sp/>=<sp/><ref refid="group__ie__int4__quant_1ga469c0b3e9333828daa3115c7ce9f1f2d" kindref="member">ie_int4_absmax</ref>(src,<sp/>rows,<sp/>cols,<sp/>&amp;absmax);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(absmax<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>(absmax<sp/>/<sp/>7.0f)<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isfinite(scale)<sp/>||<sp/>scale<sp/>&lt;=<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a23b78278a845de353e507b64a6901e52" kindref="member">IE_INT4_STATUS_NUMERIC</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>*out_scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rb<sp/>=<sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(cols);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*row<sp/>=<sp/>src<sp/>+<sp/>r<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*out<sp/>=<sp/>dst_packed<sp/>+<sp/>r<sp/>*<sp/>rb;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>c<sp/>+<sp/>1<sp/>&lt;<sp/>cols;<sp/>c<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c]<sp/><sp/><sp/><sp/><sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q1<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c<sp/>+<sp/>1]<sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[c<sp/>/<sp/>2]<sp/>=<sp/><ref refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" kindref="member">pack_q4_pair</ref>(q0,<sp/>q1);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Odd<sp/>tail:<sp/>encode<sp/>last<sp/>even<sp/>column<sp/>and<sp/>set<sp/>high<sp/>nibble<sp/>to<sp/>zero<sp/>code.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c]<sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[c<sp/>/<sp/>2]<sp/>=<sp/><ref refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" kindref="member">pack_q4_pair</ref>(q0,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>high<sp/>nibble<sp/>=<sp/>0<sp/>-&gt;<sp/>encoded<sp/>as<sp/>8<sp/>after<sp/>bias<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" kindref="member">ie_int4_dequantize_per_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src_packed,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src_packed<sp/>||<sp/>!dst<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(scale<sp/>&gt;<sp/>0.0f)<sp/>||<sp/>!isfinite(scale))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a23b78278a845de353e507b64a6901e52" kindref="member">IE_INT4_STATUS_NUMERIC</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rb<sp/>=<sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(cols);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in<sp/>=<sp/>src_packed<sp/>+<sp/>r<sp/>*<sp/>rb;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*row<sp/>=<sp/>dst<sp/>+<sp/>r<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>c<sp/>+<sp/>1<sp/>&lt;<sp/>cols;<sp/>c<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0,<sp/>q1;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" kindref="member">unpack_q4_pair</ref>(in[c<sp/>/<sp/>2],<sp/>&amp;q0,<sp/>&amp;q1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c]<sp/><sp/><sp/><sp/><sp/>=<sp/>(float)q0<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c<sp/>+<sp/>1]<sp/>=<sp/>(float)q1<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0,<sp/>q1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" kindref="member">unpack_q4_pair</ref>(in[c<sp/>/<sp/>2],<sp/>&amp;q0,<sp/>&amp;q1);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c]<sp/>=<sp/>(float)q0<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>q1<sp/>for<sp/>odd<sp/>tail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="group__ie__int4__quant_1gabbd1e0545969cb21f4bce5e48e75e276" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1gabbd1e0545969cb21f4bce5e48e75e276" kindref="member">ie_int4_quantize_per_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*dst_packed,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_scales)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src<sp/>||<sp/>!dst_packed<sp/>||<sp/>!out_scales<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rb<sp/>=<sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(cols);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*row<sp/>=<sp/>src<sp/>+<sp/>r<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>absmax<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>row<sp/>absmax<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>cols;<sp/>++c)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>fabsf(row[c]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>&gt;<sp/>absmax)<sp/>absmax<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>(absmax<sp/>&gt;<sp/>0.0f)<sp/>?<sp/>(absmax<sp/>/<sp/>7.0f)<sp/>:<sp/>1.0f;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isfinite(scale)<sp/>||<sp/>scale<sp/>&lt;=<sp/>0.0f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a23b78278a845de353e507b64a6901e52" kindref="member">IE_INT4_STATUS_NUMERIC</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>out_scales[r]<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*out<sp/>=<sp/>dst_packed<sp/>+<sp/>r<sp/>*<sp/>rb;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>c<sp/>+<sp/>1<sp/>&lt;<sp/>cols;<sp/>c<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c]<sp/><sp/><sp/><sp/><sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q1<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c<sp/>+<sp/>1]<sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[c<sp/>/<sp/>2]<sp/>=<sp/><ref refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" kindref="member">pack_q4_pair</ref>(q0,<sp/>q1);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0<sp/>=<sp/><ref refid="int4__ptq_8c_1a6ed1aea3c6d100696c138e8efae1f1bf" kindref="member">clamp_q4</ref>(row[c]<sp/>/<sp/>scale);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[c<sp/>/<sp/>2]<sp/>=<sp/><ref refid="int4__ptq_8c_1a8fbbcdf00f584b058e8c71b96af09613" kindref="member">pack_q4_pair</ref>(q0,<sp/>0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" kindref="member">ie_int4_dequantize_per_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*src_packed,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*scales,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src_packed<sp/>||<sp/>!dst<sp/>||<sp/>!scales<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rb<sp/>=<sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(cols);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>scales[r];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(scale<sp/>&gt;<sp/>0.0f)<sp/>||<sp/>!isfinite(scale))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a23b78278a845de353e507b64a6901e52" kindref="member">IE_INT4_STATUS_NUMERIC</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*in<sp/>=<sp/>src_packed<sp/>+<sp/>r<sp/>*<sp/>rb;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*row<sp/>=<sp/>dst<sp/>+<sp/>r<sp/>*<sp/>cols;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>c<sp/>+<sp/>1<sp/>&lt;<sp/>cols;<sp/>c<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0,<sp/>q1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" kindref="member">unpack_q4_pair</ref>(in[c<sp/>/<sp/>2],<sp/>&amp;q0,<sp/>&amp;q1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c]<sp/><sp/><sp/><sp/><sp/>=<sp/>(float)q0<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c<sp/>+<sp/>1]<sp/>=<sp/>(float)q1<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>cols)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>q0,<sp/>q1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="int4__ptq_8c_1a17c5de65148c5a3bac0c3d8e5f227c9c" kindref="member">unpack_q4_pair</ref>(in[c<sp/>/<sp/>2],<sp/>&amp;q0,<sp/>&amp;q1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>row[c]<sp/>=<sp/>(float)q0<sp/>*<sp/>scale;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="group__ie__int4__quant_1ga5eab5a797587f75e75af981b851f3d4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ga5eab5a797587f75e75af981b851f3d4d" kindref="member">ie_int4_error_metrics</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ref,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*test,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out_mse,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*out_cosine)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ref<sp/>||<sp/>!test<sp/>||<sp/>!out_mse<sp/>||<sp/>!out_cosine<sp/>||<sp/>n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a3d09ea134f6295e3ccfb296d932fefd0" kindref="member">IE_INT4_STATUS_BADARG</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>se<sp/>=<sp/>0.0L;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>0.0L;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nr<sp/>=<sp/>0.0L;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nt<sp/>=<sp/>0.0L;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>ref[i];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>test[i];</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>r<sp/>-<sp/>t;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>se<sp/><sp/>+=<sp/>d<sp/>*<sp/>d;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>dot<sp/>+=<sp/>r<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>nr<sp/><sp/>+=<sp/>r<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>nt<sp/><sp/>+=<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__int8__ptq_8c_1a38b4b69f6c9e30a70285f7bc1e98ea8e" kindref="member">mse</ref><sp/>=<sp/>(double)(se<sp/>/<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)n);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>sqrt((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)nr)<sp/>*<sp/>sqrt((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)nt);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cosine<sp/>=<sp/>(denom<sp/>&gt;<sp/>0.0)<sp/>?<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(dot<sp/>/<sp/>denom)<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="int4__ptq_8c_1adac55944e6da576f6745a6ad26c4cb79" kindref="member">bad_float3</ref>(<ref refid="test__int8__ptq_8c_1a38b4b69f6c9e30a70285f7bc1e98ea8e" kindref="member">mse</ref>,<sp/>cosine,<sp/>denom))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a23b78278a845de353e507b64a6901e52" kindref="member">IE_INT4_STATUS_NUMERIC</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>*out_mse<sp/>=<sp/><ref refid="test__int8__ptq_8c_1a38b4b69f6c9e30a70285f7bc1e98ea8e" kindref="member">mse</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>*out_cosine<sp/>=<sp/>cosine;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="engine/src/quant/int4_ptq.c"/>
  </compounddef>
</doxygen>
