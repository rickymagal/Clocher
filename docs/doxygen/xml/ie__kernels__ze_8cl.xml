<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__kernels__ze_8cl" kind="file" language="C++">
    <compoundname>ie_kernels_ze.cl</compoundname>
    <sectiondef kind="define">
      <memberdef kind="define" id="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" prot="public" static="no">
        <name>IE_WG_TILE</name>
        <initializer>256  /* Required local size X for reductions */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="19" column="9" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="19" bodyend="-1"/>
        <referencedby refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" compoundref="ie__kernels__ze_8cl" startline="124" endline="157">gemv_bias_act_f32</referencedby>
        <referencedby refid="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" compoundref="ie__kernels__ze_8cl" startline="67" endline="100">gemv_rowwise_f32</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__kernels__ze_8cl_1ac201a9ea4df331010c34a2c99cb2be56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float ie_apply_activation</definition>
        <argsstring>(float x, int act)</argsstring>
        <name>ie_apply_activation</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>act</declname>
        </param>
        <briefdescription>
<para>Apply an activation function that mirrors the host enum layout. </para>
        </briefdescription>
        <detaileddescription>
<para>The mapping is: 0 -&gt; NONE : f(x) = x 1 -&gt; RELU : f(x) = max(x, 0) 2 -&gt; TANH : f(x) = tanh(x)</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input value (float). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>act</parametername>
</parameternamelist>
<parameterdescription>
<para>Activation kind (0 none, 1 relu, 2 tanh). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Activated value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="35" column="21" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="35" bodyend="42"/>
        <referencedby refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" compoundref="ie__kernels__ze_8cl" startline="124" endline="157">gemv_bias_act_f32</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__kernel void</type>
        <definition>__kernel void gemv_rowwise_f32</definition>
        <argsstring>(__global const float *restrict W, __global const float *restrict x, __global float *restrict y, int rows, int cols, int ldW, float alpha, float beta)</argsstring>
        <name>gemv_rowwise_f32</name>
        <param>
          <type>__global const float *restrict</type>
          <declname>W</declname>
        </param>
        <param>
          <type>__global const float *restrict</type>
          <declname>x</declname>
        </param>
        <param>
          <type>__global float *restrict</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Row-wise GEMV (FP32): y = alpha * W * x + beta * y. </para>
        </briefdescription>
        <detaileddescription>
<para>Each work-item computes a partial dot for its row and participates in a reduction within the work-group. The local X dimension MUST be 256 so that reduction uses a fixed-size local array without overflow.</para>
<para>Preconditions:<itemizedlist>
<listitem><para>Local work-group size X is exactly 256.</para>
</listitem><listitem><para>Global X dimension covers <computeroutput>rows</computeroutput> (excess work-items exit early).</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (rows x ldW), row-major </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (length cols) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>__global float* (length rows) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W (and length of y) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in W (and length of x) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension for W (ldW &gt;= cols) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar multiplier for W*x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar multiplier for existing y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="67" column="6" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="67" bodyend="100"/>
        <references refid="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" compoundref="ie__kernels__ze_8cl" startline="67" endline="100">gemv_rowwise_f32</references>
        <references refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" compoundref="ie__kernels__ze_8cl" startline="19">IE_WG_TILE</references>
        <referencedby refid="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" compoundref="ie__kernels__ze_8cl" startline="67" endline="100">gemv_rowwise_f32</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__kernel void</type>
        <definition>__kernel void gemv_bias_act_f32</definition>
        <argsstring>(__global const float *restrict W, __global const float *restrict x, __global const float *restrict bias, __global float *restrict y, int rows, int cols, int ldW, float alpha, float beta, int act)</argsstring>
        <name>gemv_bias_act_f32</name>
        <param>
          <type>__global const float *restrict</type>
          <declname>W</declname>
        </param>
        <param>
          <type>__global const float *restrict</type>
          <declname>x</declname>
        </param>
        <param>
          <type>__global const float *restrict</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>__global float *restrict</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>act</declname>
        </param>
        <briefdescription>
<para>Fused GEMV + bias + activation: y = act(alpha * W*x + bias + beta*y) </para>
        </briefdescription>
        <detaileddescription>
<para>Identical reduction scheme and local-size requirement as gemv_rowwise_f32.</para>
<para>Preconditions:<itemizedlist>
<listitem><para>Local work-group size X is exactly 256.</para>
</listitem><listitem><para>If <computeroutput>bias</computeroutput> is NULL, bias is treated as 0.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (rows x ldW), row-major </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (cols) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (rows) or NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>__global float* (rows) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W / y </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in W / x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension for W (ldW &gt;= cols) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar multiplier for W*x </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>Scalar multiplier for existing y </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>act</parametername>
</parameternamelist>
<parameterdescription>
<para>Activation kind (0 none, 1 relu, 2 tanh) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="124" column="6" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="124" bodyend="157"/>
        <references refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" compoundref="ie__kernels__ze_8cl" startline="124" endline="157">gemv_bias_act_f32</references>
        <references refid="ie__kernels__ze_8cl_1ac201a9ea4df331010c34a2c99cb2be56" compoundref="ie__kernels__ze_8cl" startline="35" endline="42">ie_apply_activation</references>
        <references refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" compoundref="ie__kernels__ze_8cl" startline="19">IE_WG_TILE</references>
        <referencedby refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" compoundref="ie__kernels__ze_8cl" startline="124" endline="157">gemv_bias_act_f32</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__kernels__ze_8cl_1a2261b0a1b8943ff014f3796d4d10d454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__kernel void</type>
        <definition>__kernel void vec_tanh_f32</definition>
        <argsstring>(__global float *restrict y, __global const float *restrict x, int n)</argsstring>
        <name>vec_tanh_f32</name>
        <param>
          <type>__global float *restrict</type>
          <declname>y</declname>
        </param>
        <param>
          <type>__global const float *restrict</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Elementwise hyperbolic tangent: y[i] = tanh(x[i]). </para>
        </briefdescription>
        <detaileddescription>
<para>Work-items iterate in a grid-stride loop, covering the full range.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>__global float* (output, length n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (input, length n) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>int (number of elements) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="170" column="15" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="ie__kernels__ze_8cl_1a9eabeb874d4fef74c860c96689a6fc44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__kernel void</type>
        <definition>__kernel void pack_w_blockedk_f32</definition>
        <argsstring>(__global float *restrict Wp, __global const float *restrict W, int rows, int cols, int ldW, int block_k)</argsstring>
        <name>pack_w_blockedk_f32</name>
        <param>
          <type>__global float *restrict</type>
          <declname>Wp</declname>
        </param>
        <param>
          <type>__global const float *restrict</type>
          <declname>W</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldW</declname>
        </param>
        <param>
          <type>int</type>
          <declname>block_k</declname>
        </param>
        <briefdescription>
<para>Pack row-major W (rows x ldW) into a blocked-K layout Wp. </para>
        </briefdescription>
        <detaileddescription>
<para>Destination layout (for block_k): int kb = k / block_k; // tile index along K int ko = k % block_k; // in-tile offset size_t dst = ((size_t)kb * rows + r) * (size_t)block_k + (size_t)ko; Wp[dst] = W[(size_t)r * ldW + (size_t)k];</para>
<para>Global NDRange: Gx over K dimension; Gy over rows. Each work-item grid-strides in both r and k to cover the matrix.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Wp</parametername>
</parameternamelist>
<parameterdescription>
<para>__global float* (rows*cols), destination (blocked-K) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>__global const float* (rows x ldW), source (row-major) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>int </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>int </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldW</parametername>
</parameternamelist>
<parameterdescription>
<para>int (&gt;= cols) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_k</parametername>
</parameternamelist>
<parameterdescription>
<para>int (tile size along K) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/kernels/ze/ie_kernels_ze.cl" line="202" column="15" bodyfile="engine/src/kernels/ze/ie_kernels_ze.cl" bodystart="202" bodyend="219"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>OpenCL C kernels for the Level Zero backend (compiled to SPIR-V). </para>
    </briefdescription>
    <detaileddescription>
<para>Build to SPIR-V:</para>
<para>Using Intel ocloc (recommended): ocloc compile \ -file <ref refid="ie__kernels__ze_8cl" kindref="compound">ie_kernels_ze.cl</ref> -spirv \ -out_dir build/engine/src/kernels/ze -output ie_kernels_ze \ -options &quot;-cl-std=CL2.0 -cl-kernel-arg-info&quot;</para>
<para>Using Clang + llvm-spirv: clang -target spir64 -x cl -cl-std=CL2.0 -O2 -finclude-default-header \ -emit-llvm -c <ref refid="ie__kernels__ze_8cl" kindref="compound">ie_kernels_ze.cl</ref> -o ie_kernels_ze.bc llvm-spirv ie_kernels_ze.bc -o ie_kernels_ze.spv </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_WG_TILE<sp/>256<sp/><sp/></highlight><highlight class="comment">/*<sp/>Required<sp/>local<sp/>size<sp/>X<sp/>for<sp/>reductions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>----------------------------<sp/>helpers<sp/>-----------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="ie__kernels__ze_8cl_1ac201a9ea4df331010c34a2c99cb2be56" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="ie__kernels__ze_8cl_1ac201a9ea4df331010c34a2c99cb2be56" kindref="member">ie_apply_activation</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act<sp/>==<sp/>1)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>RELU<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>&gt;<sp/>0.0f<sp/>?<sp/>x<sp/>:<sp/>0.0f;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(act<sp/>==<sp/>2)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TANH<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tanh(x);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NONE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>GEMV<sp/>------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">__kernel<sp/>__attribute__((reqd_work_group_size(<ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="67" refid="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" refkind="member"><highlight class="normal">void<sp/><ref refid="ie__kernels__ze_8cl_1a1aeaae590abe44f0392b55f435c39cf7" kindref="member">gemv_rowwise_f32</ref>(__global<sp/>const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>W,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/>const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>x,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>y,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldW,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>beta)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/><sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lr<sp/>=<sp/>get_local_id(0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;=<sp/>rows)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strided<sp/>partial<sp/>dot-product<sp/>over<sp/>this<sp/>thread&apos;s<sp/>lane<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lr;<sp/>k<sp/>&lt;<sp/>cols;<sp/>k<sp/>+=<sp/><ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(size_t)r<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)ldW<sp/>+<sp/>(size_t)k;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>W[idx]<sp/>*<sp/>x[k];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Intra-group<sp/>reduction<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>__local<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>buf[<ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>buf[lr]<sp/>=<sp/>acc;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>barrier(CLK_LOCAL_MEM_FENCE);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref><sp/>&gt;&gt;<sp/>1;<sp/>s<sp/>&gt;<sp/>0;<sp/>s<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lr<sp/>&lt;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[lr]<sp/>+=<sp/>buf[lr<sp/>+<sp/>s];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier(CLK_LOCAL_MEM_FENCE);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>alpha<sp/>*<sp/>buf[0];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beta<sp/>!=<sp/>0.0f)<sp/>out<sp/>+=<sp/>beta<sp/>*<sp/>y[r];</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>y[r]<sp/>=<sp/>out;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">__kernel<sp/>__attribute__((reqd_work_group_size(<ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>,<sp/>1,<sp/>1)))</highlight></codeline>
<codeline lineno="124" refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" refkind="member"><highlight class="normal">void<sp/><ref refid="ie__kernels__ze_8cl_1a32d59e346c85a4b1dccb8448d0748d9e" kindref="member">gemv_bias_act_f32</ref>(__global<sp/>const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>W,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/>const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>x,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/>const<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>bias,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>y,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldW,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>act)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/><sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lr<sp/>=<sp/>get_local_id(0);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;=<sp/>rows)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>lr;<sp/>k<sp/>&lt;<sp/>cols;<sp/>k<sp/>+=<sp/><ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(size_t)r<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)ldW<sp/>+<sp/>(size_t)k;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>W[idx]<sp/>*<sp/>x[k];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>__local<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>buf[<ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref>];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>buf[lr]<sp/>=<sp/>acc;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>barrier(CLK_LOCAL_MEM_FENCE);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s<sp/>=<sp/><ref refid="ie__kernels__ze_8cl_1a23d302f7ef21814172c805270ac90730" kindref="member">IE_WG_TILE</ref><sp/>&gt;&gt;<sp/>1;<sp/>s<sp/>&gt;<sp/>0;<sp/>s<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lr<sp/>&lt;<sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf[lr]<sp/>+=<sp/>buf[lr<sp/>+<sp/>s];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>barrier(CLK_LOCAL_MEM_FENCE);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lr<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(bias<sp/>==<sp/>NULL)<sp/>?<sp/>0.0f<sp/>:<sp/>bias[r];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>out<sp/>=<sp/>alpha<sp/>*<sp/>buf[0]<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beta<sp/>!=<sp/>0.0f)<sp/>out<sp/>+=<sp/>beta<sp/>*<sp/>y[r];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>y[r]<sp/>=<sp/><ref refid="ie__kernels__ze_8cl_1ac201a9ea4df331010c34a2c99cb2be56" kindref="member">ie_apply_activation</ref>(out,<sp/>act);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------<sp/>Vector<sp/>tanh<sp/>---------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="ie__kernels__ze_8cl_1a2261b0a1b8943ff014f3796d4d10d454" refkind="member"><highlight class="normal">__kernel<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__kernels__ze_8cl_1a2261b0a1b8943ff014f3796d4d10d454" kindref="member">vec_tanh_f32</ref>(__global<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>y,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>x,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gid<sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gsz<sp/>=<sp/>get_global_size(0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>gid;<sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>+=<sp/>gsz)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>y[i]<sp/>=<sp/>tanh(x[i]);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>Packing<sp/>----------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="ie__kernels__ze_8cl_1a9eabeb874d4fef74c860c96689a6fc44" refkind="member"><highlight class="normal">__kernel<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__kernels__ze_8cl_1a9eabeb874d4fef74c860c96689a6fc44" kindref="member">pack_w_blockedk_f32</ref>(__global<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>Wp,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__global<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>restrict<sp/>W,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldW,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>block_k)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k0<sp/>=<sp/>get_global_id(0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r0<sp/>=<sp/>get_global_id(1);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gx<sp/>=<sp/>get_global_size(0);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Gy<sp/>=<sp/>get_global_size(1);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>r0;<sp/>r<sp/>&lt;<sp/>rows;<sp/>r<sp/>+=<sp/>Gy)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>k0;<sp/>k<sp/>&lt;<sp/>cols;<sp/>k<sp/>+=<sp/>Gx)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kb<sp/>=<sp/>k<sp/>/<sp/>block_k;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ko<sp/>=<sp/>k<sp/>%<sp/>block_k;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>((size_t)kb<sp/>*<sp/>(size_t)rows<sp/>+<sp/>(size_t)r)<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)block_k<sp/>+<sp/>(size_t)ko;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Wp[dst]<sp/>=<sp/>W[(size_t)r<sp/>*<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)ldW<sp/>+<sp/>(size_t)k];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="engine/src/kernels/ze/ie_kernels_ze.cl"/>
  </compounddef>
</doxygen>
