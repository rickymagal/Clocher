<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="test__ptq__calib__pipeline_8py" kind="file" language="Python">
    <compoundname>test_ptq_calib_pipeline.py</compoundname>
    <innerclass refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests" prot="public">test_ptq_calib_pipeline::PTQCalibPipelineTests</innerclass>
    <innernamespace refid="namespacetest__ptq__calib__pipeline">test_ptq_calib_pipeline</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest__ptq__calib__pipeline" refkind="compound"><highlight class="comment">#<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">Unit<sp/>tests<sp/>for<sp/>the<sp/>INT8<sp/>PTQ<sp/>calibration<sp/>pipeline<sp/>(benchmarks/ptq_calib.py).</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">Covers:</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">-<sp/>End-to-end<sp/>run<sp/>on<sp/>a<sp/>small<sp/>synthetic<sp/>matrix</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">-<sp/>Output<sp/>artifacts<sp/>existence<sp/>(int8/scales/report)</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">-<sp/>Report<sp/>metrics<sp/>sanity<sp/>(cosine<sp/>&gt;=<sp/>threshold;<sp/>small<sp/>MSE)</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">-<sp/>Per-tensor<sp/>and<sp/>per-row<sp/>modes</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>struct</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tempfile</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="namespacetest__ptq__calib__pipeline_1a3db0bd8da65bd5e16dcd4c823ffd6092" refkind="member"><highlight class="normal">THIS<sp/>=<sp/>Path(__file__).resolve().parent.parent.parent</highlight></codeline>
<codeline lineno="20" refid="namespacetest__ptq__calib__pipeline_1a98e7dc6c13a5a2a46ee2171be741a367" refkind="member"><highlight class="normal">PTQ<sp/>=<sp/>THIS<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;benchmarks&quot;</highlight><highlight class="normal"><sp/>/<sp/></highlight><highlight class="stringliteral">&quot;ptq_calib.py&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespacetest__ptq__calib__pipeline_1a9d69fc9e760866fe141bc720b6e0c261" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest__ptq__calib__pipeline_1a9d69fc9e760866fe141bc720b6e0c261" kindref="member">write_f32_bin</ref>(path:<sp/>Path,<sp/>rows:<sp/>int,<sp/>cols:<sp/>int):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Write<sp/>a<sp/>simple<sp/>2D<sp/>ramp<sp/>into<sp/>a<sp/>float32<sp/>.bin<sp/>file<sp/>(row-major).&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>rows<sp/>*<sp/>cols</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(n):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>spread<sp/>across<sp/>a<sp/>moderate<sp/>range<sp/>to<sp/>avoid<sp/>all-zero<sp/>or<sp/>saturations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>(i<sp/>-<sp/>n<sp/>/<sp/>2)<sp/>/<sp/>123.0</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(struct.pack(</highlight><highlight class="stringliteral">&quot;&lt;f&quot;</highlight><highlight class="normal">,<sp/>float(val)))</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespacetest__ptq__calib__pipeline_1a09ea2777fa731499969703f7f06e8af9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacetest__ptq__calib__pipeline_1a09ea2777fa731499969703f7f06e8af9" kindref="member">read_json</ref>(path:<sp/>Path):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(path,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&quot;utf-8&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>json.load(f)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests" kindref="compound">PTQCalibPipelineTests</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="39" refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" kindref="member">run_ptq</ref>(self,<sp/>rows:<sp/>int,<sp/>cols:<sp/>int,<sp/>mode:<sp/>str,<sp/>out_prefix:<sp/>Path):</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>out_prefix.with_suffix(</highlight><highlight class="stringliteral">&quot;.f32.bin&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w.parent.mkdir(parents=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacetest__ptq__calib__pipeline_1a9d69fc9e760866fe141bc720b6e0c261" kindref="member">write_f32_bin</ref>(w,<sp/>rows,<sp/>cols)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>subprocess.run(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="stringliteral">&quot;python3&quot;</highlight><highlight class="normal">,<sp/>str(PTQ),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--weights&quot;</highlight><highlight class="normal">,<sp/>str(w),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--rows&quot;</highlight><highlight class="normal">,<sp/>str(rows),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--cols&quot;</highlight><highlight class="normal">,<sp/>str(cols),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--mode&quot;</highlight><highlight class="normal">,<sp/>mode,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--out-prefix&quot;</highlight><highlight class="normal">,<sp/>str(out_prefix),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--accuracy-threshold&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0.99&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>capture_output=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(cp.returncode,<sp/>0,<sp/>msg=f</highlight><highlight class="stringliteral">&quot;stderr:\n{cp.stderr}\nstdout:\n{cp.stdout}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int8_bin<sp/>=<sp/>Path(str(out_prefix)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.int8.bin&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scales_bin<sp/>=<sp/>Path(str(out_prefix)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.scales.bin&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>report_json<sp/>=<sp/>Path(str(out_prefix)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.report.json&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>p<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(int8_bin,<sp/>scales_bin,<sp/>report_json):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(p.exists(),<sp/>msg=f</highlight><highlight class="stringliteral">&quot;missing<sp/>artifact:<sp/>{p}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rpt<sp/>=<sp/><ref refid="namespacetest__ptq__calib__pipeline_1a09ea2777fa731499969703f7f06e8af9" kindref="member">read_json</ref>(report_json)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(</highlight><highlight class="stringliteral">&quot;cosine_sim&quot;</highlight><highlight class="normal">,<sp/>rpt)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(</highlight><highlight class="stringliteral">&quot;mse&quot;</highlight><highlight class="normal">,<sp/>rpt)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertGreaterEqual(rpt[</highlight><highlight class="stringliteral">&quot;cosine_sim&quot;</highlight><highlight class="normal">],<sp/>0.99)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertLess(rpt[</highlight><highlight class="stringliteral">&quot;mse&quot;</highlight><highlight class="normal">],<sp/>1e-2)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a644b21a4c62e3c45d1aa6ed0fa93c309" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a644b21a4c62e3c45d1aa6ed0fa93c309" kindref="member">test_per_row_pipeline</ref>(self):</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>tempfile.TemporaryDirectory()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>td:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outp<sp/>=<sp/>Path(td)<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;perrow&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" kindref="member">run_ptq</ref>(rows=16,<sp/>cols=32,<sp/>mode=</highlight><highlight class="stringliteral">&quot;per_row&quot;</highlight><highlight class="normal">,<sp/>out_prefix=outp)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1abc7a7c8c78540a33948306d47da7ac1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1abc7a7c8c78540a33948306d47da7ac1a" kindref="member">test_per_tensor_pipeline</ref>(self):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>tempfile.TemporaryDirectory()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>td:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outp<sp/>=<sp/>Path(td)<sp/>/<sp/></highlight><highlight class="stringliteral">&quot;pertensor&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classtest__ptq__calib__pipeline_1_1PTQCalibPipelineTests_1a1825079e8ddd10734388091f18e5e2d0" kindref="member">run_ptq</ref>(rows=16,<sp/>cols=32,<sp/>mode=</highlight><highlight class="stringliteral">&quot;per_tensor&quot;</highlight><highlight class="normal">,<sp/>out_prefix=outp)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81" refid="namespacetest__ptq__calib__pipeline_1a2adff5a67303aabe3ec5523cb2d0993b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>unittest.main(verbosity=2)</highlight></codeline>
    </programlisting>
    <location file="tests/python/test_ptq_calib_pipeline.py"/>
  </compounddef>
</doxygen>
