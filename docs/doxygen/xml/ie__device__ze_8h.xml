<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__device__ze_8h" kind="file" language="C++">
    <compoundname>ie_device_ze.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="ie__device__ze_8cpp" local="yes">engine/src/devices/ie_device_ze.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>engine/include/ie_device_ze.h</label>
        <link refid="ie__device__ze_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>engine/include/ie_device_ze.h</label>
        <link refid="ie__device__ze_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>engine/src/devices/ie_device_ze.cpp</label>
        <link refid="ie__device__ze_8cpp"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <enumvalue id="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16ad805805b88909ad20846a4031aa704b0" prot="public">
          <name>IE_ZE_OK</name>
          <initializer>=  0</initializer>
          <briefdescription>
<para>Success. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16af8ca61fae722b34b5ec8ee3be91db2de" prot="public">
          <name>IE_ZE_ERR_RUNTIME</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Level Zero runtime error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16a7e7ecac3aa644ecde81174d0ed31f69f" prot="public">
          <name>IE_ZE_UNAVAILABLE</name>
          <initializer>= -2</initializer>
          <briefdescription>
<para>Level Zero not available / not compiled. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16aa71c6d4ff43bfcad31b0cefc2f6a10f4" prot="public">
          <name>IE_ZE_EINVAL</name>
          <initializer>= -3</initializer>
          <briefdescription>
<para>Invalid arguments. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Return codes for Level Zero backend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_ze.h" line="25" column="1" bodyfile="engine/include/ie_device_ze.h" bodystart="25" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__device__ze_8h_1a994c1aef7f0d08a8ba892c79d5fb5a99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_is_available</definition>
        <argsstring>(void)</argsstring>
        <name>ie_ze_is_available</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if Level Zero is available at runtime. </para>
        </briefdescription>
        <detaileddescription>
<para>When compiled without IE_WITH_ZE, this returns IE_ZE_UNAVAILABLE.</para>
<para><simplesect kind="return"><para>IE_ZE_OK if the loader/driver is usable; IE_ZE_UNAVAILABLE otherwise; IE_ZE_ERR_RUNTIME on runtime init failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_ze.h" line="40" column="5" bodyfile="engine/src/devices/ie_device_ze.cpp" bodystart="46" bodyend="48" declfile="engine/include/ie_device_ze.h" declline="40" declcolumn="5"/>
        <references refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16a7e7ecac3aa644ecde81174d0ed31f69f" compoundref="ie__device__ze_8h" startline="28">IE_ZE_UNAVAILABLE</references>
      </memberdef>
      <memberdef kind="function" id="ie__device__ze_8h_1a28c74b35449c7c8008aff141ee5e49df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_ze_gemv_f32</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldw)</argsstring>
        <name>ie_ze_gemv_f32</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldw</declname>
        </param>
        <briefdescription>
<para>Run y = W * x using a Level Zero kernel (FP32). </para>
        </briefdescription>
        <detaileddescription>
<para>This is a placeholder signature that mirrors the CUDA one. The current implementation returns IE_ZE_UNAVAILABLE until the kernel path is implemented.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix W(rows, cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector x(cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector y(rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows of W / length of y. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols of W / length of x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldw</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W in elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IE_ZE_OK on success or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device_ze.h" line="57" column="5" bodyfile="engine/src/devices/ie_device_ze.cpp" bodystart="50" bodyend="59" declfile="engine/include/ie_device_ze.h" declline="57" declcolumn="5"/>
        <references refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16a7e7ecac3aa644ecde81174d0ed31f69f" compoundref="ie__device__ze_8h" startline="28">IE_ZE_UNAVAILABLE</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>oneAPI Level Zero backend entry points (skeleton). </para>
    </briefdescription>
    <detaileddescription>
<para>This header defines a minimal C ABI for a Level Zero backend so the engine can be wired once and the implementation can evolve without touching call sites. The current implementation is a clean “unavailable” skeleton that compiles and links; it returns IE_ZE_UNAVAILABLE until we add a real kernel + runtime plumbing.</para>
<para>Build toggle: define IE_WITH_ZE=1 to compile/link Level Zero files. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_DEVICE_ZE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_DEVICE_ZE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="26" refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16ad805805b88909ad20846a4031aa704b0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16ad805805b88909ad20846a4031aa704b0" kindref="member">IE_ZE_OK</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16af8ca61fae722b34b5ec8ee3be91db2de" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16af8ca61fae722b34b5ec8ee3be91db2de" kindref="member">IE_ZE_ERR_RUNTIME</ref><sp/><sp/><sp/>=<sp/>-1,<sp/><sp/></highlight></codeline>
<codeline lineno="28" refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16a7e7ecac3aa644ecde81174d0ed31f69f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16a7e7ecac3aa644ecde81174d0ed31f69f" kindref="member">IE_ZE_UNAVAILABLE</ref><sp/><sp/><sp/>=<sp/>-2,<sp/><sp/></highlight></codeline>
<codeline lineno="29" refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16aa71c6d4ff43bfcad31b0cefc2f6a10f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device__ze_8h_1ab20bdb161dac0e8713eea0a656c4ac16aa71c6d4ff43bfcad31b0cefc2f6a10f4" kindref="member">IE_ZE_EINVAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-3<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__ze_8h_1a994c1aef7f0d08a8ba892c79d5fb5a99" kindref="member">ie_ze_is_available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__ze_8h_1a28c74b35449c7c8008aff141ee5e49df" kindref="member">ie_ze_gemv_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_DEVICE_ZE_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="engine/include/ie_device_ze.h"/>
  </compounddef>
</doxygen>
