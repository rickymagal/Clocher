<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="test__cli__error__paths_8py" kind="file" language="Python">
    <compoundname>test_cli_error_paths.py</compoundname>
    <innerclass refid="classtest__cli__error__paths_1_1CLIErrorPathsTests" prot="public">test_cli_error_paths::CLIErrorPathsTests</innerclass>
    <innernamespace refid="namespacetest__cli__error__paths">test_cli_error_paths</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacetest__cli__error__paths" refkind="compound"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespacetest__cli__error__paths_1a9e965922d2fbb4003a0524232d17f8c6" refkind="member"><highlight class="normal">BIN<sp/>=<sp/>str(Path(</highlight><highlight class="stringliteral">&quot;build/inference-engine&quot;</highlight><highlight class="normal">).resolve())</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classtest__cli__error__paths_1_1CLIErrorPathsTests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtest__cli__error__paths_1_1CLIErrorPathsTests" kindref="compound">CLIErrorPathsTests</ref>(unittest.TestCase):</highlight></codeline>
<codeline lineno="8" refid="classtest__cli__error__paths_1_1CLIErrorPathsTests_1a888bfbdccd9ff6501ab591a6cb48e19d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__cli__error__paths_1_1CLIErrorPathsTests_1a888bfbdccd9ff6501ab591a6cb48e19d" kindref="member">test_zero_tokens_graceful</ref>(self):</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>subprocess.run([BIN,<sp/></highlight><highlight class="stringliteral">&quot;--prompt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;--max-new&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">],<sp/>text=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>capture_output=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(cp.returncode,<sp/>0)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(</highlight><highlight class="stringliteral">&apos;&quot;tokens_generated&quot;:<sp/>0&apos;</highlight><highlight class="normal">,<sp/>cp.stdout)</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classtest__cli__error__paths_1_1CLIErrorPathsTests_1a21dde2210189576ca7a2939767bf9379" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classtest__cli__error__paths_1_1CLIErrorPathsTests_1a21dde2210189576ca7a2939767bf9379" kindref="member">test_invalid_flag_is_rejected</ref>(self):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>subprocess.run([BIN,<sp/></highlight><highlight class="stringliteral">&quot;--this-flag-does-not-exist&quot;</highlight><highlight class="normal">],<sp/>text=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>capture_output=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertNotEqual(cp.returncode,<sp/>0)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertIn(</highlight><highlight class="stringliteral">&quot;usage&quot;</highlight><highlight class="normal">,<sp/>cp.stderr.lower())</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19" refid="namespacetest__cli__error__paths_1aa1dd6e2cf5e546f1f2c57999edf1053a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>unittest.main(verbosity=2)</highlight></codeline>
    </programlisting>
    <location file="tests/python/test_cli_error_paths.py"/>
  </compounddef>
</doxygen>
