<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ptq__from__hf_8py" kind="file" language="Python">
    <compoundname>ptq_from_hf.py</compoundname>
    <innernamespace refid="namespaceptq__from__hf">ptq_from_hf</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceptq__from__hf" refkind="compound"><highlight class="comment">#<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>File:<sp/>scripts/ptq_from_hf.py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#!/usr/bin/env<sp/>python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">Hugging<sp/>Face<sp/>one-shot<sp/>PTQ:</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral">-<sp/>Downloads<sp/>a<sp/>model<sp/>repo<sp/>snapshot<sp/>via<sp/>huggingface_hub</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">-<sp/>Locates<sp/>a<sp/>checkpoint<sp/>(safetensors<sp/>or<sp/>PyTorch<sp/>.bin/.pth/.ckpt)</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">-<sp/>Loads<sp/>state_dict,<sp/>extracts<sp/>the<sp/>EXACT<sp/>tensor<sp/>by<sp/>key</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">-<sp/>(Optional)<sp/>transposes<sp/>2D</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral">-<sp/>Exports<sp/>row-major<sp/>FP32<sp/>.bin</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">-<sp/>Runs<sp/>weight-only<sp/>PTQ<sp/>(INT8<sp/>by<sp/>default;<sp/>INT4<sp/>with<sp/>--wbits=4)</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">Example:</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/>make<sp/>deps-ptq</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/>python3<sp/>scripts/ptq_from_hf.py<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>--repo<sp/>facebook/opt-125m<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>--key<sp/>model.decoder.layers.0.self_attn.q_proj.weight<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>--out-prefix<sp/>out/qproj_int4<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>--wbits<sp/>4<sp/>--mode<sp/>per_row<sp/>--scale-dtype<sp/>fp16</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>annotations</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>argparse</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>json</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pathlib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Path</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceptq__from__hf_1aff4e5ceded2fc089de036435b5d6ba25" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceptq__from__hf_1aff4e5ceded2fc089de036435b5d6ba25" kindref="member">find_checkpoint</ref>(root:<sp/>Path,<sp/>prefer_file:<sp/>str<sp/>|<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/>-&gt;<sp/>Path:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Resolve<sp/>a<sp/>checkpoint<sp/>file<sp/>path<sp/>inside<sp/>a<sp/>downloaded<sp/>HF<sp/>snapshot.</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Prefers<sp/>.safetensors,<sp/>otherwise<sp/>typical<sp/>PyTorch<sp/>filenames.</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prefer_file:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>root<sp/>/<sp/>prefer_file</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p.exists():</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>--file<sp/>&apos;{prefer_file}&apos;<sp/>not<sp/>found<sp/>in<sp/>snapshot&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(3)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>candidates:<sp/>list[Path]<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>pat<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;*.safetensors&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*pytorch_model*.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.bin&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.pt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.pth&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.ckpt&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>candidates<sp/>+=<sp/>list(root.glob(pat))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>candidates:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>no<sp/>checkpoint<sp/>files<sp/>found<sp/>in<sp/>repo<sp/>snapshot&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(3)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>candidates.sort(key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>p:<sp/>(0<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p.suffix<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.safetensors&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>1,<sp/>len(p.name)))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>candidates[0]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespaceptq__from__hf_1a13d1751016c9c42aff4df31cb93b79b7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceptq__from__hf_1a13d1751016c9c42aff4df31cb93b79b7" kindref="member">load_state_dict</ref>(ckpt_path:<sp/>Path)<sp/>-&gt;<sp/>dict:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Load<sp/>a<sp/>state_dict<sp/>from<sp/>.safetensors<sp/>or<sp/>PyTorch<sp/>checkpoint-like<sp/>files.</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ckpt_path.suffix<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;.safetensors&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>safetensors.torch<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>load_file<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>safe_load</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>safe_load(str(ckpt_path))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>e:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>failed<sp/>to<sp/>load<sp/>safetensors:<sp/>{e}&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(2)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>torch</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>torch<sp/>is<sp/>required.<sp/>pip<sp/>install<sp/>torch&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(2)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>obj<sp/>=<sp/>torch.load(str(ckpt_path),<sp/>map_location=</highlight><highlight class="stringliteral">&quot;cpu&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(obj,<sp/></highlight><highlight class="stringliteral">&quot;state_dict&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj.state_dict()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dict)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;state_dict&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>obj:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj[</highlight><highlight class="stringliteral">&quot;state_dict&quot;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(obj,<sp/>dict):</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>unsupported<sp/>checkpoint<sp/>format&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit(2)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespaceptq__from__hf_1a1b00389f7f6cfb3513e8ffa3ab631e20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceptq__from__hf_1a1b00389f7f6cfb3513e8ffa3ab631e20" kindref="member">tensor_to_fp32_bin</ref>(t,<sp/>out_bin:<sp/>Path,<sp/>transpose:<sp/>bool)<sp/>-&gt;<sp/>tuple[int,<sp/>int]:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Export<sp/>a<sp/>tensor<sp/>to<sp/>row-major<sp/>float32<sp/>.bin.<sp/>Returns<sp/>(rows,<sp/>cols).</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Torch<sp/>tensor<sp/>-&gt;<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasattr(t,<sp/></highlight><highlight class="stringliteral">&quot;detach&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t.detach().cpu()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr<sp/>=<sp/>t.to(dtype=t.dtype<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>str(t.dtype).startswith(</highlight><highlight class="stringliteral">&quot;float&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">).float().numpy()</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr<sp/>=<sp/>t</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>arr.dtype<sp/>!=<sp/>np.float32:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr<sp/>=<sp/>arr.astype(np.float32)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>arr.ndim<sp/>!=<sp/>2:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>selected<sp/>tensor<sp/>is<sp/>{arr.ndim}D;<sp/>expected<sp/>2D<sp/>[rows,<sp/>cols]&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(3)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>transpose:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arr<sp/>=<sp/>arr.T.copy()</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>rows,<sp/>cols<sp/>=<sp/>int(arr.shape[0]),<sp/>int(arr.shape[1])</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>out_bin.parent.mkdir(parents=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>exist_ok=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(out_bin,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(arr.tobytes(order=</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rows,<sp/>cols</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="namespaceptq__from__hf_1ae6724778682d731015d0d9bac448f58f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceptq__from__hf_1ae6724778682d731015d0d9bac448f58f" kindref="member">main</ref>()<sp/>-&gt;<sp/>None:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ap<sp/>=<sp/>argparse.ArgumentParser()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--repo&quot;</highlight><highlight class="normal">,<sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Hugging<sp/>Face<sp/>repo<sp/>id<sp/>(e.g.,<sp/>org/name)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--revision&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Branch/tag/commit&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--file&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Specific<sp/>checkpoint<sp/>file<sp/>inside<sp/>repo<sp/>(optional)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--key&quot;</highlight><highlight class="normal">,<sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;state_dict<sp/>key<sp/>to<sp/>extract&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--out-prefix&quot;</highlight><highlight class="normal">,<sp/>required=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Output<sp/>prefix<sp/>for<sp/>PTQ<sp/>artifacts&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--transpose&quot;</highlight><highlight class="normal">,<sp/>action=</highlight><highlight class="stringliteral">&quot;store_true&quot;</highlight><highlight class="normal">,<sp/>help=</highlight><highlight class="stringliteral">&quot;Transpose<sp/>2D<sp/>tensor<sp/>before<sp/>saving&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--mode&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&quot;per_row&quot;</highlight><highlight class="normal">,<sp/>choices=[</highlight><highlight class="stringliteral">&quot;per_row&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;per_tensor&quot;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--accuracy-threshold&quot;</highlight><highlight class="normal">,<sp/>type=float,<sp/>default=0.995)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--wbits&quot;</highlight><highlight class="normal">,<sp/>type=int,<sp/>default=8,<sp/>choices=[8,<sp/>4],</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Weight<sp/>bit-width:<sp/>8<sp/>(default)<sp/>or<sp/>4&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>ap.add_argument(</highlight><highlight class="stringliteral">&quot;--scale-dtype&quot;</highlight><highlight class="normal">,<sp/>default=</highlight><highlight class="stringliteral">&quot;fp16&quot;</highlight><highlight class="normal">,<sp/>choices=[</highlight><highlight class="stringliteral">&quot;fp16&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;fp32&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help=</highlight><highlight class="stringliteral">&quot;Scale<sp/>storage<sp/>dtype<sp/>(default:<sp/>fp16)&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>args<sp/>=<sp/>ap.parse_args()</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>huggingface_hub<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>snapshot_download</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>huggingface_hub<sp/>is<sp/>required.<sp/>pip<sp/>install<sp/>huggingface_hub&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(2)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>1)<sp/>Download<sp/>snapshot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>local_dir<sp/>=<sp/>snapshot_download(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>repo_id=args.repo,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>revision=args.revision,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ignore_patterns=[</highlight><highlight class="stringliteral">&quot;*.md&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.txt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.png&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.jpg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.jpeg&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;*.gif&quot;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>Path(local_dir)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>2)<sp/>Locate<sp/>checkpoint<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>ckpt<sp/>=<sp/><ref refid="namespaceptq__from__hf_1aff4e5ceded2fc089de036435b5d6ba25" kindref="member">find_checkpoint</ref>(root,<sp/>args.file)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>3)<sp/>Load<sp/>state_dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>sd<sp/>=<sp/><ref refid="namespaceptq__from__hf_1a13d1751016c9c42aff4df31cb93b79b7" kindref="member">load_state_dict</ref>(ckpt)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>args.key<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sd:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>key<sp/>&apos;{args.key}&apos;<sp/>not<sp/>found<sp/>in<sp/>state_dict&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Offer<sp/>a<sp/>quick<sp/>listing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keys_sample<sp/>=<sp/>list(sd.keys())[:50]</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(f</highlight><highlight class="stringliteral">&quot;Available<sp/>keys<sp/>(first<sp/>50):<sp/>{keys_sample}&quot;</highlight><highlight class="normal">,<sp/>file=sys.stderr)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(3)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>sd[args.key]</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>4)<sp/>Export<sp/>to<sp/>FP32<sp/>row-major<sp/>.bin<sp/>and<sp/>discover<sp/>true<sp/>rows/cols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>out_bin<sp/>=<sp/>Path(args.out_prefix<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;.f32.bin&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>rows,<sp/>cols<sp/>=<sp/><ref refid="namespaceptq__from__hf_1a1b00389f7f6cfb3513e8ffa3ab631e20" kindref="member">tensor_to_fp32_bin</ref>(t,<sp/>out_bin,<sp/>args.transpose)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>meta<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;repo&quot;</highlight><highlight class="normal">:<sp/>args.repo,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;revision&quot;</highlight><highlight class="normal">:<sp/>args.revision,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;checkpoint_file&quot;</highlight><highlight class="normal">:<sp/>str(ckpt.relative_to(root)),</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">:<sp/>args.key,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;shape&quot;</highlight><highlight class="normal">:<sp/>[rows,<sp/>cols],</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;exported_fp32_bin&quot;</highlight><highlight class="normal">:<sp/>str(out_bin),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;mode&quot;</highlight><highlight class="normal">:<sp/>args.mode,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;out_prefix&quot;</highlight><highlight class="normal">:<sp/>args.out_prefix,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;accuracy_threshold&quot;</highlight><highlight class="normal">:<sp/>args.accuracy_threshold,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;wbits&quot;</highlight><highlight class="normal">:<sp/>args.wbits,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;scale_dtype&quot;</highlight><highlight class="normal">:<sp/>args.scale_dtype,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[hf-shape]&quot;</highlight><highlight class="normal">,<sp/>json.dumps(meta))</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>5)<sp/>Run<sp/>PTQ<sp/>with<sp/>the<sp/>TRUE<sp/>rows/cols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>[</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.executable,<sp/></highlight><highlight class="stringliteral">&quot;benchmarks/ptq_calib.py&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--weights&quot;</highlight><highlight class="normal">,<sp/>str(out_bin),</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--rows&quot;</highlight><highlight class="normal">,<sp/>str(rows),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--cols&quot;</highlight><highlight class="normal">,<sp/>str(cols),</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--mode&quot;</highlight><highlight class="normal">,<sp/>args.mode,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--out-prefix&quot;</highlight><highlight class="normal">,<sp/>args.out_prefix,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--accuracy-threshold&quot;</highlight><highlight class="normal">,<sp/>str(args.accuracy_threshold),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--wbits&quot;</highlight><highlight class="normal">,<sp/>str(args.wbits),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--scale-dtype&quot;</highlight><highlight class="normal">,<sp/>args.scale_dtype,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>]</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>cp<sp/>=<sp/>subprocess.run(cmd)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>sys.exit(cp.returncode)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceptq__from__hf_1ae6724778682d731015d0d9bac448f58f" kindref="member">main</ref>()</highlight></codeline>
    </programlisting>
    <location file="scripts/ptq_from_hf.py"/>
  </compounddef>
</doxygen>
