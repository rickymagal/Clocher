<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structcli__extras" kind="struct" language="C++" prot="public">
    <compoundname>cli_extras</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structcli__extras_1aa45c7376781454d767d2202800c27a3e" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::prompt</definition>
        <argsstring></argsstring>
        <name>prompt</name>
        <qualifiedname>cli_extras::prompt</qualifiedname>
        <briefdescription>
<para>Prompt text; may be NULL if using file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="174" column="21" bodyfile="engine/src/main_infer.c" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a5eb0317aa09b90f400b657245b41e92c" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t cli_extras::max_new</definition>
        <argsstring></argsstring>
        <name>max_new</name>
        <qualifiedname>cli_extras::max_new</qualifiedname>
        <briefdescription>
<para>Upper bound of new tokens to generate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="175" column="22" bodyfile="engine/src/main_infer.c" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a4e8cdca32127b81f8fcb41047a320844" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::threads</definition>
        <argsstring></argsstring>
        <name>threads</name>
        <qualifiedname>cli_extras::threads</qualifiedname>
        <briefdescription>
<para>Thread hint; &lt;= 0 means auto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="176" column="22" bodyfile="engine/src/main_infer.c" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a8d2e77b03a5d60f1620594428885c49f" prot="public" static="no" mutable="no">
        <type><ref refid="main__infer_8c_1a893f83cc65c25bbc7aaf4798ac1a43fd" kindref="member">cli_precision_t</ref></type>
        <definition>cli_precision_t cli_extras::prec</definition>
        <argsstring></argsstring>
        <name>prec</name>
        <qualifiedname>cli_extras::prec</qualifiedname>
        <briefdescription>
<para>Float precision hint (fp32/bf16/fp16). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="177" column="22" bodyfile="engine/src/main_infer.c" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a313d0562dfb63a6350db5c84128fc074" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::affinity</definition>
        <argsstring></argsstring>
        <name>affinity</name>
        <qualifiedname>cli_extras::affinity</qualifiedname>
        <briefdescription>
<para>&quot;auto&quot; | &quot;compact&quot; | &quot;scatter&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="178" column="21" bodyfile="engine/src/main_infer.c" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a648dda8436ede182650f29f0460fa6a3" prot="public" static="no" mutable="no">
        <type><ref refid="main__infer_8c_1ae715f0cc745f58eebd4be50b187dd41d" kindref="member">cli_pretranspose_t</ref></type>
        <definition>cli_pretranspose_t cli_extras::pretx</definition>
        <argsstring></argsstring>
        <name>pretx</name>
        <qualifiedname>cli_extras::pretx</qualifiedname>
        <briefdescription>
<para>Pretranspose policy. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="179" column="22" bodyfile="engine/src/main_infer.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a50cd2ee771a9eee3fd448d2a1c0b5645" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <qualifiedname>cli_extras::device</qualifiedname>
        <briefdescription>
<para>&quot;auto&quot; | &quot;cpu&quot; | &quot;cuda&quot; | &quot;ze&quot; (no-op hint). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="180" column="21" bodyfile="engine/src/main_infer.c" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a992ba8185b17f227f60e2e570441b63f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::prompts_file</definition>
        <argsstring></argsstring>
        <name>prompts_file</name>
        <qualifiedname>cli_extras::prompts_file</qualifiedname>
        <briefdescription>
<para>Path to prompts file (one per line). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="183" column="21" bodyfile="engine/src/main_infer.c" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a4af612c719a80234b4e753bc559f358c" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::batch</definition>
        <argsstring></argsstring>
        <name>batch</name>
        <qualifiedname>cli_extras::batch</qualifiedname>
        <briefdescription>
<para>Batch size (compat hint). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="184" column="22" bodyfile="engine/src/main_infer.c" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a01be4e3c92d754527967d04b729e4ee6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::prefetch</definition>
        <argsstring></argsstring>
        <name>prefetch</name>
        <qualifiedname>cli_extras::prefetch</qualifiedname>
        <briefdescription>
<para>&quot;on&quot; | &quot;off&quot; | &quot;auto&quot; | &quot;N&quot; (string). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="185" column="21" bodyfile="engine/src/main_infer.c" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a628bf363ee35fe852bbb6510455647bd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::warmup_tokens</definition>
        <argsstring></argsstring>
        <name>warmup_tokens</name>
        <qualifiedname>cli_extras::warmup_tokens</qualifiedname>
        <briefdescription>
<para>Warmup tokens before measurement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="186" column="22" bodyfile="engine/src/main_infer.c" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a4e233e0c7d76b4fb4338d7460a552707" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::aggregate</definition>
        <argsstring></argsstring>
        <name>aggregate</name>
        <qualifiedname>cli_extras::aggregate</qualifiedname>
        <briefdescription>
<para>Aggregate mode: iterate prompts-file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="187" column="22" bodyfile="engine/src/main_infer.c" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a8c1b8fdbf9dc75a774e8b451608c961b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::rounds</definition>
        <argsstring></argsstring>
        <name>rounds</name>
        <qualifiedname>cli_extras::rounds</qualifiedname>
        <briefdescription>
<para>Repeat measured window N times (&gt;=1). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="188" column="22" bodyfile="engine/src/main_infer.c" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1aa52e671b92aa5a9099153b609a0c5792" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::model_dir</definition>
        <argsstring></argsstring>
        <name>model_dir</name>
        <qualifiedname>cli_extras::model_dir</qualifiedname>
        <briefdescription>
<para>If set, chdir() here before loading IEBIN. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="191" column="21" bodyfile="engine/src/main_infer.c" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a96d26a6a2f436fb0b232d383f321c3e6" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::model_json</definition>
        <argsstring></argsstring>
        <name>model_json</name>
        <qualifiedname>cli_extras::model_json</qualifiedname>
        <briefdescription>
<para>Optional explicit model JSON path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="192" column="21" bodyfile="engine/src/main_infer.c" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1ae2401ceced12a603aabefd22f57584bd" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::model_bin</definition>
        <argsstring></argsstring>
        <name>model_bin</name>
        <qualifiedname>cli_extras::model_bin</qualifiedname>
        <briefdescription>
<para>Optional explicit model BIN path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="193" column="21" bodyfile="engine/src/main_infer.c" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a061a8ed1f6671ad018d99db180df06c2" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* cli_extras::precision_label</definition>
        <argsstring></argsstring>
        <name>precision_label</name>
        <qualifiedname>cli_extras::precision_label</qualifiedname>
        <briefdescription>
<para>e.g. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;fp32&quot;|&quot;bf16&quot;|&quot;fp16&quot;|&quot;int8w&quot;|&quot;int4w&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="196" column="21" bodyfile="engine/src/main_infer.c" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structcli__extras_1a49d7c958a59c223a1f66d6aedc796e68" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int cli_extras::precision_from_flag</definition>
        <argsstring></argsstring>
        <name>precision_from_flag</name>
        <qualifiedname>cli_extras::precision_from_flag</qualifiedname>
        <briefdescription>
<para>1 if set via <ndash/>precision, else 0 to allow env override. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/main_infer.c" line="197" column="22" bodyfile="engine/src/main_infer.c" bodystart="197" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>cli_extras</label>
        <link refid="structcli__extras"/>
      </node>
    </collaborationgraph>
    <location file="engine/src/main_infer.c" line="173" column="1" bodyfile="engine/src/main_infer.c" bodystart="173" bodyend="198"/>
    <listofallmembers>
      <member refid="structcli__extras_1a313d0562dfb63a6350db5c84128fc074" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>affinity</name></member>
      <member refid="structcli__extras_1a4e233e0c7d76b4fb4338d7460a552707" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>aggregate</name></member>
      <member refid="structcli__extras_1a4af612c719a80234b4e753bc559f358c" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>batch</name></member>
      <member refid="structcli__extras_1a50cd2ee771a9eee3fd448d2a1c0b5645" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>device</name></member>
      <member refid="structcli__extras_1a5eb0317aa09b90f400b657245b41e92c" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>max_new</name></member>
      <member refid="structcli__extras_1ae2401ceced12a603aabefd22f57584bd" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>model_bin</name></member>
      <member refid="structcli__extras_1aa52e671b92aa5a9099153b609a0c5792" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>model_dir</name></member>
      <member refid="structcli__extras_1a96d26a6a2f436fb0b232d383f321c3e6" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>model_json</name></member>
      <member refid="structcli__extras_1a8d2e77b03a5d60f1620594428885c49f" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>prec</name></member>
      <member refid="structcli__extras_1a49d7c958a59c223a1f66d6aedc796e68" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>precision_from_flag</name></member>
      <member refid="structcli__extras_1a061a8ed1f6671ad018d99db180df06c2" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>precision_label</name></member>
      <member refid="structcli__extras_1a01be4e3c92d754527967d04b729e4ee6" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>prefetch</name></member>
      <member refid="structcli__extras_1a648dda8436ede182650f29f0460fa6a3" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>pretx</name></member>
      <member refid="structcli__extras_1aa45c7376781454d767d2202800c27a3e" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>prompt</name></member>
      <member refid="structcli__extras_1a992ba8185b17f227f60e2e570441b63f" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>prompts_file</name></member>
      <member refid="structcli__extras_1a8c1b8fdbf9dc75a774e8b451608c961b" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>rounds</name></member>
      <member refid="structcli__extras_1a4e8cdca32127b81f8fcb41047a320844" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>threads</name></member>
      <member refid="structcli__extras_1a628bf363ee35fe852bbb6510455647bd" prot="public" virt="non-virtual"><scope>cli_extras</scope><name>warmup_tokens</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
