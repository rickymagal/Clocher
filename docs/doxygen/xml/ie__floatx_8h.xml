<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__floatx_8h" kind="file" language="C++">
    <compoundname>ie_floatx.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="floatx_8c" local="yes">engine/src/math/floatx.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>engine/include/ie_floatx.h</label>
        <link refid="ie__floatx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>engine/include/ie_floatx.h</label>
        <link refid="ie__floatx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>engine/src/math/floatx.c</label>
        <link refid="floatx_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__floatx_8h_1a0c66f1d557d06e7bce4c3c702e884481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_fp32_to_bf16</definition>
        <argsstring>(const float *in, uint16_t *out, size_t n)</argsstring>
        <name>ie_fp32_to_bf16</name>
        <param>
          <type>const float *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Convert an array of float (FP32) to bfloat16 (BF16). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP32 input array of length <computeroutput>n</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to BF16 output array of length <computeroutput>n</computeroutput> (uint16_t per elem). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Convert an array of float (FP32) to bfloat16 (BF16).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 input array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>BF16 output array (uint16_t per element). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_floatx.h" line="28" column="6" bodyfile="engine/src/math/floatx.c" bodystart="20" bodyend="33" declfile="engine/include/ie_floatx.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ie__floatx_8h_1a51e5457de6cbdf1472fa106bc3be98de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_bf16_to_fp32</definition>
        <argsstring>(const uint16_t *in, float *out, size_t n)</argsstring>
        <name>ie_bf16_to_fp32</name>
        <param>
          <type>const uint16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Convert an array of bfloat16 (BF16) to float (FP32). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to BF16 input array of length <computeroutput>n</computeroutput> (uint16_t per elem). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP32 output array of length <computeroutput>n</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Convert an array of bfloat16 (BF16) to float (FP32).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>BF16 input array (uint16_t per element). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 output array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_floatx.h" line="37" column="6" bodyfile="engine/src/math/floatx.c" bodystart="42" bodyend="49" declfile="engine/include/ie_floatx.h" declline="37" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ie__floatx_8h_1a1aa580b0b947f7d3a6628e844d9aa852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_fp32_to_fp16</definition>
        <argsstring>(const float *in, uint16_t *out, size_t n)</argsstring>
        <name>ie_fp32_to_fp16</name>
        <param>
          <type>const float *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>uint16_t *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Convert an array of float (FP32) to IEEE half (FP16). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP32 input array of length <computeroutput>n</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP16 output array of length <computeroutput>n</computeroutput> (uint16_t per elem). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Convert an array of float (FP32) to IEEE half (FP16).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 input array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>FP16 output array (uint16_t per element). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_floatx.h" line="46" column="6" bodyfile="engine/src/math/floatx.c" bodystart="62" bodyend="111" declfile="engine/include/ie_floatx.h" declline="46" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ie__floatx_8h_1ad5abc69b1882aaf3a03faf76ddf4cb28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_fp16_to_fp32</definition>
        <argsstring>(const uint16_t *in, float *out, size_t n)</argsstring>
        <name>ie_fp16_to_fp32</name>
        <param>
          <type>const uint16_t *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Convert an array of IEEE half (FP16) to float (FP32). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP16 input array of length <computeroutput>n</computeroutput> (uint16_t per elem). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to FP32 output array of length <computeroutput>n</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Convert an array of IEEE half (FP16) to float (FP32).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>FP16 input array (uint16_t per element). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 output array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_floatx.h" line="55" column="6" bodyfile="engine/src/math/floatx.c" bodystart="120" bodyend="156" declfile="engine/include/ie_floatx.h" declline="55" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>FP32↔BF16/FP16 conversion helpers (vector forms). </para>
    </briefdescription>
    <detaileddescription>
<para>All routines are pure and do not allocate. They operate on contiguous arrays. Rounding:<itemizedlist>
<listitem><para>FP32→BF16 uses round-to-nearest-even (ties to even).</para>
</listitem><listitem><para>FP32→FP16 uses IEEE 754 round-to-nearest-even; infinities/NaNs preserved. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_FLOATX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_FLOATX_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__floatx_8h_1a0c66f1d557d06e7bce4c3c702e884481" kindref="member">ie_fp32_to_bf16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*in,<sp/>uint16_t<sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__floatx_8h_1a51e5457de6cbdf1472fa106bc3be98de" kindref="member">ie_bf16_to_fp32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*in,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__floatx_8h_1a1aa580b0b947f7d3a6628e844d9aa852" kindref="member">ie_fp32_to_fp16</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*in,<sp/>uint16_t<sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__floatx_8h_1ad5abc69b1882aaf3a03faf76ddf4cb28" kindref="member">ie_fp16_to_fp32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>*in,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_FLOATX_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="engine/include/ie_floatx.h"/>
  </compounddef>
</doxygen>
