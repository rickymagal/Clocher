<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__batcher_8c" kind="file" language="C++">
    <compoundname>ie_batcher.c</compoundname>
    <includes refid="ie__batcher_8h" local="yes">ie_batcher.h</includes>
    <includes local="no">pthread.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ie_batcher.h</label>
        <link refid="ie__batcher_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/io/ie_batcher.c</label>
        <link refid="ie__batcher_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>pthread.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>string.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structie__batcher" prot="public">ie_batcher</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * xcalloc</definition>
        <argsstring>(size_t n, size_t sz)</argsstring>
        <name>xcalloc</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
<para>calloc wrapper (zero-initialized). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sz</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of each element in bytes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to allocated memory or NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="75" column="13" bodyfile="engine/src/io/ie_batcher.c" bodystart="75" bodyend="75"/>
        <referencedby refid="ie__batcher_8h_1ab201d312c4f0fa59e31e99e221bd71f6" compoundref="ie__batcher_8c" startline="171" endline="215">ie_batcher_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void clear_item</definition>
        <argsstring>(ie_batcher_item_t *it)</argsstring>
        <name>clear_item</name>
        <param>
          <type><ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>Free an item&apos;s payload (token ids) and reset its fields. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>The item to clear (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="81" column="13" bodyfile="engine/src/io/ie_batcher.c" bodystart="81" bodyend="88"/>
        <references refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" compoundref="ie__batcher_8h" startline="30">ie_batcher_item_t::ids</references>
        <references refid="structie__batcher__item__t_1a6fa5aa6d85ddca6b90125464f1332626" compoundref="ie__batcher_8h" startline="31">ie_batcher_item_t::n_ids</references>
        <references refid="structie__batcher__item__t_1a29bbd077e2e4a2c0e8fad18a2a8ae7cd" compoundref="ie__batcher_8h" startline="29">ie_batcher_item_t::prompt</references>
        <references refid="structie__batcher__item__t_1a0415c395810297f906e8a6757d9ad425" compoundref="ie__batcher_8h" startline="32">ie_batcher_item_t::status</references>
        <referencedby refid="ie__batcher_8h_1a32c4149e9889f52a2eb339131ecc38dc" compoundref="ie__batcher_8c" startline="250" endline="265">ie_batcher_advance</referencedby>
        <referencedby refid="ie__batcher_8h_1a606dcb56c138607d9b0d77948d8b48b9" compoundref="ie__batcher_8c" startline="267" endline="290">ie_batcher_destroy</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a691ff39201d7e90e9808bf7f5ddb2cb8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int pop_next</definition>
        <argsstring>(ie_batcher_t *b, size_t *out_idx)</argsstring>
        <name>pop_next</name>
        <param>
          <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>out_idx</declname>
        </param>
        <briefdescription>
<para>Thread-safe fetch of the next prompt index to process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Batcher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Output index in [0, n_prompts). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if an index was produced; 0 if there is no more work. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="100" column="12" bodyfile="engine/src/io/ie_batcher.c" bodystart="100" bodyend="112"/>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" compoundref="ie__batcher_8c" startline="34">ie_batcher::n_prompts</references>
        <references refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" compoundref="ie__batcher_8c" startline="44">ie_batcher::produced</references>
        <references refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" compoundref="ie__batcher_8c" startline="45">ie_batcher::producer_done</references>
        <referencedby refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" compoundref="ie__batcher_8c" startline="144" endline="165">worker_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a9475e6883ae67815581f9573b97d2148" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void enqueue_item</definition>
        <argsstring>(ie_batcher_t *b, const ie_batcher_item_t *it)</argsstring>
        <name>enqueue_item</name>
        <param>
          <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref> *</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>Enqueue a tokenized item into the ring (blocks if full). </para>
        </briefdescription>
        <detaileddescription>
<para>Ownership of <computeroutput>it-&gt;ids</computeroutput> transfers to the ring on success. If the batcher is stopping, the function frees <computeroutput>it-&gt;ids</computeroutput> to avoid leaking the payload.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Batcher handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>Item to enqueue (copied by value). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="123" column="13" bodyfile="engine/src/io/ie_batcher.c" bodystart="123" bodyend="137"/>
        <references refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" compoundref="ie__batcher_8c" startline="38">ie_batcher::cap</references>
        <references refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" compoundref="ie__batcher_8c" startline="50">ie_batcher::cv_not_empty</references>
        <references refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" compoundref="ie__batcher_8c" startline="49">ie_batcher::cv_not_full</references>
        <references refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" compoundref="ie__batcher_8h" startline="30">ie_batcher_item_t::ids</references>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" compoundref="ie__batcher_8c" startline="37">ie_batcher::ring</references>
        <references refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" compoundref="ie__batcher_8c" startline="41">ie_batcher::size</references>
        <references refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" compoundref="ie__batcher_8c" startline="55">ie_batcher::stop</references>
        <references refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" compoundref="ie__batcher_8c" startline="40">ie_batcher::w</references>
        <referencedby refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" compoundref="ie__batcher_8c" startline="144" endline="165">worker_main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void * worker_main</definition>
        <argsstring>(void *arg)</argsstring>
        <name>worker_main</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Producer thread entry: tokenizes prompts in ascending index order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>ie_batcher_t*</computeroutput> passed as void*. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="144" column="13" bodyfile="engine/src/io/ie_batcher.c" bodystart="144" bodyend="165"/>
        <references refid="ie__batcher_8c_1a9475e6883ae67815581f9573b97d2148" compoundref="ie__batcher_8c" startline="123" endline="137">enqueue_item</references>
        <references refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" compoundref="ie__batcher_8h" startline="30">ie_batcher_item_t::ids</references>
        <references refid="structie__batcher__item__t_1a6fa5aa6d85ddca6b90125464f1332626" compoundref="ie__batcher_8h" startline="31">ie_batcher_item_t::n_ids</references>
        <references refid="ie__batcher_8c_1a691ff39201d7e90e9808bf7f5ddb2cb8" compoundref="ie__batcher_8c" startline="100" endline="112">pop_next</references>
        <references refid="structie__batcher__item__t_1a29bbd077e2e4a2c0e8fad18a2a8ae7cd" compoundref="ie__batcher_8h" startline="29">ie_batcher_item_t::prompt</references>
        <references refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" compoundref="ie__batcher_8c" startline="33">ie_batcher::prompts</references>
        <references refid="structie__batcher__item__t_1a0415c395810297f906e8a6757d9ad425" compoundref="ie__batcher_8h" startline="32">ie_batcher_item_t::status</references>
        <references refid="structie__batcher_1a206c1683ca1028598ab358c226900796" compoundref="ie__batcher_8c" startline="58">ie_batcher::tokenize</references>
        <references refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" compoundref="ie__batcher_8c" startline="59">ie_batcher::user_ctx</references>
        <referencedby refid="ie__batcher_8h_1ab201d312c4f0fa59e31e99e221bd71f6" compoundref="ie__batcher_8c" startline="171" endline="215">ie_batcher_create</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1ab201d312c4f0fa59e31e99e221bd71f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
        <definition>ie_batcher_t * ie_batcher_create</definition>
        <argsstring>(const char **prompts, size_t n_prompts, size_t microbatch, size_t queue_capacity, unsigned n_workers, ie_batcher_tokenize_fn tokenize_cb, void *user_ctx)</argsstring>
        <name>ie_batcher_create</name>
        <param>
          <type>const char **</type>
          <declname>prompts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_prompts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>microbatch</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>queue_capacity</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>n_workers</declname>
        </param>
        <param>
          <type><ref refid="ie__batcher_8h_1ac560ca29a3e380a92c75ed941f2bfdbe" kindref="member">ie_batcher_tokenize_fn</ref></type>
          <declname>tokenize_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_ctx</declname>
        </param>
        <briefdescription>
<para>Create a new asynchronous tokenizer batcher. </para>
        </briefdescription>
        <detaileddescription>
<para>Spawns up to <computeroutput>n_workers</computeroutput> threads that prefetch and tokenize prompts into a bounded ring buffer. The consumer should call <ref refid="ie__batcher_8h_1a6dfb3b0fad4a7c1271d86da06649236f" kindref="member">ie_batcher_get</ref> followed by <ref refid="ie__batcher_8h_1a32c4149e9889f52a2eb339131ecc38dc" kindref="member">ie_batcher_advance</ref> in a loop until the stream is drained.</para>
<para>Defaults:<itemizedlist>
<listitem><para>If <computeroutput>microbatch</computeroutput> == 0, it is treated as 1.</para>
</listitem><listitem><para>If <computeroutput>queue_capacity</computeroutput> == 0, it is treated as max(microbatch, 8).</para>
</listitem><listitem><para>If <computeroutput>n_workers</computeroutput> == 0, it is treated as 1.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prompts</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of input UTF-8 prompt strings (not owned; must outlive the batcher). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_prompts</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of prompts in <computeroutput>prompts</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>microbatch</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum items returned per view. Use 0 for default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue_capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Ring capacity in items. Use 0 for default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_workers</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of tokenizer worker threads. Use 0 for default. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tokenize_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>User tokenizer callback (must not be NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Opaque pointer forwarded to <computeroutput>tokenize_cb</computeroutput>; may be NULL. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ie_batcher_t* Handle on success, or NULL on allocation/spawn error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="171" column="14" bodyfile="engine/src/io/ie_batcher.c" bodystart="171" bodyend="215"/>
        <references refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" compoundref="ie__batcher_8c" startline="38">ie_batcher::cap</references>
        <references refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" compoundref="ie__batcher_8c" startline="50">ie_batcher::cv_not_empty</references>
        <references refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" compoundref="ie__batcher_8c" startline="49">ie_batcher::cv_not_full</references>
        <references refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" compoundref="ie__batcher_8c" startline="62">ie_batcher::microbatch</references>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" compoundref="ie__batcher_8c" startline="34">ie_batcher::n_prompts</references>
        <references refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" compoundref="ie__batcher_8c" startline="53">ie_batcher::n_workers</references>
        <references refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" compoundref="ie__batcher_8c" startline="33">ie_batcher::prompts</references>
        <references refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" compoundref="ie__batcher_8c" startline="37">ie_batcher::ring</references>
        <references refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" compoundref="ie__batcher_8c" startline="54">ie_batcher::threads</references>
        <references refid="structie__batcher_1a206c1683ca1028598ab358c226900796" compoundref="ie__batcher_8c" startline="58">ie_batcher::tokenize</references>
        <references refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" compoundref="ie__batcher_8c" startline="59">ie_batcher::user_ctx</references>
        <references refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" compoundref="ie__batcher_8c" startline="144" endline="165">worker_main</references>
        <references refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" compoundref="ie__batcher_8c" startline="75" endline="75">xcalloc</references>
        <referencedby refid="test__batcher_8c_1a840a5fb06d03045c6f4e645ed682b7ad" compoundref="test__batcher_8c" startline="60" endline="98">test_basic_prefetch_and_order</referencedby>
        <referencedby refid="test__batcher_8c_1acebcf748df4676af1488302913dcc33e" compoundref="test__batcher_8c" startline="136" endline="151">test_partial_teardown</referencedby>
        <referencedby refid="test__batcher_8c_1ae1015c7a7a149612ed323d43e7c93a0c" compoundref="test__batcher_8c" startline="105" endline="128">test_wrap_and_view_limits</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a6dfb3b0fad4a7c1271d86da06649236f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_batcher_get</definition>
        <argsstring>(ie_batcher_t *b, ie_batcher_view_t *out_view)</argsstring>
        <name>ie_batcher_get</name>
        <param>
          <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="ie__batcher_8h_1a95ad6e20e6851edda314f06421b90b0f" kindref="member">ie_batcher_view_t</ref> *</type>
          <declname>out_view</declname>
        </param>
        <briefdescription>
<para>Obtain a contiguous slice of ready items without copying. </para>
        </briefdescription>
        <detaileddescription>
<para>If no items are ready but production is still in progress, this function blocks until an item is available (or the batcher is stopping).</para>
<para>When this function returns 0, the stream is drained; <computeroutput>out_view-&gt;done</computeroutput> will be set to 1 and <computeroutput>out_view-&gt;items</computeroutput> will be NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Batcher handle (non-NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_view</parametername>
</parameternamelist>
<parameterdescription>
<para>Output view describing a contiguous span of items. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 1 if a non-empty view was produced; 0 if the stream is drained. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="217" column="5" bodyfile="engine/src/io/ie_batcher.c" bodystart="217" bodyend="248"/>
        <references refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" compoundref="ie__batcher_8c" startline="38">ie_batcher::cap</references>
        <references refid="structie__batcher__view_1a2efe82b85f967469f6f22777eb739f2d" compoundref="ie__batcher_8h" startline="43">ie_batcher_view::count</references>
        <references refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" compoundref="ie__batcher_8c" startline="50">ie_batcher::cv_not_empty</references>
        <references refid="structie__batcher__view_1acc236db8ff60ecd7bf003b5e3c2f29e8" compoundref="ie__batcher_8h" startline="44">ie_batcher_view::done</references>
        <references refid="structie__batcher__view_1a209b9ec614bb4622c1bb58e2e3a9e979" compoundref="ie__batcher_8h" startline="42">ie_batcher_view::items</references>
        <references refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" compoundref="ie__batcher_8c" startline="62">ie_batcher::microbatch</references>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" compoundref="ie__batcher_8c" startline="45">ie_batcher::producer_done</references>
        <references refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" compoundref="ie__batcher_8c" startline="39">ie_batcher::r</references>
        <references refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" compoundref="ie__batcher_8c" startline="37">ie_batcher::ring</references>
        <references refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" compoundref="ie__batcher_8c" startline="41">ie_batcher::size</references>
        <references refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" compoundref="ie__batcher_8c" startline="55">ie_batcher::stop</references>
        <referencedby refid="test__batcher_8c_1a840a5fb06d03045c6f4e645ed682b7ad" compoundref="test__batcher_8c" startline="60" endline="98">test_basic_prefetch_and_order</referencedby>
        <referencedby refid="test__batcher_8c_1acebcf748df4676af1488302913dcc33e" compoundref="test__batcher_8c" startline="136" endline="151">test_partial_teardown</referencedby>
        <referencedby refid="test__batcher_8c_1ae1015c7a7a149612ed323d43e7c93a0c" compoundref="test__batcher_8c" startline="105" endline="128">test_wrap_and_view_limits</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a32c4149e9889f52a2eb339131ecc38dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_batcher_advance</definition>
        <argsstring>(ie_batcher_t *b, size_t n_consumed)</argsstring>
        <name>ie_batcher_advance</name>
        <param>
          <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_consumed</declname>
        </param>
        <briefdescription>
<para>Release items previously returned by <ref refid="ie__batcher_8h_1a6dfb3b0fad4a7c1271d86da06649236f" kindref="member">ie_batcher_get</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Frees payloads and advances the ring read pointer, then signals producers that space is available.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Batcher handle (non-NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n_consumed</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of items to release; must not exceed the last view count. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="250" column="6" bodyfile="engine/src/io/ie_batcher.c" bodystart="250" bodyend="265"/>
        <references refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" compoundref="ie__batcher_8c" startline="38">ie_batcher::cap</references>
        <references refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" compoundref="ie__batcher_8c" startline="81" endline="88">clear_item</references>
        <references refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" compoundref="ie__batcher_8c" startline="49">ie_batcher::cv_not_full</references>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" compoundref="ie__batcher_8c" startline="39">ie_batcher::r</references>
        <references refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" compoundref="ie__batcher_8c" startline="37">ie_batcher::ring</references>
        <references refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" compoundref="ie__batcher_8c" startline="41">ie_batcher::size</references>
        <referencedby refid="test__batcher_8c_1a840a5fb06d03045c6f4e645ed682b7ad" compoundref="test__batcher_8c" startline="60" endline="98">test_basic_prefetch_and_order</referencedby>
        <referencedby refid="test__batcher_8c_1ae1015c7a7a149612ed323d43e7c93a0c" compoundref="test__batcher_8c" startline="105" endline="128">test_wrap_and_view_limits</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__batcher_8c_1a606dcb56c138607d9b0d77948d8b48b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_batcher_destroy</definition>
        <argsstring>(ie_batcher_t *b)</argsstring>
        <name>ie_batcher_destroy</name>
        <param>
          <type><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Destroy a batcher, joining workers and freeing all resources. </para>
        </briefdescription>
        <detaileddescription>
<para>Safe to call with NULL.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Batcher handle (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/ie_batcher.c" line="267" column="6" bodyfile="engine/src/io/ie_batcher.c" bodystart="267" bodyend="290"/>
        <references refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" compoundref="ie__batcher_8c" startline="38">ie_batcher::cap</references>
        <references refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" compoundref="ie__batcher_8c" startline="81" endline="88">clear_item</references>
        <references refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" compoundref="ie__batcher_8c" startline="50">ie_batcher::cv_not_empty</references>
        <references refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" compoundref="ie__batcher_8c" startline="49">ie_batcher::cv_not_full</references>
        <references refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" compoundref="ie__batcher_8c" startline="48">ie_batcher::mu</references>
        <references refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" compoundref="ie__batcher_8c" startline="53">ie_batcher::n_workers</references>
        <references refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" compoundref="ie__batcher_8c" startline="37">ie_batcher::ring</references>
        <references refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" compoundref="ie__batcher_8c" startline="55">ie_batcher::stop</references>
        <references refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" compoundref="ie__batcher_8c" startline="54">ie_batcher::threads</references>
        <referencedby refid="test__batcher_8c_1a840a5fb06d03045c6f4e645ed682b7ad" compoundref="test__batcher_8c" startline="60" endline="98">test_basic_prefetch_and_order</referencedby>
        <referencedby refid="test__batcher_8c_1acebcf748df4676af1488302913dcc33e" compoundref="test__batcher_8c" startline="136" endline="151">test_partial_teardown</referencedby>
        <referencedby refid="test__batcher_8c_1ae1015c7a7a149612ed323d43e7c93a0c" compoundref="test__batcher_8c" startline="105" endline="128">test_wrap_and_view_limits</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Prefetch + tokenization batcher with preserved output order. </para>
    </briefdescription>
    <detaileddescription>
<para>Implementation notes:<itemizedlist>
<listitem><para>The public header declares an opaque type via <computeroutput>typedef struct <ref refid="structie__batcher" kindref="compound">ie_batcher</ref> <ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref>;</computeroutput>. This file <bold>defines</bold> that struct as <computeroutput>struct <ref refid="structie__batcher" kindref="compound">ie_batcher</ref> { ... }</computeroutput> (same tag name), avoiding any conflicting typedefs.</para>
</listitem><listitem><para>To preserve strict input order == output order and to keep unit tests deterministic, this implementation runs with a single producer worker regardless of the requested <computeroutput>n_workers</computeroutput>. If you want parallel tokenization later, add an ordered merge stage.</para>
</listitem><listitem><para>The consumer obtains contiguous slices from a ring buffer up to <computeroutput>microbatch</computeroutput> items and never across the ring wrap boundary. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__batcher_8h" kindref="compound">ie_batcher.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pthread.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Concrete<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structie__batcher" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structie__batcher" kindref="compound">ie_batcher</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Input<sp/>source<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" kindref="member">prompts</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" kindref="member">n_prompts</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ring<sp/>buffer<sp/>of<sp/>ready<sp/>(tokenized)<sp/>items<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref><sp/>*<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" kindref="member">r</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" kindref="member">w</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Production<sp/>progress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" kindref="member">produced</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" kindref="member">producer_done</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Concurrency<sp/>primitives<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" refkind="member"><highlight class="normal"><sp/><sp/>pthread_mutex_t<sp/><ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" refkind="member"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/><sp/><ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" refkind="member"><highlight class="normal"><sp/><sp/>pthread_cond_t<sp/><sp/><ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Workers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" kindref="member">n_workers</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54" refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" refkind="member"><highlight class="normal"><sp/><sp/>pthread_t<sp/>*<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Tokenization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structie__batcher_1a206c1683ca1028598ab358c226900796" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__batcher_8h_1ac560ca29a3e380a92c75ed941f2bfdbe" kindref="member">ie_batcher_tokenize_fn</ref><sp/><ref refid="structie__batcher_1a206c1683ca1028598ab358c226900796" kindref="member">tokenize</ref>;<sp/></highlight></codeline>
<codeline lineno="59" refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" kindref="member">user_ctx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Controls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" kindref="member">microbatch</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Helpers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" kindref="member">xcalloc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calloc(n,<sp/>sz);<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" kindref="member">clear_item</ref>(<ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref><sp/>*it)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!it)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref>)<sp/>free(it-&gt;<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>it-&gt;<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>it-&gt;<ref refid="structie__batcher__item__t_1a6fa5aa6d85ddca6b90125464f1332626" kindref="member">n_ids</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>it-&gt;<ref refid="structie__batcher__item__t_1a0415c395810297f906e8a6757d9ad425" kindref="member">status</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>it-&gt;<ref refid="structie__batcher__item__t_1a29bbd077e2e4a2c0e8fad18a2a8ae7cd" kindref="member">prompt</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Producer<sp/>side<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="ie__batcher_8c_1a691ff39201d7e90e9808bf7f5ddb2cb8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a691ff39201d7e90e9808bf7f5ddb2cb8" kindref="member">pop_next</ref>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*out_idx)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" kindref="member">produced</ref><sp/>&lt;<sp/>b-&gt;<ref refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" kindref="member">n_prompts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>*out_idx<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" kindref="member">produced</ref>++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1a44d6005b526564d22fb886e27821bf62" kindref="member">produced</ref><sp/>==<sp/>b-&gt;<ref refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" kindref="member">n_prompts</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" kindref="member">producer_done</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="ie__batcher_8c_1a9475e6883ae67815581f9573b97d2148" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a9475e6883ae67815581f9573b97d2148" kindref="member">enqueue_item</ref>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref><sp/>*it)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref><sp/>==<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref><sp/>&amp;&amp;<sp/>!b-&gt;<ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;b-&gt;<ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>,<sp/>&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b-&gt;<ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>[b-&gt;<ref refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" kindref="member">w</ref>]<sp/>=<sp/>*it;<sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>copy;<sp/>moves<sp/>pointer<sp/>ownership<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" kindref="member">w</ref><sp/>=<sp/>(b-&gt;<ref refid="structie__batcher_1a804cd0a8962633e95e2916a86e2d41dd" kindref="member">w</ref><sp/>+<sp/>1)<sp/>%<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref>++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_signal(&amp;b-&gt;<ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it-&gt;<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)it-&gt;<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" kindref="member">worker_main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b<sp/>=<sp/>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref>*)arg;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="ie__batcher_8c_1a691ff39201d7e90e9808bf7f5ddb2cb8" kindref="member">pop_next</ref>(b,<sp/>&amp;idx))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref><sp/>it;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;it,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(it));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="structie__batcher__item__t_1a29bbd077e2e4a2c0e8fad18a2a8ae7cd" kindref="member">prompt</ref><sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" kindref="member">prompts</ref>[idx];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>*ids<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>st<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1a206c1683ca1028598ab358c226900796" kindref="member">tokenize</ref>(it.<ref refid="structie__batcher__item__t_1a29bbd077e2e4a2c0e8fad18a2a8ae7cd" kindref="member">prompt</ref>,<sp/>&amp;ids,<sp/>&amp;n,<sp/>b-&gt;<ref refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" kindref="member">user_ctx</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="structie__batcher__item__t_1a3e5c291bf7f461870e8f25d1834ef408" kindref="member">ids</ref><sp/>=<sp/>ids;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="structie__batcher__item__t_1a6fa5aa6d85ddca6b90125464f1332626" kindref="member">n_ids</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>it.<ref refid="structie__batcher__item__t_1a0415c395810297f906e8a6757d9ad425" kindref="member">status</ref><sp/>=<sp/>st;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ie__batcher_8c_1a9475e6883ae67815581f9573b97d2148" kindref="member">enqueue_item</ref>(b,<sp/>&amp;it);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Public<sp/>API<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="ie__batcher_8h_1ab201d312c4f0fa59e31e99e221bd71f6" refkind="member"><highlight class="normal"><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*<ref refid="ie__batcher_8c_1ab201d312c4f0fa59e31e99e221bd71f6" kindref="member">ie_batcher_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**prompts,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_prompts,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>microbatch,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>queue_capacity,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>n_workers,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ie__batcher_8h_1ac560ca29a3e380a92c75ed941f2bfdbe" kindref="member">ie_batcher_tokenize_fn</ref><sp/>tokenize_cb,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_ctx)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>(void)n_workers;<sp/></highlight><highlight class="comment">/*<sp/>determinism:<sp/>always<sp/>1<sp/>producer<sp/>thread<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!prompts<sp/>||<sp/>n_prompts<sp/>==<sp/>0<sp/>||<sp/>!tokenize_cb)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue_capacity<sp/>==<sp/>0)<sp/>queue_capacity<sp/>=<sp/>microbatch<sp/>?<sp/>microbatch<sp/>:<sp/>8;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b<sp/>=<sp/>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref>*)<ref refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" kindref="member">xcalloc</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1aae1727714bdd5df07625bd6c6099db09" kindref="member">prompts</ref><sp/>=<sp/>prompts;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a66273bd78b7aa9abc1bbc175b9e9d567" kindref="member">n_prompts</ref><sp/>=<sp/>n_prompts;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" kindref="member">microbatch</ref><sp/>=<sp/>microbatch<sp/>?<sp/>microbatch<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref><sp/>=<sp/>queue_capacity;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref><sp/>=<sp/>(<ref refid="structie__batcher__item__t" kindref="compound">ie_batcher_item_t</ref>*)<ref refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" kindref="member">xcalloc</ref>(b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>)<sp/>{<sp/>free(b);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>pthread_mutex_init(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>pthread_cond_init(&amp;b-&gt;<ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>pthread_cond_init(&amp;b-&gt;<ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a206c1683ca1028598ab358c226900796" kindref="member">tokenize</ref><sp/>=<sp/>tokenize_cb;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1ac168939e040aad22b182fef1a908fdb2" kindref="member">user_ctx</ref><sp/>=<sp/>user_ctx;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" kindref="member">n_workers</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref><sp/>=<sp/>(pthread_t*)<ref refid="ie__batcher_8c_1a981c4f4b5894b549eb0b2f0358810c67" kindref="member">xcalloc</ref>(b-&gt;<ref refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" kindref="member">n_workers</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pthread_t));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_create(&amp;b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>[0],<sp/>NULL,<sp/><ref refid="ie__batcher_8c_1ab50c928126740940413626fd7ab7ce72" kindref="member">worker_main</ref>,<sp/>b)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>free(b);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="ie__batcher_8h_1a6dfb3b0fad4a7c1271d86da06649236f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a6dfb3b0fad4a7c1271d86da06649236f" kindref="member">ie_batcher_get</ref>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b,<sp/><ref refid="ie__batcher_8h_1a95ad6e20e6851edda314f06421b90b0f" kindref="member">ie_batcher_view_t</ref><sp/>*out_view)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b<sp/>||<sp/>!out_view)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!b-&gt;<ref refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" kindref="member">producer_done</ref><sp/>&amp;&amp;<sp/>!b-&gt;<ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_cond_wait(&amp;b-&gt;<ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>,<sp/>&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(b-&gt;<ref refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" kindref="member">producer_done</ref><sp/>||<sp/>b-&gt;<ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref>))<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1a209b9ec614bb4622c1bb58e2e3a9e979" kindref="member">items</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1a2efe82b85f967469f6f22777eb739f2d" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1acc236db8ff60ecd7bf003b5e3c2f29e8" kindref="member">done</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>avail<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>can_take<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1a6634ddc5b22f958c4a965030d33ea01d" kindref="member">microbatch</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(can_take<sp/>&gt;<sp/>avail)<sp/>can_take<sp/>=<sp/>avail;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Return<sp/>a<sp/>contiguous<sp/>tail<sp/>segment<sp/>only<sp/>(no<sp/>wrap<sp/>across<sp/>r-&gt;end).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tail<sp/>=<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref><sp/>-<sp/>first;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(can_take<sp/>&gt;<sp/>tail)<sp/>can_take<sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1a209b9ec614bb4622c1bb58e2e3a9e979" kindref="member">items</ref><sp/>=<sp/>&amp;b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>[first];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1a2efe82b85f967469f6f22777eb739f2d" kindref="member">count</ref><sp/>=<sp/>can_take;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>out_view-&gt;<ref refid="structie__batcher__view_1acc236db8ff60ecd7bf003b5e3c2f29e8" kindref="member">done</ref><sp/>=<sp/>(b-&gt;<ref refid="structie__batcher_1a5da8fcc389db0f782f507b934397f13c" kindref="member">producer_done</ref><sp/>&amp;&amp;<sp/>(b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref><sp/>==<sp/>can_take));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="ie__batcher_8h_1a32c4149e9889f52a2eb339131ecc38dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a32c4149e9889f52a2eb339131ecc38dc" kindref="member">ie_batcher_advance</ref>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_consumed)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b<sp/>||<sp/>n_consumed<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_consumed;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(b-&gt;<ref refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" kindref="member">r</ref><sp/>+<sp/>i)<sp/>%<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" kindref="member">clear_item</ref>(&amp;b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>[idx]);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" kindref="member">r</ref><sp/>=<sp/>(b-&gt;<ref refid="structie__batcher_1afc91dc7b95574b4fd89796fdf65473e3" kindref="member">r</ref><sp/>+<sp/>n_consumed)<sp/>%<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1af3eb137ebe601d71c94b345d9d7e97a0" kindref="member">size</ref><sp/>-=<sp/>n_consumed;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>pthread_cond_signal(&amp;b-&gt;<ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="ie__batcher_8h_1a606dcb56c138607d9b0d77948d8b48b9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__batcher_8c_1a606dcb56c138607d9b0d77948d8b48b9" kindref="member">ie_batcher_destroy</ref>(<ref refid="ie__batcher_8h_1a23fde82b750e5e9b50ab7007f35cf042" kindref="member">ie_batcher_t</ref><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!b)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/>pthread_mutex_lock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structie__batcher_1a242cb22d24bf957c272419a23f8de079" kindref="member">stop</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>pthread_cond_broadcast(&amp;b-&gt;<ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>pthread_cond_broadcast(&amp;b-&gt;<ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>pthread_mutex_unlock(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>b-&gt;<ref refid="structie__batcher_1a239b1f5bb428b7f4510c36afa720047d" kindref="member">n_workers</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>[i])<sp/>pthread_join(b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>[i],<sp/>NULL);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Free<sp/>any<sp/>remaining<sp/>items<sp/>in<sp/>the<sp/>ring.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>b-&gt;<ref refid="structie__batcher_1ac2f4af97d8d4f160c54add4793beae00" kindref="member">cap</ref>;<sp/>++i)<sp/><ref refid="ie__batcher_8c_1a6b929aafa08b7ff2b55984965517f8cc" kindref="member">clear_item</ref>(&amp;b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>[i]);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>pthread_cond_destroy(&amp;b-&gt;<ref refid="structie__batcher_1a87540ee2e8097ba46efe82af0ce1d3c5" kindref="member">cv_not_full</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>pthread_cond_destroy(&amp;b-&gt;<ref refid="structie__batcher_1a599d1e40ff4b757a3811f6494e07ea63" kindref="member">cv_not_empty</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>pthread_mutex_destroy(&amp;b-&gt;<ref refid="structie__batcher_1af9832623e01b36b40b66f1807c150053" kindref="member">mu</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>free(b-&gt;<ref refid="structie__batcher_1a00a6e55bc22a6b6fdda4d5f164ea7759" kindref="member">threads</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>free(b-&gt;<ref refid="structie__batcher_1a862ac941b8747e72ad52afb521f4969f" kindref="member">ring</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>free(b);</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="engine/src/io/ie_batcher.c"/>
  </compounddef>
</doxygen>
