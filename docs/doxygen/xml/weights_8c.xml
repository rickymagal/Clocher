<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="weights_8c" kind="file" language="C++">
    <compoundname>weights.c</compoundname>
    <includes refid="ie__io_8h" local="yes">ie_io.h</includes>
    <includes refid="ie__quant__int4_8h" local="yes">ie_quant_int4.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sys/stat.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">unistd.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ie_io.h</label>
        <link refid="ie__io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ie_quant_int4.h</label>
        <link refid="ie__quant__int4_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/io/weights.c</label>
        <link refid="weights_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ctype.h</label>
      </node>
      <node id="7">
        <label>errno.h</label>
      </node>
      <node id="8">
        <label>fcntl.h</label>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>sys/stat.h</label>
      </node>
      <node id="13">
        <label>sys/types.h</label>
      </node>
      <node id="14">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structie__int4__quant__meta" prot="public">ie_int4_quant_meta</innerclass>
    <sectiondef kind="define">
      <memberdef kind="define" id="weights_8c_1a3024ccd4a9af5109d24e6c57565d74a1" prot="public" static="no">
        <name>_POSIX_C_SOURCE</name>
        <initializer>200809L</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="32" column="9" bodyfile="engine/src/io/weights.c" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="weights_8c_1ae3307b59271742c37862abf0b9698d23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cpyz</definition>
        <argsstring>(char *dst, size_t dstsz, const char *src)</argsstring>
        <name>cpyz</name>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="57" column="13" bodyfile="engine/src/io/weights.c" bodystart="57" bodyend="64"/>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
        <referencedby refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" compoundref="weights_8c" startline="81" endline="107">join_path</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>static const char * last_slash</definition>
        <argsstring>(const char *p)</argsstring>
        <name>last_slash</name>
        <param>
          <type>const char *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="70" column="19" bodyfile="engine/src/io/weights.c" bodystart="70" bodyend="75"/>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void join_path</definition>
        <argsstring>(char *out, size_t outsz, const char *dir, const char *file)</argsstring>
        <name>join_path</name>
        <param>
          <type>char *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outsz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="81" column="13" bodyfile="engine/src/io/weights.c" bodystart="81" bodyend="107"/>
        <references refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" compoundref="weights_8c" startline="57" endline="64">cpyz</references>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int read_all_text</definition>
        <argsstring>(const char *path, char **buf, size_t *len_out)</argsstring>
        <name>read_all_text</name>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>len_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="114" column="12" bodyfile="engine/src/io/weights.c" bodystart="114" bodyend="147"/>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a5c6ba72035c0c5110c91879350c8647f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int scan_json_key_int</definition>
        <argsstring>(const char *json, const char *key, int *out_val)</argsstring>
        <name>scan_json_key_int</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="154" column="12" bodyfile="engine/src/io/weights.c" bodystart="154" bodyend="172"/>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a3c438658d11f74ba4af8273c7e390311" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int scan_json_key_string</definition>
        <argsstring>(const char *json, const char *key, char *dst, size_t dstsz)</argsstring>
        <name>scan_json_key_string</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="179" column="12" bodyfile="engine/src/io/weights.c" bodystart="179" bodyend="204"/>
        <referencedby refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" compoundref="weights_8c" startline="326" endline="381">ie_weights_open</referencedby>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a853d256b28c7e6c404c035fc1a16a454" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int scan_json_object_range</definition>
        <argsstring>(const char *json, const char *key, const char **out_begin, const char **out_end)</argsstring>
        <name>scan_json_object_range</name>
        <param>
          <type>const char *</type>
          <declname>json</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_begin</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>out_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="212" column="12" bodyfile="engine/src/io/weights.c" bodystart="212" bodyend="248"/>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int scan_json_key_string_in_range</definition>
        <argsstring>(const char *begin, const char *end, const char *key, char *dst, size_t dstsz)</argsstring>
        <name>scan_json_key_string_in_range</name>
        <param>
          <type>const char *</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>dstsz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="255" column="12" bodyfile="engine/src/io/weights.c" bodystart="255" bodyend="287"/>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ssize_t</type>
        <definition>static ssize_t ie_pread</definition>
        <argsstring>(int fd, void *buf, size_t count, off_t offset)</argsstring>
        <name>ie_pread</name>
        <param>
          <type>int</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>off_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="293" column="16" bodyfile="engine/src/io/weights.c" bodystart="293" bodyend="304"/>
        <referencedby refid="weights_8c_1ab5498f6122af51af9b673e87a4049d19" compoundref="weights_8c" startline="522" endline="577">ie_weights_decode_int4</referencedby>
        <referencedby refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" compoundref="weights_8c" startline="386" endline="402">ie_weights_touch</referencedby>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ascii_ieq</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>ascii_ieq</name>
        <param>
          <type>const char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="310" column="12" bodyfile="engine/src/io/weights.c" bodystart="310" bodyend="317"/>
        <referencedby refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" compoundref="weights_8c" startline="439" endline="504">ie_weights_read_int4_meta</referencedby>
      </memberdef>
      <member refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" kind="function"><name>ie_weights_open</name></member>
      <member refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" kind="function"><name>ie_weights_touch</name></member>
      <member refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kind="function"><name>ie_weights_close</name></member>
      <memberdef kind="function" id="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_weights_read_int4_meta</definition>
        <argsstring>(const char *json_path, struct ie_int4_quant_meta *out_meta)</argsstring>
        <name>ie_weights_read_int4_meta</name>
        <param>
          <type>const char *</type>
          <declname>json_path</declname>
        </param>
        <param>
          <type>struct <ref refid="structie__int4__quant__meta" kindref="compound">ie_int4_quant_meta</ref> *</type>
          <declname>out_meta</declname>
        </param>
        <briefdescription>
<para>Read INT4 quantization metadata from an IEBIN v1 JSON header. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>json_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to <computeroutput>model.ie.json</computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_meta</parametername>
</parameternamelist>
<parameterdescription>
<para>Output metadata (must be non-NULL). On success, <computeroutput>out_meta-&gt;present</computeroutput> is 1 when INT4 metadata is found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref> on success (even if no INT4 meta is present), or an ::IE_IO_ERR_* code on I/O/parse errors. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="439" column="5" bodyfile="engine/src/io/weights.c" bodystart="439" bodyend="504"/>
        <references refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" compoundref="weights_8c" startline="310" endline="317">ascii_ieq</references>
        <references refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" compoundref="weights_8c" startline="57" endline="64">cpyz</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" compoundref="ie__io_8h" startline="59">IE_IO_ERR_ARGS</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa02b300fcfbce31fe86de69090fc9fa9" compoundref="ie__io_8h" startline="62">IE_IO_ERR_JSON</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" compoundref="ie__io_8h" startline="56">IE_IO_OK</references>
        <references refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" compoundref="weights_8c" startline="81" endline="107">join_path</references>
        <references refid="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" compoundref="weights_8c" startline="70" endline="75">last_slash</references>
        <references refid="structie__int4__quant__meta_1adeb7b1901e92a823af56d42dae1147b0" compoundref="weights_8c" startline="426">ie_int4_quant_meta::pack</references>
        <references refid="structie__int4__quant__meta_1a6918c5b7cb00dd889721e7a1aacc6b08" compoundref="weights_8c" startline="424">ie_int4_quant_meta::per_row</references>
        <references refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" compoundref="weights_8c" startline="423">ie_int4_quant_meta::present</references>
        <references refid="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" compoundref="weights_8c" startline="114" endline="147">read_all_text</references>
        <references refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" compoundref="weights_8c" startline="425">ie_int4_quant_meta::scale_bin</references>
        <references refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" compoundref="weights_8c" startline="179" endline="204">scan_json_key_string</references>
        <references refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" compoundref="weights_8c" startline="255" endline="287">scan_json_key_string_in_range</references>
        <references refid="weights_8c_1a853d256b28c7e6c404c035fc1a16a454" compoundref="weights_8c" startline="212" endline="248">scan_json_object_range</references>
        <references refid="structie__int4__quant__meta_1aa2a921c71c764707779cdd81f1f4af23" compoundref="weights_8c" startline="428">ie_int4_quant_meta::symmetric</references>
        <references refid="structie__int4__quant__meta_1a23f6a4c7d61a82f01525e0af1648949f" compoundref="weights_8c" startline="427">ie_int4_quant_meta::zero_point</references>
      </memberdef>
      <memberdef kind="function" id="weights_8c_1ab5498f6122af51af9b673e87a4049d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_weights_decode_int4</definition>
        <argsstring>(const char *packed_path, const char *scales_path, size_t rows, size_t cols, int per_row, float *dst)</argsstring>
        <name>ie_weights_decode_int4</name>
        <param>
          <type>const char *</type>
          <declname>packed_path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>scales_path</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>per_row</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
<para>Dequantize a packed INT4 weight blob into a float32 matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Reads the packed INT4 blob and the associated scales from disk and produces a row-major float32 matrix into <computeroutput>dst</computeroutput> (caller-allocated).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packed_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to packed INT4 weights (<computeroutput>*.int4.bin</computeroutput>). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scales_path</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to scales file. For per-tensor it must contain a single float32; for per-row it must contain <computeroutput>rows</computeroutput> float32 values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of matrix rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of matrix columns. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>per_row</parametername>
</parameternamelist>
<parameterdescription>
<para>Non-zero for per-row scales; 0 for per-tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Output buffer (length = rows*cols floats). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref> on success, or an ::IE_IO_ERR_* code on failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/io/weights.c" line="522" column="5" bodyfile="engine/src/io/weights.c" bodystart="522" bodyend="577"/>
        <references refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" compoundref="int4__ptq_8c" startline="206" endline="238">ie_int4_dequantize_per_row</references>
        <references refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" compoundref="int4__ptq_8c" startline="136" endline="165">ie_int4_dequantize_per_tensor</references>
        <references refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" compoundref="int4__ptq_8c" startline="69" endline="71">ie_int4_rowbytes</references>
        <references refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" compoundref="ie__quant__int4_8h" startline="71">IE_INT4_STATUS_OK</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a215c4a31864749ed0fce240433824032" compoundref="ie__io_8h" startline="77">IE_IO_ERR_ALLOC</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" compoundref="ie__io_8h" startline="59">IE_IO_ERR_ARGS</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a9b079e5c6f78861150a9bc91623d8c42" compoundref="ie__io_8h" startline="80">IE_IO_ERR_DECODE</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aba0321da4352c7a61ea1bda842bb64d0" compoundref="ie__io_8h" startline="71">IE_IO_ERR_OPEN</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" compoundref="ie__io_8h" startline="74">IE_IO_ERR_READ</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a82517853bf5084320fad8c88f67d29bb" compoundref="ie__io_8h" startline="68">IE_IO_ERR_STAT</references>
        <references refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" compoundref="ie__io_8h" startline="56">IE_IO_OK</references>
        <references refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" compoundref="weights_8c" startline="293" endline="304">ie_pread</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Implementation of the IEBIN v1 loader with relaxed JSON parsing. </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="weights_8c_1autotoc_md45_1s1"><sect2 id="weights_8c_1autotoc_md45">
<title>Design Goals</title><para><itemizedlist>
<listitem><para>Zero third-party dependencies (plain C, no JSON libraries).</para>
</listitem><listitem><para>Resilient scanning (tolerate extra whitespace/fields).</para>
</listitem><listitem><para>Safety with -Werror (no unsafe formatting, careful bounds checking).</para>
</listitem><listitem><para>Clarity (straight-line code with explicit pre/post-conditions).</para>
</listitem></itemizedlist>
</para>
<para>This module extracts minimal header info from <computeroutput>model.ie.json</computeroutput> and resolves the path to <computeroutput>model.ie.bin</computeroutput>. It also exposes a small <ref refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" kindref="member">ie_weights_touch()</ref> routine to validate OS-level readability and optionally warm caches.</para>
<sect3 id="weights_8c_1autotoc_md46">
<title>INT4 weight-only helpers (exploratory)</title><para>Additional helpers are provided to discover and decode INT4 weight-only metadata from the JSON header and to dequantize packed INT4 blobs into float32 matrices. These helpers are not part of the public <computeroutput><ref refid="ie__io_8h" kindref="compound">ie_io.h</ref></computeroutput> API yet; they are provided here to enable incremental integration without changing headers:<itemizedlist>
<listitem><para><ref refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" kindref="member">ie_weights_read_int4_meta</ref></para>
</listitem><listitem><para><ref refid="weights_8c_1ab5498f6122af51af9b673e87a4049d19" kindref="member">ie_weights_decode_int4</ref></para>
</listitem></itemizedlist>
</para>
<para>The decoding helpers depend on <computeroutput><ref refid="ie__quant__int4_8h" kindref="compound">ie_quant_int4.h</ref></computeroutput> for packing rules and dequantization routines. </para>
</sect3>
</sect2></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File:<sp/>engine/src/io/weights.c<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_POSIX_C_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="weights_8c_1a3024ccd4a9af5109d24e6c57565d74a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_C_SOURCE<sp/>200809L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__io_8h" kindref="compound">ie_io.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ie_weights_t,<sp/>IE_IO_*<sp/>status<sp/>codes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__quant__int4_8h" kindref="compound">ie_quant_int4.h</ref>&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>INT4<sp/>quant<sp/>packing/dequant<sp/>helpers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tolower<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/stat.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Small<sp/>helpers<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dstsz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*src)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dst<sp/>||<sp/>dstsz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!src)<sp/>{<sp/>dst[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>strlen(src);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>dstsz)<sp/>n<sp/>=<sp/>dstsz<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>memcpy(dst,<sp/>src,<sp/>n);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>dst[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" kindref="member">last_slash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>p;<sp/>*q;<sp/>++q)<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>s<sp/>=<sp/>q;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" kindref="member">join_path</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*out,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outsz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dir,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out<sp/>||<sp/>outsz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>out[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file<sp/>||<sp/>!*file)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir<sp/>||<sp/>!*dir)<sp/>{<sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out,<sp/>outsz,<sp/>file);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ld<sp/>=<sp/>strlen(dir);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>lf<sp/>=<sp/>strlen(file);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>need_slash<sp/>=<sp/>(ld<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>dir[ld<sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>copyd<sp/>=<sp/>ld;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyd<sp/>&gt;=<sp/>outsz)<sp/>copyd<sp/>=<sp/>outsz<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyd<sp/>&gt;<sp/>0)<sp/>{<sp/>memcpy(out<sp/>+<sp/>pos,<sp/>dir,<sp/>copyd);<sp/>pos<sp/>+=<sp/>copyd;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>outsz<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>need_slash)<sp/>{<sp/>out[pos++]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&lt;<sp/>outsz<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>room<sp/>=<sp/>(outsz<sp/>-<sp/>1)<sp/>-<sp/>pos;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>copyf<sp/>=<sp/>(lf<sp/>&gt;<sp/>room)<sp/>?<sp/>room<sp/>:<sp/>lf;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copyf<sp/>&gt;<sp/>0)<sp/>{<sp/>memcpy(out<sp/>+<sp/>pos,<sp/>file,<sp/>copyf);<sp/>pos<sp/>+=<sp/>copyf;<sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>out[pos]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" kindref="member">read_all_text</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*len_out)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!path<sp/>||<sp/>!buf)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>*buf<sp/>=<sp/>NULL;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len_out)<sp/>*len_out<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>FILE<sp/>*f<sp/>=<sp/>fopen(path,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(f,<sp/>0,<sp/>SEEK_END)<sp/>!=<sp/>0)<sp/>{<sp/>fclose(f);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>ftell(f);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{<sp/>fclose(f);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fseek(f,<sp/>0,<sp/>SEEK_SET)<sp/>!=<sp/>0)<sp/>{<sp/>fclose(f);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-3;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>(size_t)n;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mem<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(size<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mem)<sp/>{<sp/>fclose(f);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-4;<sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rd<sp/>=<sp/>fread(mem,<sp/>1,<sp/>size,<sp/>f);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rd<sp/>!=<sp/>size)<sp/>{<sp/>free(mem);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-5;<sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Strip<sp/>UTF-8<sp/>BOM<sp/>if<sp/>present<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/>3<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)mem[0]<sp/>==<sp/>0xEF<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)mem[1]<sp/>==<sp/>0xBB<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)mem[2]<sp/>==<sp/>0xBF)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove(mem,<sp/>mem<sp/>+<sp/>3,<sp/>size);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>mem[size]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>*buf<sp/>=<sp/>mem;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len_out)<sp/>*len_out<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="weights_8c_1a5c6ba72035c0c5110c91879350c8647f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a5c6ba72035c0c5110c91879350c8647f" kindref="member">scan_json_key_int</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*out_val)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json<sp/>||<sp/>!key<sp/>||<sp/>!out_val)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>json;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>klen<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>strstr(p,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(p,<sp/>key,<sp/>klen)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>p[klen]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>p<sp/>+<sp/>klen<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>strtol(c,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&amp;&amp;<sp/>end<sp/>!=<sp/>c)<sp/>{<sp/>*out_val<sp/>=<sp/>(int)v;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" kindref="member">scan_json_key_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dstsz)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json<sp/>||<sp/>!key<sp/>||<sp/>!dst<sp/>||<sp/>dstsz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>dst[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>json;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>klen<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>strstr(p,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(p,<sp/>key,<sp/>klen)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>p[klen]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>p<sp/>+<sp/>klen<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(size_t)(c<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>dstsz)<sp/>n<sp/>=<sp/>dstsz<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dst,<sp/>start,<sp/>n);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="weights_8c_1a853d256b28c7e6c404c035fc1a16a454" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a853d256b28c7e6c404c035fc1a16a454" kindref="member">scan_json_object_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_begin,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**out_end)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json<sp/>||<sp/>!key<sp/>||<sp/>!out_begin<sp/>||<sp/>!out_end)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>*out_begin<sp/>=<sp/>*out_end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>klen<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>json;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((p<sp/>=<sp/>strstr(p,<sp/></highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>++p;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(p,<sp/>key,<sp/>klen)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>p[klen]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>p<sp/>+<sp/>klen<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scan<sp/>balanced<sp/>braces<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start<sp/>=<sp/>c<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q<sp/>==<sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">)<sp/>++depth;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*q<sp/>==<sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">)<sp/>--depth;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++q;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*q<sp/>&amp;&amp;<sp/>depth<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_begin<sp/>=<sp/>start;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_end<sp/><sp/><sp/>=<sp/>q<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>position<sp/>of<sp/>&apos;}&apos;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*begin,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dst,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dstsz)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!begin<sp/>||<sp/>!end<sp/>||<sp/>!key<sp/>||<sp/>!dst<sp/>||<sp/>dstsz<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>dst[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>klen<sp/>=<sp/>strlen(key);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>begin;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*q<sp/>=<sp/>memchr(p,<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(end<sp/>-<sp/>p));</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!q)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>++q;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(end<sp/>-<sp/>q)<sp/>&gt;=<sp/>klen<sp/>&amp;&amp;<sp/>memcmp(q,<sp/>key,<sp/>klen)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>q[klen]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/>q<sp/>+<sp/>klen<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">))<sp/>++c;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>end<sp/>||<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">)<sp/>{<sp/>p<sp/>=<sp/>q<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>(*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>||<sp/>*c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">))<sp/>++c;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>end<sp/>||<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>{<sp/>p<sp/>=<sp/>q<sp/>+<sp/>1;<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++c;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>end<sp/>&amp;&amp;<sp/>*c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">)<sp/>++c;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(size_t)(c<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/>dstsz)<sp/>n<sp/>=<sp/>dstsz<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dst,<sp/>start,<sp/>n);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst[n]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>q<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ssize_t<sp/><ref refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" kindref="member">ie_pread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/>off_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_XOPEN_SOURCE)<sp/>||<sp/>defined(_POSIX_C_SOURCE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pread(fd,<sp/>buf,<sp/>count,<sp/>offset);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>off_t<sp/>cur<sp/>=<sp/>lseek(fd,<sp/>0,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur<sp/>==<sp/>(off_t)-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lseek(fd,<sp/>offset,<sp/>SEEK_SET)<sp/>==<sp/>(off_t)-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>ssize_t<sp/>r<sp/>=<sp/>read(fd,<sp/>buf,<sp/>count);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>(void)lseek(fd,<sp/>cur,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!a<sp/>||<sp/>!b)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*a<sp/>&amp;&amp;<sp/>*b)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)tolower(*a)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)tolower(*b))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>++a;<sp/>++b;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*a<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*b<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Public<sp/>IEBIN<sp/>v1<sp/>loader<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__weights_1ga522dac028ee37aae1307ffdb6d65ec1d" kindref="member">ie_weights_open</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bin_path,<sp/><ref refid="group__ie__io__weights_1gaf68ad3cdc2eb244fe4feed94372d7806" kindref="member">ie_weights_t</ref><sp/>*out)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!out)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" kindref="member">IE_IO_ERR_ARGS</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>memset(out,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json_path<sp/>||<sp/>!*json_path)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" kindref="member">IE_IO_ERR_ARGS</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out-&gt;<ref refid="structie__weights__s_1a6d4bef9e704edd817ee473eb2685cdd4" kindref="member">json_path</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out-&gt;<ref refid="structie__weights__s_1a6d4bef9e704edd817ee473eb2685cdd4" kindref="member">json_path</ref>),<sp/>json_path);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>JSON<sp/>text<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jbuf<sp/>=<sp/>NULL;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" kindref="member">read_all_text</ref>(json_path,<sp/>&amp;jbuf,<sp/>&amp;jlen)<sp/>!=<sp/>0<sp/>||<sp/>!jbuf<sp/>||<sp/>jlen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa02b300fcfbce31fe86de69090fc9fa9" kindref="member">IE_IO_ERR_JSON</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parse<sp/>relaxed<sp/>header<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ver<sp/>=<sp/>0;<sp/>(void)<ref refid="weights_8c_1a5c6ba72035c0c5110c91879350c8647f" kindref="member">scan_json_key_int</ref>(jbuf,<sp/></highlight><highlight class="stringliteral">&quot;version&quot;</highlight><highlight class="normal">,<sp/>&amp;ver);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ver<sp/>&lt;=<sp/>0)<sp/>ver<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>out-&gt;<ref refid="structie__weights__s_1ae12c1b3b426321f6ba604f0a89673315" kindref="member">version</ref><sp/>=<sp/>ver;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dtype[16];<sp/>dtype[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" kindref="member">scan_json_key_string</ref>(jbuf,<sp/></highlight><highlight class="stringliteral">&quot;dtype&quot;</highlight><highlight class="normal">,<sp/>dtype,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dtype));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dtype[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>strcpy(dtype,<sp/></highlight><highlight class="stringliteral">&quot;float32&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out-&gt;<ref refid="structie__weights__s_1aaedc444c52d256720c4b4099604206a4" kindref="member">dtype</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out-&gt;<ref refid="structie__weights__s_1aaedc444c52d256720c4b4099604206a4" kindref="member">dtype</ref>),<sp/>dtype);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>weights<sp/>path<sp/>(absolute<sp/>or<sp/>relative<sp/>to<sp/>JSON<sp/>dir)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>resolved_bin[512];<sp/>resolved_bin[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_path<sp/>&amp;&amp;<sp/>*bin_path)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(resolved_bin,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resolved_bin),<sp/>bin_path);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bin_key[256];<sp/>bin_key[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)<ref refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" kindref="member">scan_json_key_string</ref>(jbuf,<sp/></highlight><highlight class="stringliteral">&quot;bin&quot;</highlight><highlight class="normal">,<sp/>bin_key,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bin_key));</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bin_key[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{<sp/>free(jbuf);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a66046f2226981286e47bb2f33ab56862" kindref="member">IE_IO_ERR_BIN_UNSPEC</ref>;<sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*slash<sp/>=<sp/><ref refid="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" kindref="member">last_slash</ref>(json_path);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slash)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir[512];<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dn<sp/>=<sp/>(size_t)(slash<sp/>-<sp/>json_path);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dn<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dir))<sp/>dn<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dir)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dir,<sp/>json_path,<sp/>dn);<sp/>dir[dn]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" kindref="member">join_path</ref>(resolved_bin,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resolved_bin),<sp/>dir,<sp/>bin_key);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(resolved_bin,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(resolved_bin),<sp/>bin_key);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out-&gt;<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out-&gt;<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>),<sp/>resolved_bin);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Stat<sp/>the<sp/>weights<sp/>file<sp/>to<sp/>get<sp/>its<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>st;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stat(out-&gt;<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>,<sp/>&amp;st)<sp/>!=<sp/>0<sp/>||<sp/>st.st_size<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>free(jbuf);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a82517853bf5084320fad8c88f67d29bb" kindref="member">IE_IO_ERR_STAT</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>out-&gt;<ref refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" kindref="member">bin_size_bytes</ref><sp/>=<sp/>(size_t)st.st_size;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>out-&gt;<ref refid="structie__weights__s_1a0e365369fa9f9920eda71bd9be50c5bb" kindref="member">loaded</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>free(jbuf);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__weights_1ga095d7f59c4cba2b530bac039bca8b7a9" kindref="member">ie_weights_touch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__weights_1gaf68ad3cdc2eb244fe4feed94372d7806" kindref="member">ie_weights_t</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!w<sp/>||<sp/>!w-&gt;<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>[0])<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" kindref="member">IE_IO_ERR_ARGS</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fd<sp/>=<sp/>open(w-&gt;<ref refid="structie__weights__s_1ab6a61099d0af4a47854d02dc4fef5b8f" kindref="member">weights_path</ref>,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fd<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aba0321da4352c7a61ea1bda842bb64d0" kindref="member">IE_IO_ERR_OPEN</ref>;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[4096];</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>ssize_t<sp/>r1<sp/>=<sp/><ref refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" kindref="member">ie_pread</ref>(fd,<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/>0);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>ssize_t<sp/>r2<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w-&gt;<ref refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" kindref="member">bin_size_bytes</ref><sp/>&gt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf))<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>off_t<sp/>off<sp/>=<sp/>(off_t)(w-&gt;<ref refid="structie__weights__s_1a19f9137cca00113908b495a70769805e" kindref="member">bin_size_bytes</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>r2<sp/>=<sp/><ref refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" kindref="member">ie_pread</ref>(fd,<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf),<sp/>off);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>close(fd);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r1<sp/>&lt;<sp/>0<sp/>||<sp/>r2<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" kindref="member">IE_IO_ERR_READ</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__weights_1ga06c2b7e35d1f82a11e4605e23a1976f5" kindref="member">ie_weights_close</ref>(<ref refid="group__ie__io__weights_1gaf68ad3cdc2eb244fe4feed94372d7806" kindref="member">ie_weights_t</ref><sp/>*w)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>(void)w;<sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>a<sp/>no-op<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INT4<sp/>weight-only<sp/>helpers<sp/>(exploratory;<sp/>not<sp/>yet<sp/>in<sp/>public<sp/>header)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="structie__int4__quant__meta" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structie__int4__quant__meta" kindref="compound">ie_int4_quant_meta</ref><sp/>{</highlight></codeline>
<codeline lineno="423" refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" kindref="member">present</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424" refid="structie__int4__quant__meta_1a6918c5b7cb00dd889721e7a1aacc6b08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structie__int4__quant__meta_1a6918c5b7cb00dd889721e7a1aacc6b08" kindref="member">per_row</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425" refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>[512];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="426" refid="structie__int4__quant__meta_1adeb7b1901e92a823af56d42dae1147b0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><ref refid="structie__int4__quant__meta_1adeb7b1901e92a823af56d42dae1147b0" kindref="member">pack</ref>[32];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="structie__int4__quant__meta_1a23f6a4c7d61a82f01525e0af1648949f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structie__int4__quant__meta_1a23f6a4c7d61a82f01525e0af1648949f" kindref="member">zero_point</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="428" refid="structie__int4__quant__meta_1aa2a921c71c764707779cdd81f1f4af23" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="structie__int4__quant__meta_1aa2a921c71c764707779cdd81f1f4af23" kindref="member">symmetric</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1a1c8fc195c7c1f4e503920578dbaf1d02" kindref="member">ie_weights_read_int4_meta</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*json_path,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structie__int4__quant__meta" kindref="compound">ie_int4_quant_meta</ref><sp/>*out_meta)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json_path<sp/>||<sp/>!out_meta)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" kindref="member">IE_IO_ERR_ARGS</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/>memset(out_meta,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*out_meta));</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>JSON<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*jbuf<sp/>=<sp/>NULL;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>jlen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weights_8c_1a7d467c1ab0baceed9b0fdad7b5a8accf" kindref="member">read_all_text</ref>(json_path,<sp/>&amp;jbuf,<sp/>&amp;jlen)<sp/>!=<sp/>0<sp/>||<sp/>!jbuf<sp/>||<sp/>jlen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa02b300fcfbce31fe86de69090fc9fa9" kindref="member">IE_IO_ERR_JSON</ref>;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>dtype<sp/>must<sp/>indicate<sp/>INT4/Q4<sp/>(root-level)<sp/>to<sp/>proceed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dtype[16];<sp/>dtype[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a3c438658d11f74ba4af8273c7e390311" kindref="member">scan_json_key_string</ref>(jbuf,<sp/></highlight><highlight class="stringliteral">&quot;dtype&quot;</highlight><highlight class="normal">,<sp/>dtype,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dtype));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(dtype,<sp/></highlight><highlight class="stringliteral">&quot;int4&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(dtype,<sp/></highlight><highlight class="stringliteral">&quot;q4&quot;</highlight><highlight class="normal">)<sp/>||<sp/><ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(dtype,<sp/></highlight><highlight class="stringliteral">&quot;mixed&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>free(jbuf);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" kindref="member">present</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Find<sp/>&quot;quant&quot;:<sp/>{<sp/>...<sp/>}<sp/>section<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*qb<sp/>=<sp/>NULL,<sp/>*qe<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="weights_8c_1a853d256b28c7e6c404c035fc1a16a454" kindref="member">scan_json_object_range</ref>(jbuf,<sp/></highlight><highlight class="stringliteral">&quot;quant&quot;</highlight><highlight class="normal">,<sp/>&amp;qb,<sp/>&amp;qe)<sp/>!=<sp/>1<sp/>||<sp/>!qb<sp/>||<sp/>!qe<sp/>||<sp/>qb<sp/>&gt;=<sp/>qe)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>free(jbuf);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" kindref="member">present</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;<sp/></highlight><highlight class="comment">/*<sp/>treat<sp/>as<sp/>missing<sp/>metadata<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Extract<sp/>fields<sp/>from<sp/>the<sp/>quant<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>per[32];<sp/>per[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(qb,<sp/>qe,<sp/></highlight><highlight class="stringliteral">&quot;per&quot;</highlight><highlight class="normal">,<sp/>per,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(per));</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a6918c5b7cb00dd889721e7a1aacc6b08" kindref="member">per_row</ref><sp/>=<sp/><ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(per,<sp/></highlight><highlight class="stringliteral">&quot;row&quot;</highlight><highlight class="normal">)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>scale_bin_rel[512];<sp/>scale_bin_rel[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(qb,<sp/>qe,<sp/></highlight><highlight class="stringliteral">&quot;scale_bin&quot;</highlight><highlight class="normal">,<sp/>scale_bin_rel,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(scale_bin_rel));</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pack[32];<sp/>pack[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(qb,<sp/>qe,<sp/></highlight><highlight class="stringliteral">&quot;pack&quot;</highlight><highlight class="normal">,<sp/>pack,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(pack));</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out_meta-&gt;<ref refid="structie__int4__quant__meta_1adeb7b1901e92a823af56d42dae1147b0" kindref="member">pack</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out_meta-&gt;<ref refid="structie__int4__quant__meta_1adeb7b1901e92a823af56d42dae1147b0" kindref="member">pack</ref>),<sp/>pack);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>zp_str[32];<sp/>zp_str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(qb,<sp/>qe,<sp/></highlight><highlight class="stringliteral">&quot;zp&quot;</highlight><highlight class="normal">,<sp/>zp_str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(zp_str));</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(zp_str[0])<sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a23f6a4c7d61a82f01525e0af1648949f" kindref="member">zero_point</ref><sp/>=<sp/>atoi(zp_str);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>sym_str[32];<sp/>sym_str[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>(void)<ref refid="weights_8c_1a110cc679cd45b43c11f22ba749bd0ea3" kindref="member">scan_json_key_string_in_range</ref>(qb,<sp/>qe,<sp/></highlight><highlight class="stringliteral">&quot;symmetric&quot;</highlight><highlight class="normal">,<sp/>sym_str,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sym_str));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sym_str[0])<sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1aa2a921c71c764707779cdd81f1f4af23" kindref="member">symmetric</ref><sp/>=<sp/>(<ref refid="weights_8c_1a72ab94aafe7740f1343d317daa89ca15" kindref="member">ascii_ieq</ref>(sym_str,<sp/></highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>||<sp/>strcmp(sym_str,<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Resolve<sp/>scale_bin<sp/>relative<sp/>to<sp/>JSON<sp/>directory<sp/>if<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(scale_bin_rel[0])<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*slash<sp/>=<sp/><ref refid="weights_8c_1a7415d89bc8bd657819e06ac0fc53da95" kindref="member">last_slash</ref>(json_path);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slash)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dir[512];<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dn<sp/>=<sp/>(size_t)(slash<sp/>-<sp/>json_path);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dn<sp/>&gt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dir))<sp/>dn<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(dir)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(dir,<sp/>json_path,<sp/>dn);<sp/>dir[dn]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weights_8c_1a7bb1dd9958b072fc5d1a80373cc074ff" kindref="member">join_path</ref>(out_meta-&gt;<ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out_meta-&gt;<ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>),<sp/>dir,<sp/>scale_bin_rel);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="weights_8c_1ae3307b59271742c37862abf0b9698d23" kindref="member">cpyz</ref>(out_meta-&gt;<ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(out_meta-&gt;<ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>),<sp/>scale_bin_rel);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a8e5938a2d01110bbf72153838467e52d" kindref="member">scale_bin</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>out_meta-&gt;<ref refid="structie__int4__quant__meta_1a2839df315edfb65fcad27e1974695650" kindref="member">present</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>free(jbuf);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="weights_8c_1ab5498f6122af51af9b673e87a4049d19" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="weights_8c_1ab5498f6122af51af9b673e87a4049d19" kindref="member">ie_weights_decode_int4</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*packed_path,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*scales_path,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>per_row,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dst)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!packed_path<sp/>||<sp/>!scales_path<sp/>||<sp/>!dst<sp/>||<sp/>rows<sp/>==<sp/>0<sp/>||<sp/>cols<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a579de46204c4454f99e9620965e58239" kindref="member">IE_IO_ERR_ARGS</ref>;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>packed<sp/>blob<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fdw<sp/>=<sp/>open(packed_path,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdw<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aba0321da4352c7a61ea1bda842bb64d0" kindref="member">IE_IO_ERR_OPEN</ref>;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>stw;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fstat(fdw,<sp/>&amp;stw)<sp/>!=<sp/>0)<sp/>{<sp/>close(fdw);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a82517853bf5084320fad8c88f67d29bb" kindref="member">IE_IO_ERR_STAT</ref>;<sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>need_packed<sp/>=<sp/>rows<sp/>*<sp/><ref refid="group__ie__int4__quant_1gae9b8a40c7d01f1fa7f00487737c772b2" kindref="member">ie_int4_rowbytes</ref>(cols);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)stw.st_size<sp/>&lt;<sp/>need_packed)<sp/>{<sp/>close(fdw);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" kindref="member">IE_IO_ERR_READ</ref>;<sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*buf_packed<sp/>=<sp/>(uint8_t*)malloc(need_packed);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf_packed)<sp/>{<sp/>close(fdw);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a215c4a31864749ed0fce240433824032" kindref="member">IE_IO_ERR_ALLOC</ref>;<sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/>ssize_t<sp/>rd<sp/>=<sp/><ref refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" kindref="member">ie_pread</ref>(fdw,<sp/>buf_packed,<sp/>need_packed,<sp/>0);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>close(fdw);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rd<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)rd<sp/>!=<sp/>need_packed)<sp/>{<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" kindref="member">IE_IO_ERR_READ</ref>;<sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Read<sp/>scales<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fds<sp/>=<sp/>open(scales_path,<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fds<sp/>&lt;<sp/>0)<sp/>{<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aba0321da4352c7a61ea1bda842bb64d0" kindref="member">IE_IO_ERR_OPEN</ref>;<sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">stat<sp/>sts;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fstat(fds,<sp/>&amp;sts)<sp/>!=<sp/>0)<sp/>{<sp/>close(fds);<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a82517853bf5084320fad8c88f67d29bb" kindref="member">IE_IO_ERR_STAT</ref>;<sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>need_scales<sp/>=<sp/>per_row<sp/>?<sp/>(rows<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float))<sp/>:<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)sts.st_size<sp/>&lt;<sp/>need_scales)<sp/>{<sp/>close(fds);<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" kindref="member">IE_IO_ERR_READ</ref>;<sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buf_scales<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)malloc(need_scales);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!buf_scales)<sp/>{<sp/>close(fds);<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a215c4a31864749ed0fce240433824032" kindref="member">IE_IO_ERR_ALLOC</ref>;<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/>rd<sp/>=<sp/><ref refid="weights_8c_1aabb19f4a5e5385962c6db57f611bb785" kindref="member">ie_pread</ref>(fds,<sp/>buf_scales,<sp/>need_scales,<sp/>0);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>close(fds);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rd<sp/>&lt;<sp/>0<sp/>||<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)rd<sp/>!=<sp/>need_scales)<sp/>{<sp/>free(buf_scales);<sp/>free(buf_packed);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987aa12fce48fd3eee2bd8a75dc61db150a7" kindref="member">IE_IO_ERR_READ</ref>;<sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Dequantize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(per_row)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>qst<sp/>=<sp/><ref refid="group__ie__int4__quant_1gab017a4b1dff62c0ef8f1ed4f94375302" kindref="member">ie_int4_dequantize_per_row</ref>(buf_packed,<sp/>rows,<sp/>cols,<sp/>buf_scales,<sp/>dst);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>qst<sp/>=<sp/><ref refid="group__ie__int4__quant_1ga7aaa2156d41e9a58eb6013cec4b32d78" kindref="member">ie_int4_dequantize_per_tensor</ref>(buf_packed,<sp/>rows,<sp/>cols,<sp/>buf_scales[0],<sp/>dst);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>free(buf_scales);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>free(buf_packed);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(qst<sp/>!=<sp/><ref refid="group__ie__int4__quant_1ggabdf58fdc422669c3d08610f8d40e43b6a24592f56913c1a24fabf56e9efcff48d" kindref="member">IE_INT4_STATUS_OK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a9b079e5c6f78861150a9bc91623d8c42" kindref="member">IE_IO_ERR_DECODE</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__ie__io__status_1gga4c501870bd45dbe373416745a03de987a81b076a3d2516e2f45170c664c0fa57d" kindref="member">IE_IO_OK</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="engine/src/io/weights.c"/>
  </compounddef>
</doxygen>
