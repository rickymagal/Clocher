<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__kv__instrumentation_8h" kind="file" language="C++">
    <compoundname>ie_kv_instrumentation.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="ie__api_8c" local="yes">engine/src/ie_api.c</includedby>
    <includedby refid="ie__kv__instrumentation_8c" local="yes">engine/src/ie_kv_instrumentation.c</includedby>
    <includedby refid="main__infer_8c" local="yes">engine/src/main_infer.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>engine/include/ie_kv_instrumentation.h</label>
        <link refid="ie__kv__instrumentation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>engine/include/ie_kv_instrumentation.h</label>
        <link refid="ie__kv__instrumentation_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>engine/src/ie_api.c</label>
        <link refid="ie__api_8c"/>
      </node>
      <node id="3">
        <label>engine/src/ie_kv_instrumentation.c</label>
        <link refid="ie__kv__instrumentation_8c"/>
      </node>
      <node id="4">
        <label>engine/src/main_infer.c</label>
        <link refid="main__infer_8c"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_kv_begin_round</definition>
        <argsstring>(void)</argsstring>
        <name>ie_kv_begin_round</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize KV counters and allocate a token set for the round. </para>
        </briefdescription>
        <detaileddescription>
<para>Capacity is read from the environment variable <computeroutput>IE_KV_CAP</computeroutput> if present; otherwise a default capacity of 4096 tokens is used. Passing this function multiple times resets the state (counters and set) for a new round.</para>
<para><simplesect kind="return"><para>0 on success; non-zero on allocation failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_kv_instrumentation.h" line="47" column="5" bodyfile="engine/src/ie_kv_instrumentation.c" bodystart="87" bodyend="111" declfile="engine/include/ie_kv_instrumentation.h" declline="47" declcolumn="5"/>
        <references refid="ie__kv__instrumentation_8c_1a886abd7a4ad752897b4469e29cc344e3" compoundref="ie__kv__instrumentation_8c" startline="45" endline="53">env_size</references>
        <references refid="ie__kv__instrumentation_8c_1a37cc7552afd879b87e4dba0dfdcc607d" compoundref="ie__kv__instrumentation_8c" startline="33">g_kv</references>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__kv__instrumentation_8h_1a27b3df57a37a25798490912b1e92d716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_kv_on_token</definition>
        <argsstring>(uint32_t token)</argsstring>
        <name>ie_kv_on_token</name>
        <param>
          <type>uint32_t</type>
          <declname>token</declname>
        </param>
        <briefdescription>
<para>Report a produced token to the KV tracker. </para>
        </briefdescription>
        <detaileddescription>
<para>If the token is already present in the FIFO set, this increments the <bold>hit</bold> counter. Otherwise it increments <bold>miss</bold> and inserts the token (evicting the oldest element when the set is full).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>32-bit token identifier generated by the model. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_kv_instrumentation.h" line="58" column="6" bodyfile="engine/src/ie_kv_instrumentation.c" bodystart="113" bodyend="121" declfile="engine/include/ie_kv_instrumentation.h" declline="58" declcolumn="6"/>
        <references refid="ie__kv__instrumentation_8c_1a37cc7552afd879b87e4dba0dfdcc607d" compoundref="ie__kv__instrumentation_8c" startline="33">g_kv</references>
        <references refid="ie__kv__instrumentation_8c_1a37bd44541ec645006f436707ca67b407" compoundref="ie__kv__instrumentation_8c" startline="61" endline="66">kv_contains</references>
        <references refid="ie__kv__instrumentation_8c_1a83b5153f7145e76551b31ced07063538" compoundref="ie__kv__instrumentation_8c" startline="73" endline="82">kv_insert_fifo</references>
        <referencedby refid="ie__api_8h_1a21ab40e22d9192fe353ad6640610a01d" compoundref="ie__api_8c" startline="152" endline="189">ie_engine_generate</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__kv__instrumentation_8h_1a2c9789a487a67ebc8e6054aa0b991e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_kv_finish_round</definition>
        <argsstring>(uint64_t total_tokens, uint64_t *out_hits, uint64_t *out_misses)</argsstring>
        <name>ie_kv_finish_round</name>
        <param>
          <type>uint64_t</type>
          <declname>total_tokens</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_hits</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>out_misses</declname>
        </param>
        <briefdescription>
<para>Finalize the round and return hit/miss counters. </para>
        </briefdescription>
        <detaileddescription>
<para>If no tokens were reported (counters are both zero) but <computeroutput>total_tokens</computeroutput> is non-zero, this function conservatively assumes all tokens were <bold>misses</bold>.</para>
<para>This call also frees any internal buffers allocated by <ref refid="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" kindref="member">ie_kv_begin_round()</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>total_tokens</parametername>
</parameternamelist>
<parameterdescription>
<para>Total tokens generated in the round (for fallback). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_hits</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: total hit count (non-NULL). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_misses</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: total miss count (non-NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_kv_instrumentation.h" line="72" column="6" bodyfile="engine/src/ie_kv_instrumentation.c" bodystart="123" bodyend="150" declfile="engine/include/ie_kv_instrumentation.h" declline="72" declcolumn="6"/>
        <references refid="ie__kv__instrumentation_8c_1a37cc7552afd879b87e4dba0dfdcc607d" compoundref="ie__kv__instrumentation_8c" startline="33">g_kv</references>
        <referencedby refid="main__infer_8c_1a3c04138a5bfe5d72780bb7e82a18e627" compoundref="main__infer_8c" startline="474" endline="695">main</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Lightweight KV cache hit/miss instrumentation for benchmarks. </para>
    </briefdescription>
    <detaileddescription>
<para>This module provides a very small, header-only friendly API used by the CLI and by the engine core to count &quot;KV cache&quot; hits and misses during generation.</para>
<sect1 id="ie__kv__instrumentation_8h_1autotoc_md28_1s1"><sect2 id="ie__kv__instrumentation_8h_1autotoc_md28_1s2"><sect3 id="ie__kv__instrumentation_8h_1autotoc_md28">
<title>Model and intent</title><para><itemizedlist>
<listitem><para>We model the KV as a fixed-capacity FIFO set of 32-bit token IDs.</para>
</listitem><listitem><para>A token is a <bold>hit</bold> if it is already present in the set; otherwise it&apos;s a <bold>miss</bold>, and the token is inserted (evicting the oldest when full).</para>
</listitem><listitem><para>Capacity is per-process/round (i.e., per benchmark invocation).</para>
</listitem></itemizedlist>
</para>
</sect3></sect2></sect1>
<sect1 id="ie__kv__instrumentation_8h_1autotoc_md29_1s1"><sect2 id="ie__kv__instrumentation_8h_1autotoc_md29_1s2"><sect3 id="ie__kv__instrumentation_8h_1autotoc_md29">
<title>Lifecycle</title><para><itemizedlist>
<listitem><para>Call <ref refid="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" kindref="member">ie_kv_begin_round()</ref> exactly once before the first token of a round.</para>
</listitem><listitem><para>For each produced token, call <ref refid="ie__kv__instrumentation_8h_1a27b3df57a37a25798490912b1e92d716" kindref="member">ie_kv_on_token()</ref>.</para>
</listitem><listitem><para>At the end, call <ref refid="ie__kv__instrumentation_8h_1a2c9789a487a67ebc8e6054aa0b991e4e" kindref="member">ie_kv_finish_round()</ref> to obtain the counters and release internal buffers.</para>
</listitem></itemizedlist>
</para>
<para>The implementation is intentionally simple (single-threaded), deterministic, and has O(capacity) membership checks. This is sufficient to give meaningful hit/miss ratios for benchmarking without pulling complex dependencies. </para>
</sect3></sect2></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File:<sp/>engine/include/ie_kv_instrumentation.h<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_KV_INSTRUMENTATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_KV_INSTRUMENTATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__kv__instrumentation_8h_1a0a8ac6ff4fa3502470774c6cb9e6f488" kindref="member">ie_kv_begin_round</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__kv__instrumentation_8h_1a27b3df57a37a25798490912b1e92d716" kindref="member">ie_kv_on_token</ref>(uint32_t<sp/>token);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__kv__instrumentation_8h_1a2c9789a487a67ebc8e6054aa0b991e4e" kindref="member">ie_kv_finish_round</ref>(uint64_t<sp/>total_tokens,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*out_hits,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>*out_misses);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_KV_INSTRUMENTATION_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>End<sp/>of<sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>==========================================================================<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="engine/include/ie_kv_instrumentation.h"/>
  </compounddef>
</doxygen>
