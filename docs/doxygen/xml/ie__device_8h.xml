<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__device_8h" kind="file" language="C++">
    <compoundname>ie_device.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="ie__device__common_8c" local="yes">engine/src/devices/ie_device_common.c</includedby>
    <includedby refid="test__device_8c" local="yes">tests/c/test_device.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>engine/include/ie_device.h</label>
        <link refid="ie__device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>engine/include/ie_device.h</label>
        <link refid="ie__device_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>engine/src/devices/ie_device_common.c</label>
        <link refid="ie__device__common_8c"/>
      </node>
      <node id="3">
        <label>tests/c/test_device.c</label>
        <link refid="test__device_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structie__device__caps" prot="public">ie_device_caps</innerclass>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499f" prot="public" static="no" strong="no">
        <type></type>
        <name>ie_device_kind</name>
        <enumvalue id="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" prot="public">
          <name>IE_DEV_CPU</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>CPU backend (always available). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fad76933c12c638e9ceb8afb2420154948" prot="public">
          <name>IE_DEV_CUDA</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>NVIDIA CUDA backend (loaded via dlopen at runtime). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fa3a29450e9feabd789030b167dc34fbd7" prot="public">
          <name>IE_DEV_ZE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>oneAPI Level Zero backend (loaded via dlopen). </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Device kinds supported by the abstraction layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="18" column="1" bodyfile="engine/include/ie_device.h" bodystart="18" bodyend="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" prot="public" static="no">
        <type>enum <ref refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499f" kindref="member">ie_device_kind</ref></type>
        <definition>typedef enum ie_device_kind ie_device_kind_t</definition>
        <argsstring></argsstring>
        <name>ie_device_kind_t</name>
        <briefdescription>
<para>Device kinds supported by the abstraction layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="22" column="18"/>
      </memberdef>
      <memberdef kind="typedef" id="ie__device_8h_1a7c50deaca4d796966353da1769279628" prot="public" static="no">
        <type>struct <ref refid="structie__device" kindref="compound">ie_device</ref></type>
        <definition>typedef struct ie_device ie_device_t</definition>
        <argsstring></argsstring>
        <name>ie_device_t</name>
        <briefdescription>
<para>Opaque device handle (implementation-specific). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="27" column="24" bodyfile="engine/include/ie_device.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ie__device_8h_1aa2d298e25d7b01728fa80d92778822ff" prot="public" static="no">
        <type>struct <ref refid="structie__device__caps" kindref="compound">ie_device_caps</ref></type>
        <definition>typedef struct ie_device_caps ie_device_caps_t</definition>
        <argsstring></argsstring>
        <name>ie_device_caps_t</name>
        <briefdescription>
<para>Capabilities reported by a device backend. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="38" column="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__device_8h_1a3e42fcc4b9579a9bf14520cb1afe733b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_device_create</definition>
        <argsstring>(ie_device_kind_t kind, ie_device_t **out_dev)</argsstring>
        <name>ie_device_create</name>
        <param>
          <type><ref refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" kindref="member">ie_device_kind_t</ref></type>
          <declname>kind</declname>
        </param>
        <param>
          <type><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref> **</type>
          <declname>out_dev</declname>
        </param>
        <briefdescription>
<para>Create a device handle for the requested kind (with fallback). </para>
        </briefdescription>
        <detaileddescription>
<para>If the requested GPU backend is unavailable at runtime, a CPU device is created instead so that inference can proceed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested device kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: device handle on success (non-NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error.</para>
</simplesect>
Create a device handle for the requested kind (with fallback).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>kind</parametername>
</parameternamelist>
<parameterdescription>
<para>Requested kind. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Output: allocated device handle on success. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="50" column="5" bodyfile="engine/src/devices/ie_device_common.c" bodystart="377" bodyend="406" declfile="engine/include/ie_device.h" declline="50" declcolumn="5"/>
        <references refid="structie__device__vtbl_1a44354d7416675f3c11452b5767d392ff" compoundref="ie__device__common_8c" startline="21">ie_device_vtbl::caps</references>
        <references refid="ie__device__common_8c_1a49b8c853d1b641c9402ed5e92d8af962" compoundref="ie__device__common_8c" startline="139" endline="149">cpu_caps</references>
        <references refid="ie__device__common_8c_1a94f0164f6cb0f1f874ad9b18194cfbc2" compoundref="ie__device__common_8c" startline="195" endline="197">cpu_destroy</references>
        <references refid="ie__device__common_8c_1a4fb9bb01bfbe71517f9df925ba9c93ec" compoundref="ie__device__common_8c" startline="164" endline="172">cpu_gemv_f32</references>
        <references refid="ie__device__common_8c_1a4c7a3b8d7f7279d7680aa68e429e6206" compoundref="ie__device__common_8c" startline="183" endline="188">cpu_memcpy</references>
        <references refid="ie__device__common_8c_1a4099e48a20d5155401706f728c99c435" compoundref="ie__device__common_8c" startline="125" endline="130">cpu_new</references>
        <references refid="ie__device__common_8c_1ae4ac15a3b8fea25568b8cdeb2cd781fe" compoundref="ie__device__common_8c" startline="211" endline="229">cuda_try_create</references>
        <references refid="structie__device__vtbl_1a646d8353c3ebf1ba47f4a4ac37efac33" compoundref="ie__device__common_8c" startline="25">ie_device_vtbl::destroy</references>
        <references refid="structie__device__vtbl_1af53f74e97e8a3331b3c9edd24a64e668" compoundref="ie__device__common_8c" startline="22">ie_device_vtbl::gemv_f32</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" compoundref="ie__device_8h" startline="19">IE_DEV_CPU</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fad76933c12c638e9ceb8afb2420154948" compoundref="ie__device_8h" startline="20">IE_DEV_CUDA</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fa3a29450e9feabd789030b167dc34fbd7" compoundref="ie__device_8h" startline="21">IE_DEV_ZE</references>
        <references refid="structie__device_1a909547212afb6612e8d4e0c2fbeaa768" compoundref="ie__device__common_8c" startline="33">ie_device::impl</references>
        <references refid="structie__device_1a155ab991692fdcd2c49275a73416dfba" compoundref="ie__device__common_8c" startline="34">ie_device::kind</references>
        <references refid="structie__device__vtbl_1ad1dd16848b3443345765eba0a865a1b1" compoundref="ie__device__common_8c" startline="24">ie_device_vtbl::memcpy</references>
        <references refid="structie__device_1aeff992a5f5e1b29e4648d630565b6c71" compoundref="ie__device__common_8c" startline="32">ie_device::vt</references>
        <references refid="ie__device__common_8c_1a6877d362577444879b41090af23950d6" compoundref="ie__device__common_8c" startline="295" endline="313">ze_try_create</references>
        <referencedby refid="ie__device_8h_1af9a99d92974f072775057b5def388b77" compoundref="ie__device__common_8c" startline="444" endline="462">ie_device_gemv_f32</referencedby>
        <referencedby refid="ie__device_8h_1ad8fe47f93fa5e18c7cf07a153f1de2fb" compoundref="ie__device__common_8c" startline="473" endline="487">ie_device_memcpy</referencedby>
        <referencedby refid="test__device_8c_1a7b62f3db43117555c60ec59d19c7c8d6" compoundref="test__device_8c" startline="24" endline="31">test_cpu_caps</referencedby>
        <referencedby refid="test__device_8c_1a548e6227513ac3fd772219dad3b0de22" compoundref="test__device_8c" startline="39" endline="48">test_gpu_fallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__device_8h_1a8f8a88a7dd6a58749275d2f3dea9a0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ie_device_destroy</definition>
        <argsstring>(ie_device_t *dev)</argsstring>
        <name>ie_device_destroy</name>
        <param>
          <type><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
<para>Destroy a device handle and release resources. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle previously created by <ref refid="ie__device_8h_1a3e42fcc4b9579a9bf14520cb1afe733b" kindref="member">ie_device_create()</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Destroy a device handle and release resources.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle created by <ref refid="ie__device_8h_1a3e42fcc4b9579a9bf14520cb1afe733b" kindref="member">ie_device_create()</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="57" column="6" bodyfile="engine/src/devices/ie_device_common.c" bodystart="413" bodyend="417" declfile="engine/include/ie_device.h" declline="57" declcolumn="6"/>
        <references refid="structie__device__vtbl_1a646d8353c3ebf1ba47f4a4ac37efac33" compoundref="ie__device__common_8c" startline="25">ie_device_vtbl::destroy</references>
        <references refid="structie__device_1a909547212afb6612e8d4e0c2fbeaa768" compoundref="ie__device__common_8c" startline="33">ie_device::impl</references>
        <references refid="structie__device_1aeff992a5f5e1b29e4648d630565b6c71" compoundref="ie__device__common_8c" startline="32">ie_device::vt</references>
        <referencedby refid="ie__device_8h_1af9a99d92974f072775057b5def388b77" compoundref="ie__device__common_8c" startline="444" endline="462">ie_device_gemv_f32</referencedby>
        <referencedby refid="ie__device_8h_1ad8fe47f93fa5e18c7cf07a153f1de2fb" compoundref="ie__device__common_8c" startline="473" endline="487">ie_device_memcpy</referencedby>
        <referencedby refid="test__device_8c_1a7b62f3db43117555c60ec59d19c7c8d6" compoundref="test__device_8c" startline="24" endline="31">test_cpu_caps</referencedby>
        <referencedby refid="test__device_8c_1a548e6227513ac3fd772219dad3b0de22" compoundref="test__device_8c" startline="39" endline="48">test_gpu_fallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__device_8h_1aa55efab6527903fcc61f787ebc05c1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_device_caps</definition>
        <argsstring>(const ie_device_t *dev, ie_device_caps_t *out_caps)</argsstring>
        <name>ie_device_caps</name>
        <param>
          <type>const <ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type><ref refid="ie__device_8h_1aa2d298e25d7b01728fa80d92778822ff" kindref="member">ie_device_caps_t</ref> *</type>
          <declname>out_caps</declname>
        </param>
        <briefdescription>
<para>Query device capabilities. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_caps</parametername>
</parameternamelist>
<parameterdescription>
<para>Output capabilities structure (non-NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error.</para>
</simplesect>
Query device capabilities.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>out_caps</parametername>
</parameternamelist>
<parameterdescription>
<para>Output capabilities structure (non-NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="66" column="5" bodyfile="engine/src/devices/ie_device_common.c" bodystart="426" bodyend="429" declfile="engine/include/ie_device.h" declline="66" declcolumn="5"/>
        <references refid="structie__device__vtbl_1a44354d7416675f3c11452b5767d392ff" compoundref="ie__device__common_8c" startline="21">ie_device_vtbl::caps</references>
        <references refid="structie__device_1a909547212afb6612e8d4e0c2fbeaa768" compoundref="ie__device__common_8c" startline="33">ie_device::impl</references>
        <references refid="structie__device_1aeff992a5f5e1b29e4648d630565b6c71" compoundref="ie__device__common_8c" startline="32">ie_device::vt</references>
        <referencedby refid="test__device_8c_1a7b62f3db43117555c60ec59d19c7c8d6" compoundref="test__device_8c" startline="24" endline="31">test_cpu_caps</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__device_8h_1af9a99d92974f072775057b5def388b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_device_gemv_f32</definition>
        <argsstring>(ie_device_t *dev, const float *W, const float *x, float *y, size_t rows, size_t cols, const float *bias, size_t blk_k)</argsstring>
        <name>ie_device_gemv_f32</name>
        <param>
          <type><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>blk_k</declname>
        </param>
        <briefdescription>
<para>Device-side GEMV (FP32): y = W * x (+ optional bias). </para>
        </briefdescription>
        <detaileddescription>
<para>Dimensions: W is (rows x cols), x is (cols), y is (rows). Backends may copy buffers or operate in-place if memory is resident on the device.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Row-major FP32 weights matrix of size rows*cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 input vector of length cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>FP32 output vector of length rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W (and y). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in W (and x). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional FP32 bias vector of length rows (NULL if none). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blk_k</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional blocked-K hint (0 to ignore). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero if unimplemented or error.</para>
</simplesect>
Device-side GEMV (FP32): y = W * x (+ optional bias).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Row-major weights. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Input vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Output vector. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows in W / length of y. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols in W / length of x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional bias or NULL. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blk_k</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional blocked-K hint (backend-specific). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="84" column="5" bodyfile="engine/src/devices/ie_device_common.c" bodystart="444" bodyend="462" declfile="engine/include/ie_device.h" declline="84" declcolumn="5"/>
        <references refid="structie__device__vtbl_1af53f74e97e8a3331b3c9edd24a64e668" compoundref="ie__device__common_8c" startline="22">ie_device_vtbl::gemv_f32</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" compoundref="ie__device_8h" startline="19">IE_DEV_CPU</references>
        <references refid="ie__device__common_8c_1a3e42fcc4b9579a9bf14520cb1afe733b" compoundref="ie__device__common_8c" startline="377" endline="406">ie_device_create</references>
        <references refid="ie__device__common_8c_1a8f8a88a7dd6a58749275d2f3dea9a0ab" compoundref="ie__device__common_8c" startline="413" endline="417">ie_device_destroy</references>
        <references refid="ie__device__common_8c_1af9a99d92974f072775057b5def388b77" compoundref="ie__device__common_8c" startline="444" endline="462">ie_device_gemv_f32</references>
        <references refid="structie__device_1a909547212afb6612e8d4e0c2fbeaa768" compoundref="ie__device__common_8c" startline="33">ie_device::impl</references>
        <references refid="structie__device_1a155ab991692fdcd2c49275a73416dfba" compoundref="ie__device__common_8c" startline="34">ie_device::kind</references>
        <references refid="structie__device_1aeff992a5f5e1b29e4648d630565b6c71" compoundref="ie__device__common_8c" startline="32">ie_device::vt</references>
        <referencedby refid="ie__device_8h_1af9a99d92974f072775057b5def388b77" compoundref="ie__device__common_8c" startline="444" endline="462">ie_device_gemv_f32</referencedby>
        <referencedby refid="test__device_8c_1a548e6227513ac3fd772219dad3b0de22" compoundref="test__device_8c" startline="39" endline="48">test_gpu_fallback</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__device_8h_1ad8fe47f93fa5e18c7cf07a153f1de2fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_device_memcpy</definition>
        <argsstring>(ie_device_t *dev, void *dst, const void *src, size_t nbytes)</argsstring>
        <name>ie_device_memcpy</name>
        <param>
          <type><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref> *</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
<para>Copy memory using the device backend. </para>
        </briefdescription>
        <detaileddescription>
<para>For CPU this is a plain memcpy; for GPU this would schedule host/device copies when implemented. Direction is backend-defined for now.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination pointer (host pointer in current implementation). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pointer (host pointer in current implementation). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error.</para>
</simplesect>
Copy memory using the device backend.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dev</parametername>
</parameternamelist>
<parameterdescription>
<para>Device handle. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Source pointer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nbytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to copy. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success; non-zero on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="101" column="5" bodyfile="engine/src/devices/ie_device_common.c" bodystart="473" bodyend="487" declfile="engine/include/ie_device.h" declline="101" declcolumn="5"/>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" compoundref="ie__device_8h" startline="19">IE_DEV_CPU</references>
        <references refid="ie__device__common_8c_1a3e42fcc4b9579a9bf14520cb1afe733b" compoundref="ie__device__common_8c" startline="377" endline="406">ie_device_create</references>
        <references refid="ie__device__common_8c_1a8f8a88a7dd6a58749275d2f3dea9a0ab" compoundref="ie__device__common_8c" startline="413" endline="417">ie_device_destroy</references>
        <references refid="ie__device__common_8c_1ad8fe47f93fa5e18c7cf07a153f1de2fb" compoundref="ie__device__common_8c" startline="473" endline="487">ie_device_memcpy</references>
        <references refid="structie__device_1a909547212afb6612e8d4e0c2fbeaa768" compoundref="ie__device__common_8c" startline="33">ie_device::impl</references>
        <references refid="structie__device_1a155ab991692fdcd2c49275a73416dfba" compoundref="ie__device__common_8c" startline="34">ie_device::kind</references>
        <references refid="structie__device__vtbl_1ad1dd16848b3443345765eba0a865a1b1" compoundref="ie__device__common_8c" startline="24">ie_device_vtbl::memcpy</references>
        <references refid="structie__device_1aeff992a5f5e1b29e4648d630565b6c71" compoundref="ie__device__common_8c" startline="32">ie_device::vt</references>
        <referencedby refid="ie__device_8h_1ad8fe47f93fa5e18c7cf07a153f1de2fb" compoundref="ie__device__common_8c" startline="473" endline="487">ie_device_memcpy</referencedby>
      </memberdef>
      <memberdef kind="function" id="ie__device_8h_1aab258e9f33c12fc1276783d70b8c75a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" kindref="member">ie_device_kind_t</ref></type>
        <definition>ie_device_kind_t ie_device_kind_from_str</definition>
        <argsstring>(const char *s)</argsstring>
        <name>ie_device_kind_from_str</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Parse a device kind from a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Accepts &quot;cpu&quot;, &quot;cuda&quot;, &quot;ze&quot; (case-insensitive). Unknown strings return CPU.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Input string (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Parsed device kind (defaults to IE_DEV_CPU).</para>
</simplesect>
Parse a device kind from a string.</para>
<para>Accepts &quot;cpu&quot;, &quot;cuda&quot;, &quot;ze&quot;. Unknown strings return IE_DEV_CPU.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Input string (may be NULL). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Parsed device kind. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/include/ie_device.h" line="111" column="18" bodyfile="engine/src/devices/ie_device_common.c" bodystart="106" bodyend="116" declfile="engine/include/ie_device.h" declline="111" declcolumn="18"/>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" compoundref="ie__device_8h" startline="19">IE_DEV_CPU</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fad76933c12c638e9ceb8afb2420154948" compoundref="ie__device_8h" startline="20">IE_DEV_CUDA</references>
        <references refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fa3a29450e9feabd789030b167dc34fbd7" compoundref="ie__device_8h" startline="21">IE_DEV_ZE</references>
        <referencedby refid="test__device_8c_1af2262a71f964197c86339e3797d0c9bb" compoundref="test__device_8c" startline="13" endline="19">test_kind_parse</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Device abstraction for CPU/GPU backends selected at runtime. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>IE_DEVICE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IE_DEVICE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499f" kindref="member">ie_device_kind</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fae69c547c69799190aba83e121c0986b5" kindref="member">IE_DEV_CPU</ref><sp/>=<sp/>0,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fad76933c12c638e9ceb8afb2420154948" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fad76933c12c638e9ceb8afb2420154948" kindref="member">IE_DEV_CUDA</ref><sp/>=<sp/>1,<sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fa3a29450e9feabd789030b167dc34fbd7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="ie__device_8h_1ab70318bd3a8798846b5fe0f5f493499fa3a29450e9feabd789030b167dc34fbd7" kindref="member">IE_DEV_ZE</ref><sp/><sp/><sp/>=<sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" refkind="member"><highlight class="normal">}<sp/><ref refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" kindref="member">ie_device_kind_t</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structie__device" kindref="compound">ie_device</ref><sp/><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structie__device__caps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structie__device__caps" kindref="compound">ie_device_caps</ref><sp/>{</highlight></codeline>
<codeline lineno="33" refid="structie__device__caps_1a5ec80f9e6c45476f63cfb02e14b76996" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structie__device__caps_1a5ec80f9e6c45476f63cfb02e14b76996" kindref="member">has_gemv_f32</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34" refid="structie__device__caps_1a895a919343ce237ea1c3e4231e5c4ca2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structie__device__caps_1a895a919343ce237ea1c3e4231e5c4ca2" kindref="member">has_mem_copy</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35" refid="structie__device__caps_1acb89cfdb7c21e1b60d51e45d4faf39a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structie__device__caps_1acb89cfdb7c21e1b60d51e45d4faf39a7" kindref="member">has_streams</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36" refid="structie__device__caps_1a8077e475ea6ed7a265e255add0454957" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structie__device__caps_1a8077e475ea6ed7a265e255add0454957" kindref="member">name</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structie__device__caps_1a771260909362d500182f5d806a415a75" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="structie__device__caps_1a771260909362d500182f5d806a415a75" kindref="member">driver</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="ie__device_8h_1aa2d298e25d7b01728fa80d92778822ff" refkind="member"><highlight class="normal">}<sp/><ref refid="ie__device_8h_1aa2d298e25d7b01728fa80d92778822ff" kindref="member">ie_device_caps_t</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1a3e42fcc4b9579a9bf14520cb1afe733b" kindref="member">ie_device_create</ref>(<ref refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" kindref="member">ie_device_kind_t</ref><sp/>kind,<sp/><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref><sp/>**out_dev);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1a8f8a88a7dd6a58749275d2f3dea9a0ab" kindref="member">ie_device_destroy</ref>(<ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref><sp/>*dev);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1aa55efab6527903fcc61f787ebc05c1e3" kindref="member">ie_device_caps</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref><sp/>*dev,<sp/><ref refid="ie__device_8h_1aa2d298e25d7b01728fa80d92778822ff" kindref="member">ie_device_caps_t</ref><sp/>*out_caps);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1af9a99d92974f072775057b5def388b77" kindref="member">ie_device_gemv_f32</ref>(<ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref><sp/>*dev,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*bias,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blk_k);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device_8h_1ad8fe47f93fa5e18c7cf07a153f1de2fb" kindref="member">ie_device_memcpy</ref>(<ref refid="ie__device_8h_1a7c50deaca4d796966353da1769279628" kindref="member">ie_device_t</ref><sp/>*dev,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbytes);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="ie__device_8h_1a3bcf315cedd0fd154b55784585a9f1ec" kindref="member">ie_device_kind_t</ref><sp/><ref refid="ie__device_8h_1aab258e9f33c12fc1276783d70b8c75a7" kindref="member">ie_device_kind_from_str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_DEVICE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="engine/include/ie_device.h"/>
  </compounddef>
</doxygen>
