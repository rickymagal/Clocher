<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="ie__device__cuda_8cu" kind="file" language="C++">
    <compoundname>ie_device_cuda.cu</compoundname>
    <includes refid="ie__device__cuda_8h" local="yes">ie_device_cuda.h</includes>
    <incdepgraph>
      <node id="2">
        <label>ie_device_cuda.h</label>
        <link refid="ie__device__cuda_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>engine/src/devices/ie_device_cuda.cu</label>
        <link refid="ie__device__cuda_8cu"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="ie__device__cuda_8cu_1aa7d18bba67349415d8d7cf8c92ed5e77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_is_available</definition>
        <argsstring>(void)</argsstring>
        <name>ie_cuda_is_available</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if a CUDA device is available at runtime. </para>
        </briefdescription>
        <detaileddescription>
<para>This attempts to initialize the CUDA runtime and query the number of devices. When the code is compiled without CUDA support (IE_WITH_CUDA!=1), this returns IE_CUDA_UNAVAILABLE.</para>
<para><simplesect kind="return"><para>IE_CUDA_OK if at least one device is present; IE_CUDA_UNAVAILABLE otherwise; IE_CUDA_ERR_RUNTIME on CUDA API failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/devices/ie_device_cuda.cu" line="179" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="179" bodyend="181"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
      <memberdef kind="function" id="ie__device__cuda_8cu_1ab38bd0dae12a57023798df7696aed108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_gemv_f32_strided</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldw_e, size_t row_stride_bytes)</argsstring>
        <name>ie_cuda_gemv_f32_strided</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldw_e</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row_stride_bytes</declname>
        </param>
        <briefdescription>
<para>Convenience that also accepts strides in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>Same as <ref refid="ie__device__cuda_8h_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" kindref="member">ie_cuda_gemv_f32</ref> but allows a byte-stride for W. Useful if the host matrix is subviewed or padded in bytes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to W (row-major). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to x. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to y. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Cols. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldw_e</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension in elements (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_stride_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>Distance in bytes from W[r,0] to W[r+1,0]. If 0, computed as ldw_e*sizeof(float). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IE_CUDA_OK on success or an error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/devices/ie_device_cuda.cu" line="183" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="183" bodyend="193"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
      <memberdef kind="function" id="ie__device__cuda_8cu_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ie_cuda_gemv_f32</definition>
        <argsstring>(const float *W, const float *x, float *y, int rows, int cols, int ldw)</argsstring>
        <name>ie_cuda_gemv_f32</name>
        <param>
          <type>const float *</type>
          <declname>W</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ldw</declname>
        </param>
        <briefdescription>
<para>Run y = W * x using a native CUDA kernel (FP32). </para>
        </briefdescription>
        <detaileddescription>
<para>Layout:<itemizedlist>
<listitem><para>W is row-major with leading dimension <computeroutput>ldw</computeroutput> (ldw &gt;= cols).</para>
</listitem><listitem><para>x is a length-<computeroutput>cols</computeroutput> vector.</para>
</listitem><listitem><para>y is a length-<computeroutput>rows</computeroutput> vector (output).</para>
</listitem></itemizedlist>
</para>
<para>Semantics:<itemizedlist>
<listitem><para>Allocates device buffers, copies W and x H2D, launches kernel, copies y D2H, and frees device buffers. This is correctness-first. We can add persistent allocations in a later iteration.</para>
</listitem></itemizedlist>
</para>
<para>Preconditions:<itemizedlist>
<listitem><para>All pointers must be non-NULL.</para>
</listitem><listitem><para>rows &gt; 0, cols &gt; 0, ldw &gt;= cols.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>W</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to row-major matrix of shape (rows, cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to vector of shape (cols). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Host pointer to output vector of shape (rows). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in W / y length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of cols in W / x length. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ldw</parametername>
</parameternamelist>
<parameterdescription>
<para>Leading dimension of W in elements (&gt;= cols). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>IE_CUDA_OK on success; see return codes above otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="engine/src/devices/ie_device_cuda.cu" line="195" column="5" bodyfile="engine/src/devices/ie_device_cuda.cu" bodystart="195" bodyend="204"/>
        <references refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" compoundref="ie__device__cuda_8h" startline="45">IE_CUDA_UNAVAILABLE</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CUDA backend implementation: device availability + FP32 GEMV kernel. </para>
    </briefdescription>
    <detaileddescription>
<para>This TU compiles with NVCC when IE_WITH_CUDA=1 and provides a minimal, dependency-free GEMV path. It favors clarity and correctness; later we can add persistent buffers and streams.</para>
<sect1 id="ie__device__cuda_8cu_1autotoc_md43_1s1"><sect2 id="ie__device__cuda_8cu_1autotoc_md43">
<title>Kernel strategy</title><para>One thread-block computes one output row (y[r] = dot(W[r,*], x)). Each thread accumulates a partial sum over K with grid-stride loops, then we reduce within the block to a single float and write y[r].</para>
</sect2></sect1>
<sect1 id="ie__device__cuda_8cu_1autotoc_md44_1s1"><sect2 id="ie__device__cuda_8cu_1autotoc_md44">
<title>Notes</title><para><itemizedlist>
<listitem><para>No cuBLAS is used (first-party requirement).</para>
</listitem><listitem><para>Error handling wraps CUDA runtime calls and returns negative codes. </para>
</listitem></itemizedlist>
</para>
</sect2></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ie__device__cuda_8h" kindref="compound">ie_device_cuda.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(IE_WITH_CUDA)<sp/>&amp;&amp;<sp/>(IE_WITH_CUDA+0)==1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>Utilities<sp/>--------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc_from_cuda(cudaError_t<sp/>st)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(st<sp/>==<sp/>cudaSuccess)<sp/>?<sp/><ref refid="ie__kernels__cuda_8cu_1afb3284f12e7d5038612ece3185920449" kindref="member">IE_CUDA_OK</ref><sp/>:<sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>log_cuda_error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>where,<sp/>cudaError_t<sp/>st)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;cuda-error<sp/>at<sp/>%s:<sp/>%s<sp/>(%d)\n&quot;</highlight><highlight class="normal">,<sp/>where,<sp/>cudaGetErrorString(st),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)st);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>------------------------------<sp/>Kernel<sp/>-----------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">__global__<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gemv_rowwise_f32_kernel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>__restrict__<sp/>W,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>__restrict__<sp/>x,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>__restrict__<sp/>y,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_stride_e)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>blockIdx.x;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>handled<sp/>by<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&gt;=<sp/>rows)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>row<sp/>=<sp/>W<sp/>+<sp/>r<sp/>*<sp/>row_stride_e;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>thread<sp/>accumulates<sp/>partial<sp/>over<sp/>K<sp/>with<sp/>grid-stride<sp/>loop<sp/>on<sp/>K.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>threadIdx.x;<sp/>k<sp/>&lt;<sp/>cols;<sp/>k<sp/>+=<sp/>blockDim.x)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>row[k]<sp/>*<sp/>x[k];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Block-wide<sp/>reduction<sp/>in<sp/>shared<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>__shared__<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smem[256];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assumes<sp/>blockDim.x<sp/>&lt;=<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>smem[threadIdx.x]<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduce<sp/>to<sp/>lane<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>blockDim.x<sp/>/<sp/>2;<sp/>offset<sp/>&gt;<sp/>0;<sp/>offset<sp/>&gt;&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>&lt;<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>smem[threadIdx.x]<sp/>+=<sp/>smem[threadIdx.x<sp/>+<sp/>offset];</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>__syncthreads();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(threadIdx.x<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>y[r]<sp/>=<sp/>smem[0];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------<sp/>Public<sp/>API<sp/>----------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1aa7d18bba67349415d8d7cf8c92ed5e77" kindref="member">ie_cuda_is_available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>cudaError_t<sp/>st<sp/>=<sp/>cudaGetDeviceCount(&amp;n);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>driver/runtime<sp/>is<sp/>missing<sp/>or<sp/>not<sp/>initialized,<sp/>treat<sp/>as<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>?<sp/><ref refid="ie__kernels__cuda_8cu_1afb3284f12e7d5038612ece3185920449" kindref="member">IE_CUDA_OK</ref><sp/>:<sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1ab38bd0dae12a57023798df7696aed108" kindref="member">ie_cuda_gemv_f32_strided</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw_e,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_stride_bytes)</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!W<sp/>||<sp/>!x<sp/>||<sp/>!y)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3acead884c6ca62f6c8e186e6fc1957a29" kindref="member">IE_CUDA_EINVAL</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&lt;=<sp/>0<sp/>||<sp/>cols<sp/>&lt;=<sp/>0<sp/>||<sp/>ldw_e<sp/>&lt;<sp/>cols)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3acead884c6ca62f6c8e186e6fc1957a29" kindref="member">IE_CUDA_EINVAL</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>availability<sp/>once;<sp/>if<sp/>no<sp/>device,<sp/>report<sp/>unavailable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rc<sp/>=<sp/><ref refid="ie__device__cuda_8cu_1aa7d18bba67349415d8d7cf8c92ed5e77" kindref="member">ie_cuda_is_available</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rc<sp/>!=<sp/><ref refid="ie__kernels__cuda_8cu_1afb3284f12e7d5038612ece3185920449" kindref="member">IE_CUDA_OK</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_stride_e<sp/>=<sp/>(row_stride_bytes<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)ldw_e</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(row_stride_bytes<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>device<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*dW<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>*dx<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>*dy<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytesW<sp/>=<sp/>(size_t)rows<sp/>*<sp/>row_stride_e<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytesX<sp/>=<sp/>(size_t)cols<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytesY<sp/>=<sp/>(size_t)rows<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>cudaError_t<sp/>st;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMalloc((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;dW,<sp/>bytesW);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMalloc(dW)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMalloc((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;dx,<sp/>bytesX);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMalloc(dx)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/>cudaFree(dW);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMalloc((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**)&amp;dy,<sp/>bytesY);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMalloc(dy)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/>cudaFree(dx);<sp/>cudaFree(dW);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>inputs<sp/>H2D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMemcpy(dW,<sp/>W,<sp/>bytesW,<sp/>cudaMemcpyHostToDevice);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMemcpy(dW)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/>cudaFree(dy);<sp/>cudaFree(dx);<sp/>cudaFree(dW);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMemcpy(dx,<sp/>x,<sp/>bytesX,<sp/>cudaMemcpyHostToDevice);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMemcpy(dx)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/>cudaFree(dy);<sp/>cudaFree(dx);<sp/>cudaFree(dW);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Launch<sp/>kernel:<sp/>one<sp/>block<sp/>per<sp/>row;<sp/>256<sp/>threads<sp/>per<sp/>block<sp/>(safe<sp/>upper<sp/>shared<sp/>size).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>dim3<sp/>grid(rows);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>dim3<sp/>block(256);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>gemv_rowwise_f32_kernel&lt;&lt;&lt;grid,<sp/>block&gt;&gt;&gt;(dW,<sp/>dx,<sp/>dy,<sp/>rows,<sp/>cols,<sp/>ldw_e,<sp/>row_stride_e);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaGetLastError();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;kernel<sp/>launch&quot;</highlight><highlight class="normal">,<sp/>st);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>cudaFree(dy);<sp/>cudaFree(dx);<sp/>cudaFree(dW);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>result<sp/>D2H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>st<sp/>=<sp/>cudaMemcpy(y,<sp/>dy,<sp/>bytesY,<sp/>cudaMemcpyDeviceToHost);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>!=<sp/>cudaSuccess)<sp/>{<sp/>log_cuda_error(</highlight><highlight class="stringliteral">&quot;cudaMemcpy(y)&quot;</highlight><highlight class="normal">,<sp/>st);<sp/>cudaFree(dy);<sp/>cudaFree(dx);<sp/>cudaFree(dW);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ab655b691a092d83c17a248a73e728c62" kindref="member">IE_CUDA_ERR_RUNTIME</ref>;<sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Cleanup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>cudaFree(dy);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>cudaFree(dx);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>cudaFree(dW);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__kernels__cuda_8cu_1afb3284f12e7d5038612ece3185920449" kindref="member">IE_CUDA_OK</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" kindref="member">ie_cuda_gemv_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1ab38bd0dae12a57023798df7696aed108" kindref="member">ie_cuda_gemv_f32_strided</ref>(W,<sp/>x,<sp/>y,<sp/>rows,<sp/>cols,<sp/>ldw,<sp/>0<sp/></highlight><highlight class="comment">/*<sp/>row_stride_bytes<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">/*<sp/>IE_WITH_CUDA<sp/>!=<sp/>1<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="ie__device__cuda_8h_1aa7d18bba67349415d8d7cf8c92ed5e77" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1aa7d18bba67349415d8d7cf8c92ed5e77" kindref="member">ie_cuda_is_available</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="ie__device__cuda_8h_1ab38bd0dae12a57023798df7696aed108" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1ab38bd0dae12a57023798df7696aed108" kindref="member">ie_cuda_gemv_f32_strided</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw_e,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_stride_bytes)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>(void)W;<sp/>(void)x;<sp/>(void)y;<sp/>(void)rows;<sp/>(void)cols;<sp/>(void)ldw_e;<sp/>(void)row_stride_bytes;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="ie__device__cuda_8h_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8cu_1a7a6bd0e62e98b11d8cae42ab6f2be3f0" kindref="member">ie_cuda_gemv_f32</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*W,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*x,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*y,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rows,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ldw)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>(void)W;<sp/>(void)x;<sp/>(void)y;<sp/>(void)rows;<sp/>(void)cols;<sp/>(void)ldw;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="ie__device__cuda_8h_1ab5ea2183eea72af72b4263e9a34ee1f3ad12c1ba307d459bcbc20c7ccb8b0b584" kindref="member">IE_CUDA_UNAVAILABLE</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>IE_WITH_CUDA<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="engine/src/devices/ie_device_cuda.cu"/>
  </compounddef>
</doxygen>
